{"version":3,"sources":["webpack:///js/entry.js","webpack:///webpack/bootstrap 3e4216014ed36b2c3373","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../node_modules/process/browser.js","webpack:///./entry.js","webpack:///../node_modules/es6-shim/es6-shim.js","webpack:///../node_modules/isomorphic-fetch/fetch-npm-browserify.js","webpack:///../node_modules/whatwg-fetch/fetch.js","webpack:///../node_modules/es6-promise/dist/es6-promise.js","webpack:///./js/app.js","webpack:///external \"$\""],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","length","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","__webpack_exports__","value","__WEBPACK_IMPORTED_MODULE_0_es6_shim__","__WEBPACK_IMPORTED_MODULE_1_isomorphic_fetch__","__WEBPACK_IMPORTED_MODULE_2_es6_promise__","__WEBPACK_IMPORTED_MODULE_6__js_app_js__","polyfill","global","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","undefined","ArrayIterator","_apply","bind","_call","isArray","keys","throwsError","func","valueOrFalseIfThrows","isCallableWithoutNew","supportsDescriptors","functionsHaveNames","_forEach","forEach","_reduce","reduce","_filter","filter","_some","some","force","writable","defineProperties","map","forceOverride","method","_toString","toString","isCallable","x","Value","TypeError","proxy","originalObject","key","targetObject","originalDescriptor","getOwnPropertyDescriptor","set","redefine","newValue","descriptor","defineByDescriptor","preserveToString","target","source","create","properties","Prototype","supportsSubclassing","C","f","setPrototypeOf","Sub","Subclass","arg","constructor","globals","self","globalIsFinite","isFinite","_indexOf","String","indexOf","_arrayIndexOfApply","_concat","_strSlice","slice","_push","_pushApply","_shift","shift","_max","Math","max","_min","min","_floor","floor","_abs","abs","_exp","exp","_log","log","_sqrt","sqrt","_hasOwnProperty","OrigMap","Map","origMapDelete","origMapGet","origMapHas","has","origMapSet","Symbol","symbolSpecies","species","numberIsNaN","Number","isNaN","numberIsFinite","_sign","sign","number","isStandardArguments","isLegacyArguments","callee","isArguments","Type","primitive","string","regex","symbol","overrideNative","replacement","original","hasSymbols","$iterator$","iterator","Set","Reflect","$String","domAll","document","all","isNullOrUndefined","ES","Call","F","V","IsCallable","RequireObjectCoercible","optMessage","TypeIsObject","ToObject","IsConstructor","ToInt32","ToNumber","ToUint32","ToInteger","ToLength","MAX_SAFE_INTEGER","SameValue","a","b","SameValueZero","IsIterable","GetIterator","itFn","GetMethod","it","IteratorComplete","iterResult","done","IteratorClose","completionIsThrow","returnMethod","innerResult","innerException","IteratorNext","result","next","IteratorStep","Construct","newTarget","isES6internal","construct","proto","obj","SpeciesConstructor","O","defaultConstructor","S","CreateHTML","tag","attribute","ToString","p1","replace","IsRegExp","argument","isRegExp","match","defineWellKnownSymbol","sym","search","symbolSearch","originalSearch","RegExp","searchShim","regexp","searcher","symbolReplace","originalReplace","replaceValue","replaceShim","searchValue","replacer","split","symbolSplit","originalSplit","limit","splitShim","separator","splitter","symbolMatchExists","stringMatchIgnoresSymbolMatch","symbolMatch","originalMatch","matchShim","matcher","wrapConstructor","keysToSkip","getOwnPropertyNames","defaultSpeciesGetter","addDefaultSpecies","addIterator","impl","implementation","createDataProperty","createDataPropertyOrThrow","emulateES6construct","defaultNewTarget","defaultProto","slots","fromCodePoint","originalFromCodePoint","codePoints","StringShims","RangeError","fromCharCode","join","raw","callSite","cooked","rawString","literalsegments","nextKey","nextSeg","nextSub","stringElements","nextIndex","0","1","stringRepeat","repeat","times","half","StringPrototypeShims","thisStr","numTimes","Infinity","startsWith","searchString","position","searchStr","start","endsWith","endPosition","pos","end","includes","codePointAt","first","charCodeAt","isEnd","second","startsWithRejectsRegex","startsWithHandlesInfinity","re","ws","trimRegexp","trimShim","nonWS","nonWSregex","isBadHexRegex","hasStringTrimBug","trim","iteratorResult","StringIterator","_s","_i","substr","ArrayShims","from","items","mapFn","mapping","T","usingIterator","nextValue","arrayLike","of","A","k","kind","retval","Foo","fooArr","ArrayPrototypeShims","copyWithin","relativeTarget","relativeStart","to","relativeEnd","finalItem","count","direction","fill","find","predicate","list","thisArg","findIndex","values","entries","unscopables","originalArrayPrototypeValues","searchElement","getPrototypeOf","arrayFromSwallowsNegativeLengths","arrayFromHandlesIterables","arr","origArrayFrom","int32sAsOne","pow","toLengthsCorrectly","reversed","originalForEach","callbackFn","originalMap","originalFilter","originalSome","every","originalEvery","originalReduce","reduceRight","originalReduceRight","lacksOctalSupport","lacksBinarySupport","trimsNonWhitespace","OrigNumber","binaryRegex","octalRegex","isBinary","test","isOctal","toPrimitive","valueOf","hasNonWS","isBadHex","NumberShim","primValue","parseInt","NaN","receiver","valueOfSucceeds","MAX_VALUE","MIN_VALUE","NEGATIVE_INFINITY","POSITIVE_INFINITY","maxSafeInteger","MIN_SAFE_INTEGER","EPSILON","parseFloat","isInteger","isSafeInteger","isEnumerableOn","propertyIsEnumerable","ensureEnumerable","prop","sliceArgs","initial","desiredArgCount","assignTo","assignReducer","symbols","sourceKeys","getOwnPropertySymbols","ObjectShims","assign","is","preventExtensions","thrower","ES5ObjectShims","magic","checkArgs","FAKENULL","gpo","spo","originalObjectKeys","regexRejectingObjectKeys","regexKeys","cachedWindowNames","originalObjectGetOwnPropertyNames","val","originalObjectGetOwnPropertyDescriptor","seal","originalObjectSeal","isSealed","originalObjectIsSealed","freeze","originalObjectFreeze","isFrozen","originalObjectIsFrozen","originalObjectPreventExtensions","isExtensible","originalObjectIsExtensible","originalGetProto","hasFlags","desc","regExpFlagsGetter","ignoreCase","multiline","unicode","sticky","regExpSupportsFlagsWithRegex","regExpNeedsToSupportSymbolMatch","regexToStringIsGeneric","regexToStringSupportsGenericFlags","flags","origRegExpToString","R","flagsGetter","sourceDesc","legacySourceGetter","sourceGetter","OrigRegExp","RegExpShim","pattern","patternIsRegExp","P","$input","regexGlobals","input","lastMatch","lastParen","leftContext","rightContext","inverseEpsilon","roundTiesToEven","BINARY_32_EPSILON","BINARY_32_MAX_VALUE","BINARY_32_MIN_VALUE","E","LOG2E","LOG10E","numberCLZ","clz","MathShims","acosh","asinh","atanh","cbrt","negate","clz32","cosh","expm1","t","sum","hypot","y","largest","log2","log10","log1p","sinh","tanh","trunc","imul","ah","al","bh","bl","fround","v","expm1OfTen","origMathRound","round","roundHandlesBoundaryConditions","smallestPositiveNumberWhereRoundBreaks","largestPositiveNumberWhereRoundBreaks","roundDoesNotIncreaseIntegers","num","ceil","origImul","PromiseShim","IsPromise","promise","_promise","makeZeroTimeout","PromiseCapability","capability","resolver","resolve","reject","postMessage","timeouts","setZeroTimeout","fn","handleMessage","event","data","stopPropagation","addEventListener","Promise$prototype","Promise$prototype$then","enqueue","setImmediate","Promise","pr","task","then","PROMISE_IDENTITY","PROMISE_THROWER","PROMISE_FAKE_CAPABILITY","enqueuePromiseReactionJob","handler","promiseReactionJob","promiseCapability","handlerResult","fulfillPromise","reactionLength","fulfillReactionHandler0","reactionCapability0","rejectReactions0","idx","state","rejectPromise","reason","rejectReactionHandler0","createResolvingFunctions","alreadyResolved","resolution","promiseResolveThenableJob","optimizedThen","thenable","resolvingFunctions","_promiseAllResolver","index","remaining","alreadyCalled","performPromiseAll","iteratorRecord","resultCapability","nextPromise","resolveElement","performPromiseRace","iterable","exception","ee","race","rejectFunc","resolveFunc","catch","onRejected","onFulfilled","fulfillReactionHandler","rejectReactionHandler","accept","defer","chain","promiseSupportsSubclassing","promiseIgnoresNonFunctionThenCallbacks","promiseRequiresObjectContext","promiseResolveBroken","p2","getsThenSynchronously","BadResolverPromise","executor","hasBadResolverPromise","origAll","origRace","origResolve","origReject","r","testOrder","preservesInsertionOrder","preservesNumericInsertionOrder","fastkey","skipInsertionOrderCheck","emptyObject","addIterableToMap","MapConstructor","entry","iter","adder","nextItem","addIterableToSet","SetConstructor","add","collectionShims","empty","MapEntry","prev","isRemoved","isMap","_es6map","requireMapSlot","MapIterator","head","_head","Map$prototype","MapShim","_map","_size","_storage","fkey","delete","clear","callback","context","Set$prototype","isSet","_es6set","requireSetSlot","SetShim","[[SetData]]","decodeKey","charAt","ensureMap","size","hasFKey","entireSet","testMap","mapUsesSameValueZero","mapSupportsChaining","testSet","setUsesSameValueZero","setSupportsChaining","origSetAdd","origSetHas","origSetDel","mapSupportsSubclassing","M","mapFailsToSupportSubclassing","mapRequiresNew","setSupportsSubclassing","setFailsToSupportSubclassing","setRequiresNew","OrigSet","newMap","mapIterationThrowsStopIterator","anonymousSetHas","throwUnlessTargetIsObject","ReflectShims","deleteProperty","ownKeys","callAndCatchException","internalGet","parent","internalSet","propertyKey","attributes","objectDotGetPrototypeOf","willCreateCircularPrototype","lastProto","defineOrOverrideReflectProperty","shim","originalReflectGetProto","basic","extensible","Date","dateToString","shimmedDateToString","stringHTMLshims","anchor","big","blink","bold","fixed","fontcolor","color","fontsize","italics","link","url","small","strike","sub","sup","shouldOverwrite","output","quotesCount","toLowerCase","JSONstringifiesSymbols","stringify","JSON","JSONstringifyAcceptsObjectSymbol","origStringify","replaceFn","wrappedReplacer","parsedValue","fetch","normalizeName","normalizeValue","iteratorFor","support","Headers","headers","append","header","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","error","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","Uint8Array","chars","bufferClone","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","ArrayBuffer","isArrayBufferView","type","rejected","text","decode","json","parse","normalizeMethod","upcased","toUpperCase","methods","Request","options","credentials","mode","referrer","form","bytes","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","status","ok","statusText","viewClasses","DataView","isView","oldValue","clone","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","objectOrFunction","isFunction","setScheduler","scheduleFn","customSchedulerFn","setAsap","asapFn","asap","useVertxTimer","vertxNext","flush","useSetTimeout","globalSetTimeout","onFulfillment","onRejection","child","PROMISE_ID","makePromise","_state","invokeCallback","_result","subscribe","resolve$1","Constructor","selfFulfillment","cannotReturnOwn","getThen","TRY_CATCH_ERROR","tryThen","then$$1","fulfillmentHandler","rejectionHandler","handleForeignThenable","sealed","fulfill","_label","handleOwnThenable","FULFILLED","REJECTED","handleMaybeThenable","maybeThenable","publishRejection","_onerror","publish","PENDING","_subscribers","subscribers","settled","detail","tryCatch","hasCallback","succeeded","failed","initializePromise","nextId","id","validationError","Enumerator","_","reject$1","needsResolver","needsNew","local","promiseToString","cast","Promise$1","_isArray","scheduleFlush","browserWindow","browserGlobal","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","isNode","isWorker","Uint8ClampedArray","importScripts","MessageChannel","iterations","observer","node","createTextNode","observe","characterData","channel","port1","onmessage","port2","vertx","require","runOnLoop","runOnContext","random","substring","_instanceConstructor","_remaining","_enumerate","_eachEntry","resolve$$1","_then","_settledAt","_willSettleAt","enumerator","finally","_setScheduler","_setAsap","_asap","__WEBPACK_IMPORTED_MODULE_0__scss_identity_scss__","__WEBPACK_IMPORTED_MODULE_0__header_scss__","__WEBPACK_IMPORTED_MODULE_0__footer_scss__","$","foundation"],"mappings":"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","file":"js/entry.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"../\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 2);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_es6_shim__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_es6_shim___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_es6_shim__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_isomorphic_fetch__ = __webpack_require__(4);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_isomorphic_fetch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_isomorphic_fetch__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_es6_promise__ = __webpack_require__(6);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_es6_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_es6_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__components_identity_index_js__ = __webpack_require__(7);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__components_header_index_js__ = __webpack_require__(9);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__components_footer_index_js__ = __webpack_require__(11);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__js_app_js__ = __webpack_require__(13);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__js_app_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__js_app_js__);\n\n\n\n__WEBPACK_IMPORTED_MODULE_2_es6_promise__[\"Promise\"].polyfill();\n\n\n\n\n\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global, process) {var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__; /*!\n  * https://github.com/paulmillr/es6-shim\n  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n  *   and contributors,  MIT License\n  * es6-shim: v0.35.1\n  * see https://github.com/paulmillr/es6-shim/blob/0.35.1/LICENSE\n  * Details and documentation:\n  * https://github.com/paulmillr/es6-shim/\n  */\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n  /*global define, module, exports */\n  if (true) {\n    // AMD. Register as an anonymous module.\n    !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory();\n  }\n}(this, function () {\n  'use strict';\n\n  var _apply = Function.call.bind(Function.apply);\n  var _call = Function.call.bind(Function.call);\n  var isArray = Array.isArray;\n  var keys = Object.keys;\n\n  var not = function notThunker(func) {\n    return function notThunk() {\n      return !_apply(func, this, arguments);\n    };\n  };\n  var throwsError = function (func) {\n    try {\n      func();\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n    try {\n      return func();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var isCallableWithoutNew = not(throwsError);\n  var arePropertyDescriptorsSupported = function () {\n    // if Object.defineProperty exists but throws, it's IE 8\n    return !throwsError(function () {\n      Object.defineProperty({}, 'x', { get: function () {} });\n    });\n  };\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n  var functionsHaveNames = (function foo() {}).name === 'foo'; // eslint-disable-line no-extra-parens\n\n  var _forEach = Function.call.bind(Array.prototype.forEach);\n  var _reduce = Function.call.bind(Array.prototype.reduce);\n  var _filter = Function.call.bind(Array.prototype.filter);\n  var _some = Function.call.bind(Array.prototype.some);\n\n  var defineProperty = function (object, name, value, force) {\n    if (!force && name in object) { return; }\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  // Define configurable, writable and non-enumerable props\n  // if they don’t exist.\n  var defineProperties = function (object, map, forceOverride) {\n    _forEach(keys(map), function (name) {\n      var method = map[name];\n      defineProperty(object, name, method, !!forceOverride);\n    });\n  };\n\n  var _toString = Function.call.bind(Object.prototype.toString);\n  var isCallable =  false ? function IsCallableSlow(x) {\n    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\n    return typeof x === 'function' && _toString(x) === '[object Function]';\n  } : function IsCallableFast(x) { return typeof x === 'function'; };\n\n  var Value = {\n    getter: function (object, name, getter) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        get: getter\n      });\n    },\n    proxy: function (originalObject, key, targetObject) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n      Object.defineProperty(targetObject, key, {\n        configurable: originalDescriptor.configurable,\n        enumerable: originalDescriptor.enumerable,\n        get: function getKey() { return originalObject[key]; },\n        set: function setKey(value) { originalObject[key] = value; }\n      });\n    },\n    redefine: function (object, property, newValue) {\n      if (supportsDescriptors) {\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n        descriptor.value = newValue;\n        Object.defineProperty(object, property, descriptor);\n      } else {\n        object[property] = newValue;\n      }\n    },\n    defineByDescriptor: function (object, property, descriptor) {\n      if (supportsDescriptors) {\n        Object.defineProperty(object, property, descriptor);\n      } else if ('value' in descriptor) {\n        object[property] = descriptor.value;\n      }\n    },\n    preserveToString: function (target, source) {\n      if (source && isCallable(source.toString)) {\n        defineProperty(target, 'toString', source.toString.bind(source), true);\n      }\n    }\n  };\n\n  // Simple shim for Object.create on ES3 browsers\n  // (unlike real shim, no attempt to support `prototype === null`)\n  var create = Object.create || function (prototype, properties) {\n    var Prototype = function Prototype() {};\n    Prototype.prototype = prototype;\n    var object = new Prototype();\n    if (typeof properties !== 'undefined') {\n      keys(properties).forEach(function (key) {\n        Value.defineByDescriptor(object, key, properties[key]);\n      });\n    }\n    return object;\n  };\n\n  var supportsSubclassing = function (C, f) {\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n    return valueOrFalseIfThrows(function () {\n      var Sub = function Subclass(arg) {\n        var o = new C(arg);\n        Object.setPrototypeOf(o, Subclass.prototype);\n        return o;\n      };\n      Object.setPrototypeOf(Sub, C);\n      Sub.prototype = create(C.prototype, {\n        constructor: { value: Sub }\n      });\n      return f(Sub);\n    });\n  };\n\n  var getGlobal = function () {\n    /* global self, window, global */\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n  };\n\n  var globals = getGlobal();\n  var globalIsFinite = globals.isFinite;\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n  var _concat = Function.call.bind(Array.prototype.concat);\n  // var _sort = Function.call.bind(Array.prototype.sort);\n  var _strSlice = Function.call.bind(String.prototype.slice);\n  var _push = Function.call.bind(Array.prototype.push);\n  var _pushApply = Function.apply.bind(Array.prototype.push);\n  var _shift = Function.call.bind(Array.prototype.shift);\n  var _max = Math.max;\n  var _min = Math.min;\n  var _floor = Math.floor;\n  var _abs = Math.abs;\n  var _exp = Math.exp;\n  var _log = Math.log;\n  var _sqrt = Math.sqrt;\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  var ArrayIterator; // make our implementation private\n  var noop = function () {};\n\n  var OrigMap = globals.Map;\n  var origMapDelete = OrigMap && OrigMap.prototype['delete'];\n  var origMapGet = OrigMap && OrigMap.prototype.get;\n  var origMapHas = OrigMap && OrigMap.prototype.has;\n  var origMapSet = OrigMap && OrigMap.prototype.set;\n\n  var Symbol = globals.Symbol || {};\n  var symbolSpecies = Symbol.species || '@@species';\n\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\n    // then x is NaN.\n    // isNaN is broken: it converts its argument to number, so\n    // isNaN('foo') => true\n    return value !== value;\n  };\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\n    return typeof value === 'number' && globalIsFinite(value);\n  };\n  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {\n    var number = Number(value);\n    if (number === 0) { return number; }\n    if (numberIsNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  };\n\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n  // can be replaced with require('is-arguments') if we ever use a build process instead\n  var isStandardArguments = function isArguments(value) {\n    return _toString(value) === '[object Arguments]';\n  };\n  var isLegacyArguments = function isArguments(value) {\n    return value !== null &&\n      typeof value === 'object' &&\n      typeof value.length === 'number' &&\n      value.length >= 0 &&\n      _toString(value) !== '[object Array]' &&\n      _toString(value.callee) === '[object Function]';\n  };\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n  var Type = {\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n    string: function (x) { return _toString(x) === '[object String]'; },\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n    symbol: function (x) {\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n    }\n  };\n\n  var overrideNative = function overrideNative(object, property, replacement) {\n    var original = object[property];\n    defineProperty(object, property, replacement, true);\n    Value.preserveToString(object[property], original);\n  };\n\n  // eslint-disable-next-line no-restricted-properties\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n  // we're going to use an arbitrary _-prefixed name to make our shims\n  // work properly with each other, even though we don't have full Iterator\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\n  // pretend to export a \"real\" Iterator interface.\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n  // Firefox ships a partial implementation using the name @@iterator.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n  // So use that name if we detect it.\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  // Reflect\n  if (!globals.Reflect) {\n    defineProperty(globals, 'Reflect', {}, true);\n  }\n  var Reflect = globals.Reflect;\n\n  var $String = String;\n\n  /* global document */\n  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;\n  /* jshint eqnull:true */\n  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {\n    /* jshint eqnull:true */\n    return x == null;\n  } : function isNullOrUndefinedAndNotDocumentAll(x) {\n    /* jshint eqnull:true */\n    return x == null && x !== domAll;\n  };\n\n  var ES = {\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-call\n    Call: function Call(F, V) {\n      var args = arguments.length > 2 ? arguments[2] : [];\n      if (!ES.IsCallable(F)) {\n        throw new TypeError(F + ' is not a function');\n      }\n      return _apply(F, V, args);\n    },\n\n    RequireObjectCoercible: function (x, optMessage) {\n      if (isNullOrUndefined(x)) {\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n      }\n      return x;\n    },\n\n    // This might miss the \"(non-standard exotic and does not implement\n    // [[Call]])\" case from\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n    // but we can't find any evidence these objects exist in practice.\n    // If we find some in the future, you could test `Object(x) === x`,\n    // which is reliable according to\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n    // but is not well optimized by runtimes and creates an object\n    // whenever it returns false, and thus is very slow.\n    TypeIsObject: function (x) {\n      if (x === void 0 || x === null || x === true || x === false) {\n        return false;\n      }\n      return typeof x === 'function' || typeof x === 'object' || x === domAll;\n    },\n\n    ToObject: function (o, optMessage) {\n      return Object(ES.RequireObjectCoercible(o, optMessage));\n    },\n\n    IsCallable: isCallable,\n\n    IsConstructor: function (x) {\n      // We can't tell callables from constructors in ES5\n      return ES.IsCallable(x);\n    },\n\n    ToInt32: function (x) {\n      return ES.ToNumber(x) >> 0;\n    },\n\n    ToUint32: function (x) {\n      return ES.ToNumber(x) >>> 0;\n    },\n\n    ToNumber: function (value) {\n      if (_toString(value) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return +value;\n    },\n\n    ToInteger: function (value) {\n      var number = ES.ToNumber(value);\n      if (numberIsNaN(number)) { return 0; }\n      if (number === 0 || !numberIsFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n    },\n\n    ToLength: function (value) {\n      var len = ES.ToInteger(value);\n      if (len <= 0) { return 0; } // includes converting -0 to +0\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n      return len;\n    },\n\n    SameValue: function (a, b) {\n      if (a === b) {\n        // 0 === -0, but they are not identical.\n        if (a === 0) { return 1 / a === 1 / b; }\n        return true;\n      }\n      return numberIsNaN(a) && numberIsNaN(b);\n    },\n\n    SameValueZero: function (a, b) {\n      // same as SameValue except for SameValueZero(+0, -0) == true\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n    },\n\n    IsIterable: function (o) {\n      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\n    },\n\n    GetIterator: function (o) {\n      if (isArguments(o)) {\n        // special case support for `arguments`\n        return new ArrayIterator(o, 'value');\n      }\n      var itFn = ES.GetMethod(o, $iterator$);\n      if (!ES.IsCallable(itFn)) {\n        // Better diagnostics if itFn is null or undefined\n        throw new TypeError('value is not an iterable');\n      }\n      var it = ES.Call(itFn, o);\n      if (!ES.TypeIsObject(it)) {\n        throw new TypeError('bad iterator');\n      }\n      return it;\n    },\n\n    GetMethod: function (o, p) {\n      var func = ES.ToObject(o)[p];\n      if (isNullOrUndefined(func)) {\n        return void 0;\n      }\n      if (!ES.IsCallable(func)) {\n        throw new TypeError('Method not callable: ' + p);\n      }\n      return func;\n    },\n\n    IteratorComplete: function (iterResult) {\n      return !!iterResult.done;\n    },\n\n    IteratorClose: function (iterator, completionIsThrow) {\n      var returnMethod = ES.GetMethod(iterator, 'return');\n      if (returnMethod === void 0) {\n        return;\n      }\n      var innerResult, innerException;\n      try {\n        innerResult = ES.Call(returnMethod, iterator);\n      } catch (e) {\n        innerException = e;\n      }\n      if (completionIsThrow) {\n        return;\n      }\n      if (innerException) {\n        throw innerException;\n      }\n      if (!ES.TypeIsObject(innerResult)) {\n        throw new TypeError(\"Iterator's return method returned a non-object.\");\n      }\n    },\n\n    IteratorNext: function (it) {\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n      if (!ES.TypeIsObject(result)) {\n        throw new TypeError('bad iterator');\n      }\n      return result;\n    },\n\n    IteratorStep: function (it) {\n      var result = ES.IteratorNext(it);\n      var done = ES.IteratorComplete(result);\n      return done ? false : result;\n    },\n\n    Construct: function (C, args, newTarget, isES6internal) {\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\n      if (!isES6internal && Reflect.construct) {\n        // Try to use Reflect.construct if available\n        return Reflect.construct(C, args, target);\n      }\n      // OK, we have to fake it.  This will only work if the\n      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n      // kind we can make in ES5 code anyway.\n\n      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n      var proto = target.prototype;\n      if (!ES.TypeIsObject(proto)) {\n        proto = Object.prototype;\n      }\n      var obj = create(proto);\n      // Call the constructor.\n      var result = ES.Call(C, obj, args);\n      return ES.TypeIsObject(result) ? result : obj;\n    },\n\n    SpeciesConstructor: function (O, defaultConstructor) {\n      var C = O.constructor;\n      if (C === void 0) {\n        return defaultConstructor;\n      }\n      if (!ES.TypeIsObject(C)) {\n        throw new TypeError('Bad constructor');\n      }\n      var S = C[symbolSpecies];\n      if (isNullOrUndefined(S)) {\n        return defaultConstructor;\n      }\n      if (!ES.IsConstructor(S)) {\n        throw new TypeError('Bad @@species');\n      }\n      return S;\n    },\n\n    CreateHTML: function (string, tag, attribute, value) {\n      var S = ES.ToString(string);\n      var p1 = '<' + tag;\n      if (attribute !== '') {\n        var V = ES.ToString(value);\n        var escapedV = V.replace(/\"/g, '&quot;');\n        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n      }\n      var p2 = p1 + '>';\n      var p3 = p2 + S;\n      return p3 + '</' + tag + '>';\n    },\n\n    IsRegExp: function IsRegExp(argument) {\n      if (!ES.TypeIsObject(argument)) {\n        return false;\n      }\n      var isRegExp = argument[Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return !!isRegExp;\n      }\n      return Type.regex(argument);\n    },\n\n    ToString: function ToString(string) {\n      return $String(string);\n    }\n  };\n\n  // Well-known Symbol shims\n  if (supportsDescriptors && hasSymbols) {\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n      if (Type.symbol(Symbol[name])) {\n        return Symbol[name];\n      }\n      // eslint-disable-next-line no-restricted-properties\n      var sym = Symbol['for']('Symbol.' + name);\n      Object.defineProperty(Symbol, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: sym\n      });\n      return sym;\n    };\n    if (!Type.symbol(Symbol.search)) {\n      var symbolSearch = defineWellKnownSymbol('search');\n      var originalSearch = String.prototype.search;\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n        return ES.Call(originalSearch, string, [this]);\n      });\n      var searchShim = function search(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var searcher = ES.GetMethod(regexp, symbolSearch);\n          if (typeof searcher !== 'undefined') {\n            return ES.Call(searcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'search', searchShim);\n    }\n    if (!Type.symbol(Symbol.replace)) {\n      var symbolReplace = defineWellKnownSymbol('replace');\n      var originalReplace = String.prototype.replace;\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n        return ES.Call(originalReplace, string, [this, replaceValue]);\n      });\n      var replaceShim = function replace(searchValue, replaceValue) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(searchValue)) {\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\n          if (typeof replacer !== 'undefined') {\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\n          }\n        }\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n      };\n      overrideNative(String.prototype, 'replace', replaceShim);\n    }\n    if (!Type.symbol(Symbol.split)) {\n      var symbolSplit = defineWellKnownSymbol('split');\n      var originalSplit = String.prototype.split;\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n        return ES.Call(originalSplit, string, [this, limit]);\n      });\n      var splitShim = function split(separator, limit) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(separator)) {\n          var splitter = ES.GetMethod(separator, symbolSplit);\n          if (typeof splitter !== 'undefined') {\n            return ES.Call(splitter, separator, [O, limit]);\n          }\n        }\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n      };\n      overrideNative(String.prototype, 'split', splitShim);\n    }\n    var symbolMatchExists = Type.symbol(Symbol.match);\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n      // Firefox 40 and below have Symbol.match but String#match works fine.\n      var o = {};\n      o[Symbol.match] = function () { return 42; };\n      return 'a'.match(o) !== 42;\n    }());\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n      var symbolMatch = defineWellKnownSymbol('match');\n\n      var originalMatch = String.prototype.match;\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n        return ES.Call(originalMatch, string, [this]);\n      });\n\n      var matchShim = function match(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var matcher = ES.GetMethod(regexp, symbolMatch);\n          if (typeof matcher !== 'undefined') {\n            return ES.Call(matcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'match', matchShim);\n    }\n  }\n\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n    Value.preserveToString(replacement, original);\n    if (Object.setPrototypeOf) {\n      // sets up proper prototype chain where possible\n      Object.setPrototypeOf(original, replacement);\n    }\n    if (supportsDescriptors) {\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        Value.proxy(original, key, replacement);\n      });\n    } else {\n      _forEach(Object.keys(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        replacement[key] = original[key];\n      });\n    }\n    replacement.prototype = original.prototype;\n    Value.redefine(original.prototype, 'constructor', replacement);\n  };\n\n  var defaultSpeciesGetter = function () { return this; };\n  var addDefaultSpecies = function (C) {\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n    }\n  };\n\n  var addIterator = function (prototype, impl) {\n    var implementation = impl || function iterator() { return this; };\n    defineProperty(prototype, $iterator$, implementation);\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n      // implementations are buggy when $iterator$ is a Symbol\n      prototype[$iterator$] = implementation;\n    }\n  };\n\n  var createDataProperty = function createDataProperty(object, name, value) {\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n    createDataProperty(object, name, value);\n    if (!ES.SameValue(object[name], value)) {\n      throw new TypeError('property is nonconfigurable');\n    }\n  };\n\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n    // This is an es5 approximation to es6 construct semantics.  in es6,\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n    // to Foo and then returns Foo().\n\n    // Many ES6 object then have constructors of the form:\n    // 1. If NewTarget is undefined, throw a TypeError exception\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\n    // So we're going to emulate those first two steps.\n    if (!ES.TypeIsObject(o)) {\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n    }\n    var proto = defaultNewTarget.prototype;\n    if (!ES.TypeIsObject(proto)) {\n      proto = defaultProto;\n    }\n    var obj = create(proto);\n    for (var name in slots) {\n      if (_hasOwnProperty(slots, name)) {\n        var value = slots[name];\n        defineProperty(obj, name, value, true);\n      }\n    }\n    return obj;\n  };\n\n  // Firefox 31 reports this function's length as 0\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n    var originalFromCodePoint = String.fromCodePoint;\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {\n      return ES.Call(originalFromCodePoint, this, arguments);\n    });\n  }\n\n  var StringShims = {\n    fromCodePoint: function fromCodePoint(codePoints) {\n      var result = [];\n      var next;\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        next = Number(arguments[i]);\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n          throw new RangeError('Invalid code point ' + next);\n        }\n\n        if (next < 0x10000) {\n          _push(result, String.fromCharCode(next));\n        } else {\n          next -= 0x10000;\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n        }\n      }\n      return result.join('');\n    },\n\n    raw: function raw(callSite) {\n      var cooked = ES.ToObject(callSite, 'bad callSite');\n      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\n      var len = rawString.length;\n      var literalsegments = ES.ToLength(len);\n      if (literalsegments <= 0) {\n        return '';\n      }\n\n      var stringElements = [];\n      var nextIndex = 0;\n      var nextKey, next, nextSeg, nextSub;\n      while (nextIndex < literalsegments) {\n        nextKey = ES.ToString(nextIndex);\n        nextSeg = ES.ToString(rawString[nextKey]);\n        _push(stringElements, nextSeg);\n        if (nextIndex + 1 >= literalsegments) {\n          break;\n        }\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n        nextSub = ES.ToString(next);\n        _push(stringElements, nextSub);\n        nextIndex += 1;\n      }\n      return stringElements.join('');\n    }\n  };\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n    // IE 11 TP has a broken String.raw implementation\n    overrideNative(String, 'raw', StringShims.raw);\n  }\n  defineProperties(String, StringShims);\n\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n  // Perf: http://jsperf.com/string-repeat2/2\n  var stringRepeat = function repeat(s, times) {\n    if (times < 1) { return ''; }\n    if (times % 2) { return repeat(s, times - 1) + s; }\n    var half = repeat(s, times / 2);\n    return half + half;\n  };\n  var stringMaxLength = Infinity;\n\n  var StringPrototypeShims = {\n    repeat: function repeat(times) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var numTimes = ES.ToInteger(times);\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n      }\n      return stringRepeat(thisStr, numTimes);\n    },\n\n    startsWith: function startsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      var start = _max(ES.ToInteger(position), 0);\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\n    },\n\n    endsWith: function endsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var len = S.length;\n      var endPosition;\n      if (arguments.length > 1) {\n        endPosition = arguments[1];\n      }\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n      var end = _min(_max(pos, 0), len);\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\n    },\n\n    includes: function includes(searchString) {\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('\"includes\" does not accept a RegExp');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      // Somehow this trick makes method 100% compat with the spec.\n      return _indexOf(this, searchStr, position) !== -1;\n    },\n\n    codePointAt: function codePointAt(pos) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var position = ES.ToInteger(pos);\n      var length = thisStr.length;\n      if (position >= 0 && position < length) {\n        var first = thisStr.charCodeAt(position);\n        var isEnd = position + 1 === length;\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n        var second = thisStr.charCodeAt(position + 1);\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n      }\n    }\n  };\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n  }\n\n  if (String.prototype.startsWith && String.prototype.endsWith) {\n    var startsWithRejectsRegex = throwsError(function () {\n      /* throws if spec-compliant */\n      '/a/'.startsWith(/a/);\n    });\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n      return 'abc'.startsWith('a', Infinity) === false;\n    });\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n  }\n  if (hasSymbols) {\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.startsWith(re);\n    });\n    if (!startsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n    }\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.endsWith(re);\n    });\n    if (!endsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.includes(re);\n    });\n    if (!includesSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n    }\n  }\n\n  defineProperties(String.prototype, StringPrototypeShims);\n\n  // whitespace from: http://es5.github.io/#x15.5.4.20\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n  var ws = [\n    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n    '\\u2029\\uFEFF'\n  ].join('');\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n  var trimShim = function trim() {\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n  };\n  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\n  // Given an argument x, it will return an IteratorResult object,\n  // with value set to x and done to false.\n  // Given no arguments, it will return an iterator completion object.\n  var iteratorResult = function (x) {\n    return { value: x, done: arguments.length === 0 };\n  };\n\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator\n  var StringIterator = function (s) {\n    ES.RequireObjectCoercible(s);\n    this._s = ES.ToString(s);\n    this._i = 0;\n  };\n  StringIterator.prototype.next = function () {\n    var s = this._s;\n    var i = this._i;\n    if (typeof s === 'undefined' || i >= s.length) {\n      this._s = void 0;\n      return iteratorResult();\n    }\n    var first = s.charCodeAt(i);\n    var second, len;\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n      len = 1;\n    } else {\n      second = s.charCodeAt(i + 1);\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n    }\n    this._i = i + len;\n    return iteratorResult(s.substr(i, len));\n  };\n  addIterator(StringIterator.prototype);\n  addIterator(String.prototype, function () {\n    return new StringIterator(this);\n  });\n\n  var ArrayShims = {\n    from: function from(items) {\n      var C = this;\n      var mapFn;\n      if (arguments.length > 1) {\n        mapFn = arguments[1];\n      }\n      var mapping, T;\n      if (typeof mapFn === 'undefined') {\n        mapping = false;\n      } else {\n        if (!ES.IsCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n        mapping = true;\n      }\n\n      // Note that that Arrays will use ArrayIterator:\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\n      var length, result, i;\n      if (usingIterator) {\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\n        var iterator = ES.GetIterator(items);\n        var next, nextValue;\n\n        i = 0;\n        while (true) {\n          next = ES.IteratorStep(iterator);\n          if (next === false) {\n            break;\n          }\n          nextValue = next.value;\n          try {\n            if (mapping) {\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n            }\n            result[i] = nextValue;\n          } catch (e) {\n            ES.IteratorClose(iterator, true);\n            throw e;\n          }\n          i += 1;\n        }\n        length = i;\n      } else {\n        var arrayLike = ES.ToObject(items);\n        length = ES.ToLength(arrayLike.length);\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n        var value;\n        for (i = 0; i < length; ++i) {\n          value = arrayLike[i];\n          if (mapping) {\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n          }\n          createDataPropertyOrThrow(result, i, value);\n        }\n      }\n\n      result.length = length;\n      return result;\n    },\n\n    of: function of() {\n      var len = arguments.length;\n      var C = this;\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n      for (var k = 0; k < len; ++k) {\n        createDataPropertyOrThrow(A, k, arguments[k]);\n      }\n      A.length = len;\n      return A;\n    }\n  };\n  defineProperties(Array, ArrayShims);\n  addDefaultSpecies(Array);\n\n  // Our ArrayIterator is private; see\n  // https://github.com/paulmillr/es6-shim/issues/252\n  ArrayIterator = function (array, kind) {\n    this.i = 0;\n    this.array = array;\n    this.kind = kind;\n  };\n\n  defineProperties(ArrayIterator.prototype, {\n    next: function () {\n      var i = this.i;\n      var array = this.array;\n      if (!(this instanceof ArrayIterator)) {\n        throw new TypeError('Not an ArrayIterator');\n      }\n      if (typeof array !== 'undefined') {\n        var len = ES.ToLength(array.length);\n        for (; i < len; i++) {\n          var kind = this.kind;\n          var retval;\n          if (kind === 'key') {\n            retval = i;\n          } else if (kind === 'value') {\n            retval = array[i];\n          } else if (kind === 'entry') {\n            retval = [i, array[i]];\n          }\n          this.i = i + 1;\n          return iteratorResult(retval);\n        }\n      }\n      this.array = void 0;\n      return iteratorResult();\n    }\n  });\n  addIterator(ArrayIterator.prototype);\n\n/*\n  var orderKeys = function orderKeys(a, b) {\n    var aNumeric = String(ES.ToInteger(a)) === a;\n    var bNumeric = String(ES.ToInteger(b)) === b;\n    if (aNumeric && bNumeric) {\n      return b - a;\n    } else if (aNumeric && !bNumeric) {\n      return -1;\n    } else if (!aNumeric && bNumeric) {\n      return 1;\n    } else {\n      return a.localeCompare(b);\n    }\n  };\n\n  var getAllKeys = function getAllKeys(object) {\n    var ownKeys = [];\n    var keys = [];\n\n    for (var key in object) {\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n    }\n    _sort(ownKeys, orderKeys);\n    _sort(keys, orderKeys);\n\n    return _concat(ownKeys, keys);\n  };\n  */\n\n  // note: this is positioned here because it depends on ArrayIterator\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n    // Detects a bug in Webkit nightly r181886\n    var Foo = function Foo(len) { this.length = len; };\n    Foo.prototype = [];\n    var fooArr = Array.of.apply(Foo, [1, 2]);\n    return fooArr instanceof Foo && fooArr.length === 2;\n  }());\n  if (!arrayOfSupportsSubclassing) {\n    overrideNative(Array, 'of', ArrayShims.of);\n  }\n\n  var ArrayPrototypeShims = {\n    copyWithin: function copyWithin(target, start) {\n      var o = ES.ToObject(this);\n      var len = ES.ToLength(o.length);\n      var relativeTarget = ES.ToInteger(target);\n      var relativeStart = ES.ToInteger(start);\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n      var count = _min(finalItem - from, len - to);\n      var direction = 1;\n      if (from < to && to < (from + count)) {\n        direction = -1;\n        from += count - 1;\n        to += count - 1;\n      }\n      while (count > 0) {\n        if (from in o) {\n          o[to] = o[from];\n        } else {\n          delete o[to];\n        }\n        from += direction;\n        to += direction;\n        count -= 1;\n      }\n      return o;\n    },\n\n    fill: function fill(value) {\n      var start;\n      if (arguments.length > 1) {\n        start = arguments[1];\n      }\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var O = ES.ToObject(this);\n      var len = ES.ToLength(O.length);\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n      var relativeEnd = end < 0 ? len + end : end;\n\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n        O[i] = value;\n      }\n      return O;\n    },\n\n    find: function find(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#find: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0, value; i < length; i++) {\n        value = list[i];\n        if (thisArg) {\n          if (_call(predicate, thisArg, value, i, list)) {\n            return value;\n          }\n        } else if (predicate(value, i, list)) {\n          return value;\n        }\n      }\n    },\n\n    findIndex: function findIndex(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#findIndex: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0; i < length; i++) {\n        if (thisArg) {\n          if (_call(predicate, thisArg, list[i], i, list)) {\n            return i;\n          }\n        } else if (predicate(list[i], i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    keys: function keys() {\n      return new ArrayIterator(this, 'key');\n    },\n\n    values: function values() {\n      return new ArrayIterator(this, 'value');\n    },\n\n    entries: function entries() {\n      return new ArrayIterator(this, 'entry');\n    }\n  };\n  // Safari 7.1 defines Array#keys and Array#entries natively,\n  // but the resulting ArrayIterator objects don't have a \"next\" method.\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n    delete Array.prototype.keys;\n  }\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n    delete Array.prototype.entries;\n  }\n\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n    defineProperties(Array.prototype, {\n      values: Array.prototype[$iterator$]\n    });\n    if (Type.symbol(Symbol.unscopables)) {\n      Array.prototype[Symbol.unscopables].values = true;\n    }\n  }\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n    var originalArrayPrototypeValues = Array.prototype.values;\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n  }\n  defineProperties(Array.prototype, ArrayPrototypeShims);\n\n  if (1 / [true].indexOf(true, -0) < 0) {\n    // indexOf when given a position arg of -0 should return +0.\n    // https://github.com/tc39/ecma262/pull/316\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n      var value = _arrayIndexOfApply(this, arguments);\n      if (value === 0 && (1 / value) < 0) {\n        return 0;\n      }\n      return value;\n    }, true);\n  }\n\n  addIterator(Array.prototype, function () { return this.values(); });\n  // Chrome defines keys/values/entries on Array, but doesn't give us\n  // any way to identify its iterator.  So add our own shimmed field.\n  if (Object.getPrototypeOf) {\n    addIterator(Object.getPrototypeOf([].values()));\n  }\n\n  // note: this is positioned here because it relies on Array#entries\n  var arrayFromSwallowsNegativeLengths = (function () {\n    // Detects a Firefox bug in v32\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n    return valueOrFalseIfThrows(function () {\n      return Array.from({ length: -1 }).length === 0;\n    });\n  }());\n  var arrayFromHandlesIterables = (function () {\n    // Detects a bug in Webkit nightly r181886\n    var arr = Array.from([0].entries());\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n  }());\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n    overrideNative(Array, 'from', ArrayShims.from);\n  }\n  var arrayFromHandlesUndefinedMapFunction = (function () {\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n    return valueOrFalseIfThrows(function () {\n      return Array.from([0], void 0);\n    });\n  }());\n  if (!arrayFromHandlesUndefinedMapFunction) {\n    var origArrayFrom = Array.from;\n    overrideNative(Array, 'from', function from(items) {\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n        return ES.Call(origArrayFrom, this, arguments);\n      } else {\n        return _call(origArrayFrom, this, items);\n      }\n    });\n  }\n\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\n  var toLengthsCorrectly = function (method, reversed) {\n    var obj = { length: int32sAsOne };\n    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;\n    return valueOrFalseIfThrows(function () {\n      _call(method, obj, function () {\n        // note: in nonconforming browsers, this will be called\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n        throw new RangeError('should not reach here');\n      }, []);\n      return true;\n    });\n  };\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n    var originalForEach = Array.prototype.forEach;\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.map)) {\n    var originalMap = Array.prototype.map;\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\n    var originalFilter = Array.prototype.filter;\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.some)) {\n    var originalSome = Array.prototype.some;\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.every)) {\n    var originalEvery = Array.prototype.every;\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n    var originalReduce = Array.prototype.reduce;\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n    var originalReduceRight = Array.prototype.reduceRight;\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n\n  var lacksOctalSupport = Number('0o10') !== 8;\n  var lacksBinarySupport = Number('0b10') !== 2;\n  var trimsNonWhitespace = _some(nonWS, function (c) {\n    return Number(c + 0 + c) === 0;\n  });\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n    var OrigNumber = Number;\n    var binaryRegex = /^0b[01]+$/i;\n    var octalRegex = /^0o[0-7]+$/i;\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n    var isBinary = binaryRegex.test.bind(binaryRegex);\n    var isOctal = octalRegex.test.bind(octalRegex);\n    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\n      var result;\n      if (typeof O.valueOf === 'function') {\n        result = O.valueOf();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      if (typeof O.toString === 'function') {\n        result = O.toString();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      throw new TypeError('No default value');\n    };\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n    var NumberShim = (function () {\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n      var NumberShim = function Number(value) {\n        var primValue;\n        if (arguments.length > 0) {\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n        } else {\n          primValue = 0;\n        }\n        if (typeof primValue === 'string') {\n          primValue = ES.Call(trimShim, primValue);\n          if (isBinary(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 2);\n          } else if (isOctal(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 8);\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n            primValue = NaN;\n          }\n        }\n        var receiver = this;\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n          OrigNumber.prototype.valueOf.call(receiver);\n          return true;\n        });\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n          return new OrigNumber(primValue);\n        }\n        /* jshint newcap: false */\n        return OrigNumber(primValue);\n        /* jshint newcap: true */\n      };\n      return NumberShim;\n    }());\n    wrapConstructor(OrigNumber, NumberShim, {});\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n    defineProperties(NumberShim, {\n      NaN: OrigNumber.NaN,\n      MAX_VALUE: OrigNumber.MAX_VALUE,\n      MIN_VALUE: OrigNumber.MIN_VALUE,\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n    });\n    /* globals Number: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    Number = NumberShim;\n    Value.redefine(globals, 'Number', NumberShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals Number: false */\n  }\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  defineProperties(Number, {\n    MAX_SAFE_INTEGER: maxSafeInteger,\n    MIN_SAFE_INTEGER: -maxSafeInteger,\n    EPSILON: 2.220446049250313e-16,\n\n    parseInt: globals.parseInt,\n    parseFloat: globals.parseFloat,\n\n    isFinite: numberIsFinite,\n\n    isInteger: function isInteger(value) {\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\n    },\n\n    isSafeInteger: function isSafeInteger(value) {\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n    },\n\n    isNaN: numberIsNaN\n  });\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\n  // Work around bugs in Array#find and Array#findIndex -- early\n  // implementations skipped holes in sparse arrays. (Note that the\n  // implementations of find/findIndex indirectly use shimmed\n  // methods of Number, so this test has to happen down here.)\n  /*jshint elision: true */\n  /* eslint-disable no-sparse-arrays */\n  if ([, 1].find(function () { return true; }) === 1) {\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n  }\n  if ([, 1].findIndex(function () { return true; }) !== 0) {\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n  }\n  /* eslint-enable no-sparse-arrays */\n  /*jshint elision: false */\n\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n      Object.defineProperty(obj, prop, { enumerable: false });\n    }\n  };\n  var sliceArgs = function sliceArgs() {\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n    var initial = Number(this);\n    var len = arguments.length;\n    var desiredArgCount = len - initial;\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n    for (var i = initial; i < len; ++i) {\n      args[i - initial] = arguments[i];\n    }\n    return args;\n  };\n  var assignTo = function assignTo(source) {\n    return function assignToSource(target, key) {\n      target[key] = source[key];\n      return target;\n    };\n  };\n  var assignReducer = function (target, source) {\n    var sourceKeys = keys(Object(source));\n    var symbols;\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n    }\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n  };\n\n  var ObjectShims = {\n    // 19.1.3.1\n    assign: function (target, source) {\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n    },\n\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n    is: function is(a, b) {\n      return ES.SameValue(a, b);\n    }\n  };\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({ 1: 2 });\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      return thrower[1] === 'y';\n    }\n  }());\n  if (assignHasPendingExceptions) {\n    overrideNative(Object, 'assign', ObjectShims.assign);\n  }\n  defineProperties(Object, ObjectShims);\n\n  if (supportsDescriptors) {\n    var ES5ObjectShims = {\n      // 19.1.3.9\n      // shim from https://gist.github.com/WebReflection/5593554\n      setPrototypeOf: (function (Object, magic) {\n        var set;\n\n        var checkArgs = function (O, proto) {\n          if (!ES.TypeIsObject(O)) {\n            throw new TypeError('cannot set prototype on a non-object');\n          }\n          if (!(proto === null || ES.TypeIsObject(proto))) {\n            throw new TypeError('can only set prototype to an object or null' + proto);\n          }\n        };\n\n        var setPrototypeOf = function (O, proto) {\n          checkArgs(O, proto);\n          _call(set, O, proto);\n          return O;\n        };\n\n        try {\n          // this works already in Firefox and Safari\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n          _call(set, {}, null);\n        } catch (e) {\n          if (Object.prototype !== {}[magic]) {\n            // IE < 11 cannot be shimmed\n            return;\n          }\n          // probably Chrome or some old Mobile stock browser\n          set = function (proto) {\n            this[magic] = proto;\n          };\n          // please note that this will **not** work\n          // in those browsers that do not inherit\n          // __proto__ by mistake from Object.prototype\n          // in these cases we should probably throw an error\n          // or at least be informed about the issue\n          setPrototypeOf.polyfill = setPrototypeOf(\n            setPrototypeOf({}, null),\n            Object.prototype\n          ) instanceof Object;\n          // setPrototypeOf.polyfill === true means it works as meant\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\n          // setPrototypeOf.polyfill === undefined\n          // or\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n          // which means it works as expected\n          // we can even delete Object.prototype.__proto__;\n        }\n        return setPrototypeOf;\n      }(Object, '__proto__'))\n    };\n\n    defineProperties(Object, ES5ObjectShims);\n  }\n\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n  // but Object.create(null) does.\n  if (Object.setPrototypeOf && Object.getPrototypeOf &&\n      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\n      Object.getPrototypeOf(Object.create(null)) === null) {\n    (function () {\n      var FAKENULL = Object.create(null);\n      var gpo = Object.getPrototypeOf;\n      var spo = Object.setPrototypeOf;\n      Object.getPrototypeOf = function (o) {\n        var result = gpo(o);\n        return result === FAKENULL ? null : result;\n      };\n      Object.setPrototypeOf = function (o, p) {\n        var proto = p === null ? FAKENULL : p;\n        return spo(o, proto);\n      };\n      Object.setPrototypeOf.polyfill = false;\n    }());\n  }\n\n  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\n  if (!objectKeysAcceptsPrimitives) {\n    var originalObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      return originalObjectKeys(ES.ToObject(value));\n    });\n    keys = Object.keys;\n  }\n  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\n  if (objectKeysRejectsRegex) {\n    var regexRejectingObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      if (Type.regex(value)) {\n        var regexKeys = [];\n        for (var k in value) {\n          if (_hasOwnProperty(value, k)) {\n            _push(regexKeys, k);\n          }\n        }\n        return regexKeys;\n      }\n      return regexRejectingObjectKeys(value);\n    });\n    keys = Object.keys;\n  }\n\n  if (Object.getOwnPropertyNames) {\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\n    if (!objectGOPNAcceptsPrimitives) {\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n        var val = ES.ToObject(value);\n        if (_toString(val) === '[object Window]') {\n          try {\n            return originalObjectGetOwnPropertyNames(val);\n          } catch (e) {\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n            return _concat([], cachedWindowNames);\n          }\n        }\n        return originalObjectGetOwnPropertyNames(val);\n      });\n    }\n  }\n  if (Object.getOwnPropertyDescriptor) {\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\n    if (!objectGOPDAcceptsPrimitives) {\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n      });\n    }\n  }\n  if (Object.seal) {\n    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\n    if (!objectSealAcceptsPrimitives) {\n      var originalObjectSeal = Object.seal;\n      overrideNative(Object, 'seal', function seal(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectSeal(value);\n      });\n    }\n  }\n  if (Object.isSealed) {\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\n    if (!objectIsSealedAcceptsPrimitives) {\n      var originalObjectIsSealed = Object.isSealed;\n      overrideNative(Object, 'isSealed', function isSealed(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsSealed(value);\n      });\n    }\n  }\n  if (Object.freeze) {\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\n    if (!objectFreezeAcceptsPrimitives) {\n      var originalObjectFreeze = Object.freeze;\n      overrideNative(Object, 'freeze', function freeze(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectFreeze(value);\n      });\n    }\n  }\n  if (Object.isFrozen) {\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\n    if (!objectIsFrozenAcceptsPrimitives) {\n      var originalObjectIsFrozen = Object.isFrozen;\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsFrozen(value);\n      });\n    }\n  }\n  if (Object.preventExtensions) {\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\n    if (!objectPreventExtensionsAcceptsPrimitives) {\n      var originalObjectPreventExtensions = Object.preventExtensions;\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectPreventExtensions(value);\n      });\n    }\n  }\n  if (Object.isExtensible) {\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\n    if (!objectIsExtensibleAcceptsPrimitives) {\n      var originalObjectIsExtensible = Object.isExtensible;\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n        if (!ES.TypeIsObject(value)) { return false; }\n        return originalObjectIsExtensible(value);\n      });\n    }\n  }\n  if (Object.getPrototypeOf) {\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\n    if (!objectGetProtoAcceptsPrimitives) {\n      var originalGetProto = Object.getPrototypeOf;\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n        return originalGetProto(ES.ToObject(value));\n      });\n    }\n  }\n\n  var hasFlags = supportsDescriptors && (function () {\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n    return desc && ES.IsCallable(desc.get);\n  }());\n  if (supportsDescriptors && !hasFlags) {\n    var regExpFlagsGetter = function flags() {\n      if (!ES.TypeIsObject(this)) {\n        throw new TypeError('Method called on incompatible type: must be an object.');\n      }\n      var result = '';\n      if (this.global) {\n        result += 'g';\n      }\n      if (this.ignoreCase) {\n        result += 'i';\n      }\n      if (this.multiline) {\n        result += 'm';\n      }\n      if (this.unicode) {\n        result += 'u';\n      }\n      if (this.sticky) {\n        result += 'y';\n      }\n      return result;\n    };\n\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n  }\n\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\n  });\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\n    var regex = /./;\n    regex[Symbol.match] = false;\n    return RegExp(regex) === regex;\n  }());\n\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n  });\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n  });\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n    var origRegExpToString = RegExp.prototype.toString;\n    defineProperty(RegExp.prototype, 'toString', function toString() {\n      var R = ES.RequireObjectCoercible(this);\n      if (Type.regex(R)) {\n        return _call(origRegExpToString, R);\n      }\n      var pattern = $String(R.source);\n      var flags = $String(R.flags);\n      return '/' + pattern + '/' + flags;\n    }, true);\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n  }\n\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n    var legacySourceGetter = function () {\n      // prior to it being a getter, it's own + nonconfigurable\n      return this.source;\n    };\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\n    var OrigRegExp = RegExp;\n    var RegExpShim = (function () {\n      return function RegExp(pattern, flags) {\n        var patternIsRegExp = ES.IsRegExp(pattern);\n        var calledWithNew = this instanceof RegExp;\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n          return pattern;\n        }\n\n        var P = pattern;\n        var F = flags;\n        if (Type.regex(pattern)) {\n          P = ES.Call(sourceGetter, pattern);\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n          return new RegExp(P, F);\n        } else if (patternIsRegExp) {\n          P = pattern.source;\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\n        }\n        return new OrigRegExp(pattern, flags);\n      };\n    }());\n    wrapConstructor(OrigRegExp, RegExpShim, {\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n    });\n    /* globals RegExp: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    RegExp = RegExpShim;\n    Value.redefine(globals, 'RegExp', RegExpShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals RegExp: false */\n  }\n\n  if (supportsDescriptors) {\n    var regexGlobals = {\n      input: '$_',\n      lastMatch: '$&',\n      lastParen: '$+',\n      leftContext: '$`',\n      rightContext: '$\\''\n    };\n    _forEach(keys(regexGlobals), function (prop) {\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n        Value.getter(RegExp, regexGlobals[prop], function get() {\n          return RegExp[prop];\n        });\n      }\n    });\n  }\n  addDefaultSpecies(RegExp);\n\n  var inverseEpsilon = 1 / Number.EPSILON;\n  var roundTiesToEven = function roundTiesToEven(n) {\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n    return (n + inverseEpsilon) - inverseEpsilon;\n  };\n  var BINARY_32_EPSILON = Math.pow(2, -23);\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n  var E = Math.E;\n  var LOG2E = Math.LOG2E;\n  var LOG10E = Math.LOG10E;\n  var numberCLZ = Number.prototype.clz;\n  delete Number.prototype.clz; // Safari 8 has Number#clz\n\n  var MathShims = {\n    acosh: function acosh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || value < 1) { return NaN; }\n      if (x === 1) { return 0; }\n      if (x === Infinity) { return x; }\n      return _log((x / E) + (_sqrt(x + 1) * _sqrt(x - 1) / E)) + 1;\n    },\n\n    asinh: function asinh(value) {\n      var x = Number(value);\n      if (x === 0 || !globalIsFinite(x)) {\n        return x;\n      }\n      return x < 0 ? -asinh(-x) : _log(x + _sqrt((x * x) + 1));\n    },\n\n    atanh: function atanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x < -1 || x > 1) {\n        return NaN;\n      }\n      if (x === -1) { return -Infinity; }\n      if (x === 1) { return Infinity; }\n      if (x === 0) { return x; }\n      return 0.5 * _log((1 + x) / (1 - x));\n    },\n\n    cbrt: function cbrt(value) {\n      var x = Number(value);\n      if (x === 0) { return x; }\n      var negate = x < 0;\n      var result;\n      if (negate) { x = -x; }\n      if (x === Infinity) {\n        result = Infinity;\n      } else {\n        result = _exp(_log(x) / 3);\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n        result = ((x / (result * result)) + (2 * result)) / 3;\n      }\n      return negate ? -result : result;\n    },\n\n    clz32: function clz32(value) {\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n      var x = Number(value);\n      var number = ES.ToUint32(x);\n      if (number === 0) {\n        return 32;\n      }\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);\n    },\n\n    cosh: function cosh(value) {\n      var x = Number(value);\n      if (x === 0) { return 1; } // +0 or -0\n      if (numberIsNaN(x)) { return NaN; }\n      if (!globalIsFinite(x)) { return Infinity; }\n      if (x < 0) { x = -x; }\n      if (x > 21) { return _exp(x) / 2; }\n      return (_exp(x) + _exp(-x)) / 2;\n    },\n\n    expm1: function expm1(value) {\n      var x = Number(value);\n      if (x === -Infinity) { return -1; }\n      if (!globalIsFinite(x) || x === 0) { return x; }\n      if (_abs(x) > 0.5) {\n        return _exp(x) - 1;\n      }\n      // A more precise approximation using Taylor series expansion\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n      var t = x;\n      var sum = 0;\n      var n = 1;\n      while (sum + t !== sum) {\n        sum += t;\n        n += 1;\n        t *= x / n;\n      }\n      return sum;\n    },\n\n    hypot: function hypot(x, y) {\n      var result = 0;\n      var largest = 0;\n      for (var i = 0; i < arguments.length; ++i) {\n        var value = _abs(Number(arguments[i]));\n        if (largest < value) {\n          result *= (largest / value) * (largest / value);\n          result += 1;\n          largest = value;\n        } else {\n          result += value > 0 ? (value / largest) * (value / largest) : value;\n        }\n      }\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\n    },\n\n    log2: function log2(value) {\n      return _log(value) * LOG2E;\n    },\n\n    log10: function log10(value) {\n      return _log(value) * LOG10E;\n    },\n\n    log1p: function log1p(value) {\n      var x = Number(value);\n      if (x < -1 || numberIsNaN(x)) { return NaN; }\n      if (x === 0 || x === Infinity) { return x; }\n      if (x === -1) { return -Infinity; }\n\n      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n    },\n\n    sign: _sign,\n\n    sinh: function sinh(value) {\n      var x = Number(value);\n      if (!globalIsFinite(x) || x === 0) { return x; }\n\n      if (_abs(x) < 1) {\n        return (Math.expm1(x) - Math.expm1(-x)) / 2;\n      }\n      return (_exp(x - 1) - _exp(-x - 1)) * E / 2;\n    },\n\n    tanh: function tanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x === 0) { return x; }\n      // can exit early at +-20 as JS loses precision for true value at this integer\n      if (x >= 20) { return 1; }\n      if (x <= -20) { return -1; }\n\n      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));\n    },\n\n    trunc: function trunc(value) {\n      var x = Number(value);\n      return x < 0 ? -_floor(-x) : _floor(x);\n    },\n\n    imul: function imul(x, y) {\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n      var a = ES.ToUint32(x);\n      var b = ES.ToUint32(y);\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;\n    },\n\n    fround: function fround(x) {\n      var v = Number(x);\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n        return v;\n      }\n      var sign = _sign(v);\n      var abs = _abs(v);\n      if (abs < BINARY_32_MIN_VALUE) {\n        return sign * roundTiesToEven(\n          abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON\n        ) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n      }\n      // Veltkamp's splitting (?)\n      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;\n      var result = a - (a - abs);\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n        return sign * Infinity;\n      }\n      return sign * result;\n    }\n  };\n  defineProperties(Math, MathShims);\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n  // Chrome 40 loses Math.acosh precision with high numbers\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n  // Firefox 38 on Windows\n  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - (Math.cbrt(1e-300) / 1e-100)) / Number.EPSILON > 8);\n  // node 0.11 has an imprecise Math.sinh with very small numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n  var expm1OfTen = Math.expm1(10);\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n\n  var origMathRound = Math.round;\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0 &&\n    Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;\n\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n  // This behavior should be governed by \"round to nearest, ties to even mode\"\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type\n  // These are the boundary cases where it breaks.\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;\n  var roundDoesNotIncreaseIntegers = [\n    smallestPositiveNumberWhereRoundBreaks,\n    largestPositiveNumberWhereRoundBreaks\n  ].every(function (num) {\n    return Math.round(num) === num;\n  });\n  defineProperty(Math, 'round', function round(x) {\n    var floor = _floor(x);\n    var ceil = floor === -1 ? -0 : floor + 1;\n    return x - floor < 0.5 ? floor : ceil;\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n  Value.preserveToString(Math.round, origMathRound);\n\n  var origImul = Math.imul;\n  if (Math.imul(0xffffffff, 5) !== -5) {\n    // Safari 6.1, at least, reports \"0\" for this value\n    Math.imul = MathShims.imul;\n    Value.preserveToString(Math.imul, origImul);\n  }\n  if (Math.imul.length !== 2) {\n    // Safari 8.0.4 has a length of 1\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n    overrideNative(Math, 'imul', function imul(x, y) {\n      return ES.Call(origImul, Math, arguments);\n    });\n  }\n\n  // Promises\n  // Simplest possible implementation; use a 3rd-party library if you\n  // want the best possible speed and/or long stack traces.\n  var PromiseShim = (function () {\n    var setTimeout = globals.setTimeout;\n    // some environments don't have setTimeout - no way to shim here.\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\n    ES.IsPromise = function (promise) {\n      if (!ES.TypeIsObject(promise)) {\n        return false;\n      }\n      if (typeof promise._promise === 'undefined') {\n        return false; // uninitialized, or missing our hidden field.\n      }\n      return true;\n    };\n\n    // \"PromiseCapability\" in the spec is what most promise implementations\n    // call a \"deferred\".\n    var PromiseCapability = function (C) {\n      if (!ES.IsConstructor(C)) {\n        throw new TypeError('Bad promise constructor');\n      }\n      var capability = this;\n      var resolver = function (resolve, reject) {\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n          throw new TypeError('Bad Promise implementation!');\n        }\n        capability.resolve = resolve;\n        capability.reject = reject;\n      };\n      // Initialize fields to inform optimizers about the object shape.\n      capability.resolve = void 0;\n      capability.reject = void 0;\n      capability.promise = new C(resolver);\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n        throw new TypeError('Bad promise constructor');\n      }\n    };\n\n    // find an appropriate setImmediate-alike\n    var makeZeroTimeout;\n    /*global window */\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n      makeZeroTimeout = function () {\n        // from http://dbaron.org/log/20100309-faster-timeouts\n        var timeouts = [];\n        var messageName = 'zero-timeout-message';\n        var setZeroTimeout = function (fn) {\n          _push(timeouts, fn);\n          window.postMessage(messageName, '*');\n        };\n        var handleMessage = function (event) {\n          if (event.source === window && event.data === messageName) {\n            event.stopPropagation();\n            if (timeouts.length === 0) { return; }\n            var fn = _shift(timeouts);\n            fn();\n          }\n        };\n        window.addEventListener('message', handleMessage, true);\n        return setZeroTimeout;\n      };\n    }\n    var makePromiseAsap = function () {\n      // An efficient task-scheduler based on a pre-existing Promise\n      // implementation, which we can use even if we override the\n      // global Promise below (in order to workaround bugs)\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n      var P = globals.Promise;\n      var pr = P && P.resolve && P.resolve();\n      return pr && function (task) {\n        return pr.then(task);\n      };\n    };\n    /*global process */\n    /* jscs:disable disallowMultiLineTernary */\n    var enqueue = ES.IsCallable(globals.setImmediate) ?\n      globals.setImmediate :\n      typeof process === 'object' && process.nextTick ? process.nextTick :\n      makePromiseAsap() ||\n      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\n      function (task) { setTimeout(task, 0); }); // fallback\n    /* jscs:enable disallowMultiLineTernary */\n\n    // Constants for Promise implementation\n    var PROMISE_IDENTITY = function (x) { return x; };\n    var PROMISE_THROWER = function (e) { throw e; };\n    var PROMISE_PENDING = 0;\n    var PROMISE_FULFILLED = 1;\n    var PROMISE_REJECTED = 2;\n    // We store fulfill/reject handlers and capabilities in a single array.\n    var PROMISE_FULFILL_OFFSET = 0;\n    var PROMISE_REJECT_OFFSET = 1;\n    var PROMISE_CAPABILITY_OFFSET = 2;\n    // This is used in an optimization for chaining promises via then.\n    var PROMISE_FAKE_CAPABILITY = {};\n\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n      enqueue(function () {\n        promiseReactionJob(handler, capability, argument);\n      });\n    };\n\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\n      var handlerResult, f;\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n        // Fast case, when we don't actually need to chain through to a\n        // (real) promiseCapability.\n        return handler(argument);\n      }\n      try {\n        handlerResult = handler(argument);\n        f = promiseCapability.resolve;\n      } catch (e) {\n        handlerResult = e;\n        f = promiseCapability.reject;\n      }\n      f(handlerResult);\n    };\n\n    var fulfillPromise = function (promise, value) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.fulfillReactionHandler0,\n          _promise.reactionCapability0,\n          value\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_FULFILL_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              value\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = value;\n      _promise.state = PROMISE_FULFILLED;\n      _promise.reactionLength = 0;\n    };\n\n    var rejectPromise = function (promise, reason) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.rejectReactionHandler0,\n          _promise.reactionCapability0,\n          reason\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_REJECT_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              reason\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = reason;\n      _promise.state = PROMISE_REJECTED;\n      _promise.reactionLength = 0;\n    };\n\n    var createResolvingFunctions = function (promise) {\n      var alreadyResolved = false;\n      var resolve = function (resolution) {\n        var then;\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        if (resolution === promise) {\n          return rejectPromise(promise, new TypeError('Self resolution'));\n        }\n        if (!ES.TypeIsObject(resolution)) {\n          return fulfillPromise(promise, resolution);\n        }\n        try {\n          then = resolution.then;\n        } catch (e) {\n          return rejectPromise(promise, e);\n        }\n        if (!ES.IsCallable(then)) {\n          return fulfillPromise(promise, resolution);\n        }\n        enqueue(function () {\n          promiseResolveThenableJob(promise, resolution, then);\n        });\n      };\n      var reject = function (reason) {\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        return rejectPromise(promise, reason);\n      };\n      return { resolve: resolve, reject: reject };\n    };\n\n    var optimizedThen = function (then, thenable, resolve, reject) {\n      // Optimization: since we discard the result, we can pass our\n      // own then implementation a special hint to let it know it\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n      // object is local to this implementation and unforgeable outside.)\n      if (then === Promise$prototype$then) {\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n      } else {\n        _call(then, thenable, resolve, reject);\n      }\n    };\n    var promiseResolveThenableJob = function (promise, thenable, then) {\n      var resolvingFunctions = createResolvingFunctions(promise);\n      var resolve = resolvingFunctions.resolve;\n      var reject = resolvingFunctions.reject;\n      try {\n        optimizedThen(then, thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var Promise$prototype, Promise$prototype$then;\n    var Promise = (function () {\n      var PromiseShim = function Promise(resolver) {\n        if (!(this instanceof PromiseShim)) {\n          throw new TypeError('Constructor Promise requires \"new\"');\n        }\n        if (this && this._promise) {\n          throw new TypeError('Bad construction');\n        }\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n        if (!ES.IsCallable(resolver)) {\n          throw new TypeError('not a valid resolver');\n        }\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n          _promise: {\n            result: void 0,\n            state: PROMISE_PENDING,\n            // The first member of the \"reactions\" array is inlined here,\n            // since most promises only have one reaction.\n            // We've also exploded the 'reaction' object to inline the\n            // \"handler\" and \"capability\" fields, since both fulfill and\n            // reject reactions share the same capability.\n            reactionLength: 0,\n            fulfillReactionHandler0: void 0,\n            rejectReactionHandler0: void 0,\n            reactionCapability0: void 0\n          }\n        });\n        var resolvingFunctions = createResolvingFunctions(promise);\n        var reject = resolvingFunctions.reject;\n        try {\n          resolver(resolvingFunctions.resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        return promise;\n      };\n      return PromiseShim;\n    }());\n    Promise$prototype = Promise.prototype;\n\n    var _promiseAllResolver = function (index, values, capability, remaining) {\n      var alreadyCalled = false;\n      return function (x) {\n        if (alreadyCalled) { return; }\n        alreadyCalled = true;\n        values[index] = x;\n        if ((--remaining.count) === 0) {\n          var resolve = capability.resolve;\n          resolve(values); // call w/ this===undefined\n        }\n      };\n    };\n\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var values = [];\n      var remaining = { count: 1 };\n      var next, nextValue;\n      var index = 0;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        values[index] = void 0;\n        var nextPromise = C.resolve(nextValue);\n        var resolveElement = _promiseAllResolver(\n          index, values, resultCapability, remaining\n        );\n        remaining.count += 1;\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n        index += 1;\n      }\n      if ((--remaining.count) === 0) {\n        var resolve = resultCapability.resolve;\n        resolve(values); // call w/ this===undefined\n      }\n      return resultCapability.promise;\n    };\n\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var next, nextValue, nextPromise;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            // NOTE: If iterable has no items, resulting promise will never\n            // resolve; see:\n            // https://github.com/domenic/promises-unwrapping/issues/75\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        nextPromise = C.resolve(nextValue);\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n      }\n      return resultCapability.promise;\n    };\n\n    defineProperties(Promise, {\n      all: function all(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseAll(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      race: function race(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseRace(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      reject: function reject(reason) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        var capability = new PromiseCapability(C);\n        var rejectFunc = capability.reject;\n        rejectFunc(reason); // call with this===undefined\n        return capability.promise;\n      },\n\n      resolve: function resolve(v) {\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        if (ES.IsPromise(v)) {\n          var constructor = v.constructor;\n          if (constructor === C) {\n            return v;\n          }\n        }\n        var capability = new PromiseCapability(C);\n        var resolveFunc = capability.resolve;\n        resolveFunc(v); // call with this===undefined\n        return capability.promise;\n      }\n    });\n\n    defineProperties(Promise$prototype, {\n      'catch': function (onRejected) {\n        return this.then(null, onRejected);\n      },\n\n      then: function then(onFulfilled, onRejected) {\n        var promise = this;\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n        var C = ES.SpeciesConstructor(promise, Promise);\n        var resultCapability;\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n        if (returnValueIsIgnored && C === Promise) {\n          resultCapability = PROMISE_FAKE_CAPABILITY;\n        } else {\n          resultCapability = new PromiseCapability(C);\n        }\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n        // Note that we've split the 'reaction' object into its two\n        // components, \"capabilities\" and \"handler\"\n        // \"capabilities\" is always equal to `resultCapability`\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n        var _promise = promise._promise;\n        var value;\n        if (_promise.state === PROMISE_PENDING) {\n          if (_promise.reactionLength === 0) {\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\n            _promise.reactionCapability0 = resultCapability;\n          } else {\n            var idx = 3 * (_promise.reactionLength - 1);\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n          }\n          _promise.reactionLength += 1;\n        } else if (_promise.state === PROMISE_FULFILLED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            fulfillReactionHandler, resultCapability, value\n          );\n        } else if (_promise.state === PROMISE_REJECTED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            rejectReactionHandler, resultCapability, value\n          );\n        } else {\n          throw new TypeError('unexpected Promise state');\n        }\n        return resultCapability.promise;\n      }\n    });\n    // This helps the optimizer by ensuring that methods which take\n    // capabilities aren't polymorphic.\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n    Promise$prototype$then = Promise$prototype.then;\n\n    return Promise;\n  }());\n\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n  if (globals.Promise) {\n    delete globals.Promise.accept;\n    delete globals.Promise.defer;\n    delete globals.Promise.prototype.chain;\n  }\n\n  if (typeof PromiseShim === 'function') {\n    // export the Promise constructor.\n    defineProperties(globals, { Promise: PromiseShim });\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\n    // implementation is buggy in a number of ways.  Let's check subclassing\n    // support to see if we have a buggy implementation.\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n      return S.resolve(42).then(function () {}) instanceof S;\n    });\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {\n      globals.Promise.reject(42).then(null, 5).then(null, noop);\n    });\n    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\n    // Promise.resolve() was errata'ed late in the ES6 process.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n    //      https://code.google.com/p/v8/issues/detail?id=4161\n    // It serves as a proxy for a number of other bugs in early Promise\n    // implementations.\n    var promiseResolveBroken = (function (Promise) {\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) {\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n      }\n      return p === p2; // This *should* be false!\n    }(globals.Promise));\n\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n    var getsThenSynchronously = supportsDescriptors && (function () {\n      var count = 0;\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n      Promise.resolve(thenable);\n      return count === 1;\n    }());\n\n    var BadResolverPromise = function BadResolverPromise(executor) {\n      var p = new Promise(executor);\n      executor(3, function () {});\n      this.then = p.then;\n      this.constructor = BadResolverPromise;\n    };\n    BadResolverPromise.prototype = Promise.prototype;\n    BadResolverPromise.all = Promise.all;\n    // Chrome Canary 49 (probably older too) has some implementation bugs\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n      return !!BadResolverPromise.all([1, 2]);\n    });\n\n    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\n        !promiseRequiresObjectContext || promiseResolveBroken ||\n        !getsThenSynchronously || hasBadResolverPromise) {\n      /* globals Promise: true */\n      /* eslint-disable no-undef, no-global-assign */\n      /* jshint -W020 */\n      Promise = PromiseShim;\n      /* jshint +W020 */\n      /* eslint-enable no-undef, no-global-assign */\n      /* globals Promise: false */\n      overrideNative(globals, 'Promise', PromiseShim);\n    }\n    if (Promise.all.length !== 1) {\n      var origAll = Promise.all;\n      overrideNative(Promise, 'all', function all(iterable) {\n        return ES.Call(origAll, this, arguments);\n      });\n    }\n    if (Promise.race.length !== 1) {\n      var origRace = Promise.race;\n      overrideNative(Promise, 'race', function race(iterable) {\n        return ES.Call(origRace, this, arguments);\n      });\n    }\n    if (Promise.resolve.length !== 1) {\n      var origResolve = Promise.resolve;\n      overrideNative(Promise, 'resolve', function resolve(x) {\n        return ES.Call(origResolve, this, arguments);\n      });\n    }\n    if (Promise.reject.length !== 1) {\n      var origReject = Promise.reject;\n      overrideNative(Promise, 'reject', function reject(r) {\n        return ES.Call(origReject, this, arguments);\n      });\n    }\n    ensureEnumerable(Promise, 'all');\n    ensureEnumerable(Promise, 'race');\n    ensureEnumerable(Promise, 'resolve');\n    ensureEnumerable(Promise, 'reject');\n    addDefaultSpecies(Promise);\n  }\n\n  // Map and Set require a true ES5 environment\n  // Their fast path also requires that the environment preserve\n  // property insertion order, which is not guaranteed by the spec.\n  var testOrder = function (a) {\n    var b = keys(_reduce(a, function (o, k) {\n      o[k] = true;\n      return o;\n    }, {}));\n    return a.join(':') === b.join(':');\n  };\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n  // some engines (eg, Chrome) only preserve insertion order for string keys\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\n  if (supportsDescriptors) {\n\n    var fastkey = function fastkey(key, skipInsertionOrderCheck) {\n      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {\n        return null;\n      }\n      if (isNullOrUndefined(key)) {\n        return '^' + ES.ToString(key);\n      } else if (typeof key === 'string') {\n        return '$' + key;\n      } else if (typeof key === 'number') {\n        // note that -0 will get coerced to \"0\" when used as a property key\n        if (!preservesNumericInsertionOrder) {\n          return 'n' + key;\n        }\n        return key;\n      } else if (typeof key === 'boolean') {\n        return 'b' + key;\n      }\n      return null;\n    };\n\n    var emptyObject = function emptyObject() {\n      // accomodate some older not-quite-ES5 browsers\n      return Object.create ? Object.create(null) : {};\n    };\n\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (entry) {\n          if (!ES.TypeIsObject(entry)) {\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n          }\n          map.set(entry[0], entry[1]);\n        });\n      } else if (iterable instanceof MapConstructor) {\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n          map.set(key, value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = map.set;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextItem = next.value;\n            try {\n              if (!ES.TypeIsObject(nextItem)) {\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n              }\n              _call(adder, map, nextItem[0], nextItem[1]);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (value) {\n          set.add(value);\n        });\n      } else if (iterable instanceof SetConstructor) {\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n          set.add(value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = set.add;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextValue = next.value;\n            try {\n              _call(adder, set, nextValue);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    var collectionShims = {\n      Map: (function () {\n\n        var empty = {};\n\n        var MapEntry = function MapEntry(key, value) {\n          this.key = key;\n          this.value = value;\n          this.next = null;\n          this.prev = null;\n        };\n\n        MapEntry.prototype.isRemoved = function isRemoved() {\n          return this.key === empty;\n        };\n\n        var isMap = function isMap(map) {\n          return !!map._es6map;\n        };\n\n        var requireMapSlot = function requireMapSlot(map, method) {\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n          }\n        };\n\n        var MapIterator = function MapIterator(map, kind) {\n          requireMapSlot(map, '[[MapIterator]]');\n          this.head = map._head;\n          this.i = this.head;\n          this.kind = kind;\n        };\n\n        MapIterator.prototype = {\n          next: function next() {\n            var i = this.i;\n            var kind = this.kind;\n            var head = this.head;\n            if (typeof this.i === 'undefined') {\n              return iteratorResult();\n            }\n            while (i.isRemoved() && i !== head) {\n              // back up off of removed entries\n              i = i.prev;\n            }\n            // advance to next unreturned element.\n            var result;\n            while (i.next !== head) {\n              i = i.next;\n              if (!i.isRemoved()) {\n                if (kind === 'key') {\n                  result = i.key;\n                } else if (kind === 'value') {\n                  result = i.value;\n                } else {\n                  result = [i.key, i.value];\n                }\n                this.i = i;\n                return iteratorResult(result);\n              }\n            }\n            // once the iterator is done, it is done forever.\n            this.i = void 0;\n            return iteratorResult();\n          }\n        };\n        addIterator(MapIterator.prototype);\n\n        var Map$prototype;\n        var MapShim = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          if (this && this._es6map) {\n            throw new TypeError('Bad construction');\n          }\n          var map = emulateES6construct(this, Map, Map$prototype, {\n            _es6map: true,\n            _head: null,\n            _map: OrigMap ? new OrigMap() : null,\n            _size: 0,\n            _storage: emptyObject()\n          });\n\n          var head = new MapEntry(null, null);\n          // circular doubly-linked list.\n          /* eslint no-multi-assign: 1 */\n          head.next = head.prev = head;\n          map._head = head;\n\n          // Optionally initialize map from iterable\n          if (arguments.length > 0) {\n            addIterableToMap(Map, map, arguments[0]);\n          }\n          return map;\n        };\n        Map$prototype = MapShim.prototype;\n\n        Value.getter(Map$prototype, 'size', function () {\n          if (typeof this._size === 'undefined') {\n            throw new TypeError('size method called on incompatible Map');\n          }\n          return this._size;\n        });\n\n        defineProperties(Map$prototype, {\n          get: function get(key) {\n            requireMapSlot(this, 'get');\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              entry = this._storage[fkey];\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            if (this._map) {\n              // fast object key path\n              entry = origMapGet.call(this._map, key);\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return i.value;\n              }\n            }\n          },\n\n          has: function has(key) {\n            requireMapSlot(this, 'has');\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              return typeof this._storage[fkey] !== 'undefined';\n            }\n            if (this._map) {\n              // fast object key path\n              return origMapHas.call(this._map, key);\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return true;\n              }\n            }\n            return false;\n          },\n\n          set: function set(key, value) {\n            requireMapSlot(this, 'set');\n            var head = this._head;\n            var i = head;\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] !== 'undefined') {\n                this._storage[fkey].value = value;\n                return this;\n              } else {\n                entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */\n                i = head.prev;\n                // fall through\n              }\n            } else if (this._map) {\n              // fast object key path\n              if (origMapHas.call(this._map, key)) {\n                origMapGet.call(this._map, key).value = value;\n              } else {\n                entry = new MapEntry(key, value);\n                origMapSet.call(this._map, key, entry);\n                i = head.prev;\n                // fall through\n              }\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.value = value;\n                return this;\n              }\n            }\n            entry = entry || new MapEntry(key, value);\n            if (ES.SameValue(-0, key)) {\n              entry.key = +0; // coerce -0 to +0 in entry\n            }\n            entry.next = this._head;\n            entry.prev = this._head.prev;\n            entry.prev.next = entry;\n            entry.next.prev = entry;\n            this._size += 1;\n            return this;\n          },\n\n          'delete': function (key) {\n            requireMapSlot(this, 'delete');\n            var head = this._head;\n            var i = head;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] === 'undefined') {\n                return false;\n              }\n              i = this._storage[fkey].prev;\n              delete this._storage[fkey];\n              // fall through\n            } else if (this._map) {\n              // fast object key path\n              if (!origMapHas.call(this._map, key)) {\n                return false;\n              }\n              i = origMapGet.call(this._map, key).prev;\n              origMapDelete.call(this._map, key);\n              // fall through\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.key = empty;\n                i.value = empty;\n                i.prev.next = i.next;\n                i.next.prev = i.prev;\n                this._size -= 1;\n                return true;\n              }\n            }\n            return false;\n          },\n\n          clear: function clear() {\n             /* eslint no-multi-assign: 1 */\n            requireMapSlot(this, 'clear');\n            this._map = OrigMap ? new OrigMap() : null;\n            this._size = 0;\n            this._storage = emptyObject();\n            var head = this._head;\n            var i = head;\n            var p = i.next;\n            while ((i = p) !== head) {\n              i.key = empty;\n              i.value = empty;\n              p = i.next;\n              i.next = i.prev = head;\n            }\n            head.next = head.prev = head;\n          },\n\n          keys: function keys() {\n            requireMapSlot(this, 'keys');\n            return new MapIterator(this, 'key');\n          },\n\n          values: function values() {\n            requireMapSlot(this, 'values');\n            return new MapIterator(this, 'value');\n          },\n\n          entries: function entries() {\n            requireMapSlot(this, 'entries');\n            return new MapIterator(this, 'key+value');\n          },\n\n          forEach: function forEach(callback) {\n            requireMapSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var it = this.entries();\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\n              if (context) {\n                _call(callback, context, entry.value[1], entry.value[0], this);\n              } else {\n                callback(entry.value[1], entry.value[0], this);\n              }\n            }\n          }\n        });\n        addIterator(Map$prototype, Map$prototype.entries);\n\n        return MapShim;\n      }()),\n\n      Set: (function () {\n        var isSet = function isSet(set) {\n          return set._es6set && typeof set._storage !== 'undefined';\n        };\n        var requireSetSlot = function requireSetSlot(set, method) {\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\n            // https://github.com/paulmillr/es6-shim/issues/176\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n          }\n        };\n\n        // Creating a Map is expensive.  To speed up the common case of\n        // Sets containing only string or numeric keys, we use an object\n        // as backing storage and lazily create a full Map only when\n        // required.\n        var Set$prototype;\n        var SetShim = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          if (this && this._es6set) {\n            throw new TypeError('Bad construction');\n          }\n          var set = emulateES6construct(this, Set, Set$prototype, {\n            _es6set: true,\n            '[[SetData]]': null,\n            _storage: emptyObject()\n          });\n          if (!set._es6set) {\n            throw new TypeError('bad set');\n          }\n\n          // Optionally initialize Set from iterable\n          if (arguments.length > 0) {\n            addIterableToSet(Set, set, arguments[0]);\n          }\n          return set;\n        };\n        Set$prototype = SetShim.prototype;\n\n        var decodeKey = function (key) {\n          var k = key;\n          if (k === '^null') {\n            return null;\n          } else if (k === '^undefined') {\n            return void 0;\n          } else {\n            var first = k.charAt(0);\n            if (first === '$') {\n              return _strSlice(k, 1);\n            } else if (first === 'n') {\n              return +_strSlice(k, 1);\n            } else if (first === 'b') {\n              return k === 'btrue';\n            }\n          }\n          return +k;\n        };\n        // Switch from the object backing storage to a full Map.\n        var ensureMap = function ensureMap(set) {\n          if (!set['[[SetData]]']) {\n            var m = new collectionShims.Map();\n            set['[[SetData]]'] = m;\n            _forEach(keys(set._storage), function (key) {\n              var k = decodeKey(key);\n              m.set(k, k);\n            });\n            set['[[SetData]]'] = m;\n          }\n          set._storage = null; // free old backing storage\n        };\n\n        Value.getter(SetShim.prototype, 'size', function () {\n          requireSetSlot(this, 'size');\n          if (this._storage) {\n            return keys(this._storage).length;\n          }\n          ensureMap(this);\n          return this['[[SetData]]'].size;\n        });\n\n        defineProperties(SetShim.prototype, {\n          has: function has(key) {\n            requireSetSlot(this, 'has');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              return !!this._storage[fkey];\n            }\n            ensureMap(this);\n            return this['[[SetData]]'].has(key);\n          },\n\n          add: function add(key) {\n            requireSetSlot(this, 'add');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              this._storage[fkey] = true;\n              return this;\n            }\n            ensureMap(this);\n            this['[[SetData]]'].set(key, key);\n            return this;\n          },\n\n          'delete': function (key) {\n            requireSetSlot(this, 'delete');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\n              return (delete this._storage[fkey]) && hasFKey;\n            }\n            ensureMap(this);\n            return this['[[SetData]]']['delete'](key);\n          },\n\n          clear: function clear() {\n            requireSetSlot(this, 'clear');\n            if (this._storage) {\n              this._storage = emptyObject();\n            }\n            if (this['[[SetData]]']) {\n              this['[[SetData]]'].clear();\n            }\n          },\n\n          values: function values() {\n            requireSetSlot(this, 'values');\n            ensureMap(this);\n            return this['[[SetData]]'].values();\n          },\n\n          entries: function entries() {\n            requireSetSlot(this, 'entries');\n            ensureMap(this);\n            return this['[[SetData]]'].entries();\n          },\n\n          forEach: function forEach(callback) {\n            requireSetSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var entireSet = this;\n            ensureMap(entireSet);\n            this['[[SetData]]'].forEach(function (value, key) {\n              if (context) {\n                _call(callback, context, key, key, entireSet);\n              } else {\n                callback(key, key, entireSet);\n              }\n            });\n          }\n        });\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n        addIterator(SetShim.prototype, SetShim.prototype.values);\n\n        return SetShim;\n      }())\n    };\n\n    if (globals.Map || globals.Set) {\n      // Safari 8, for example, doesn't accept an iterable.\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n      if (!mapAcceptsArguments) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, globals.Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = create(OrigMap.prototype);\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var testMap = new Map();\n      var mapUsesSameValueZero = (function () {\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n        m.set(-0, m);\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n      }());\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n        overrideNative(Map.prototype, 'set', function set(k, v) {\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\n          return this;\n        });\n      }\n      if (!mapUsesSameValueZero) {\n        defineProperties(Map.prototype, {\n          get: function get(k) {\n            return _call(origMapGet, this, k === 0 ? 0 : k);\n          },\n          has: function has(k) {\n            return _call(origMapHas, this, k === 0 ? 0 : k);\n          }\n        }, true);\n        Value.preserveToString(Map.prototype.get, origMapGet);\n        Value.preserveToString(Map.prototype.has, origMapHas);\n      }\n      var testSet = new Set();\n      var setUsesSameValueZero = (function (s) {\n        s['delete'](0);\n        s.add(-0);\n        return !s.has(0);\n      }(testSet));\n      var setSupportsChaining = testSet.add(1) === testSet;\n      if (!setUsesSameValueZero || !setSupportsChaining) {\n        var origSetAdd = Set.prototype.add;\n        Set.prototype.add = function add(v) {\n          _call(origSetAdd, this, v === 0 ? 0 : v);\n          return this;\n        };\n        Value.preserveToString(Set.prototype.add, origSetAdd);\n      }\n      if (!setUsesSameValueZero) {\n        var origSetHas = Set.prototype.has;\n        Set.prototype.has = function has(v) {\n          return _call(origSetHas, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype.has, origSetHas);\n        var origSetDel = Set.prototype['delete'];\n        Set.prototype['delete'] = function SetDelete(v) {\n          return _call(origSetDel, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\n      }\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n        var m = new M([]);\n        // Firefox 32 is ok with the instantiating the subclass but will\n        // throw when the map is used.\n        m.set(42, 42);\n        return m instanceof M;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;\n      var mapRequiresNew = (function () {\n        try {\n          return !(globals.Map() instanceof globals.Map);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = OrigMap.prototype;\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n        var s = new S([]);\n        s.add(42, 42);\n        return s instanceof S;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;\n      var setRequiresNew = (function () {\n        try {\n          return !(globals.Set() instanceof globals.Set);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n        var OrigSet = globals.Set;\n        globals.Set = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          var s = new OrigSet();\n          if (arguments.length > 0) {\n            addIterableToSet(Set, s, arguments[0]);\n          }\n          delete s.constructor;\n          Object.setPrototypeOf(s, Set.prototype);\n          return s;\n        };\n        globals.Set.prototype = OrigSet.prototype;\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n        Value.preserveToString(globals.Set, OrigSet);\n      }\n      var newMap = new globals.Map();\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n        return newMap.keys().next().done;\n      });\n      /*\n        - In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"\n      */\n      if (\n        typeof globals.Map.prototype.clear !== 'function' ||\n        new globals.Set().size !== 0 ||\n        newMap.size !== 0 ||\n        typeof globals.Map.prototype.keys !== 'function' ||\n        typeof globals.Set.prototype.keys !== 'function' ||\n        typeof globals.Map.prototype.forEach !== 'function' ||\n        typeof globals.Set.prototype.forEach !== 'function' ||\n        isCallableWithoutNew(globals.Map) ||\n        isCallableWithoutNew(globals.Set) ||\n        typeof newMap.keys().next !== 'function' || // Safari 8\n        mapIterationThrowsStopIterator || // Firefox 25\n        !mapSupportsSubclassing\n      ) {\n        defineProperties(globals, {\n          Map: collectionShims.Map,\n          Set: collectionShims.Set\n        }, true);\n      }\n\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n      }\n\n      // Shim incomplete iterator implementations.\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n        var anonymousSetHas = globals.Set.prototype.has;\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\n          return _call(anonymousSetHas, this, key);\n        });\n      }\n    }\n    defineProperties(globals, collectionShims);\n    addDefaultSpecies(globals.Map);\n    addDefaultSpecies(globals.Set);\n  }\n\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n    if (!ES.TypeIsObject(target)) {\n      throw new TypeError('target must be an object');\n    }\n  };\n\n  // Some Reflect methods are basically the same as\n  // those on the Object global, except that a TypeError is thrown if\n  // target isn't an object. As well as returning a boolean indicating\n  // the success of the operation.\n  var ReflectShims = {\n    // Apply method in a functional form.\n    apply: function apply() {\n      return ES.Call(ES.Call, null, arguments);\n    },\n\n    // New operator in a functional form.\n    construct: function construct(constructor, args) {\n      if (!ES.IsConstructor(constructor)) {\n        throw new TypeError('First argument must be a constructor.');\n      }\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n      if (!ES.IsConstructor(newTarget)) {\n        throw new TypeError('new.target must be a constructor.');\n      }\n      return ES.Construct(constructor, args, newTarget, 'internal');\n    },\n\n    // When deleting a non-existent or configurable property,\n    // true is returned.\n    // When attempting to delete a non-configurable property,\n    // it will return false.\n    deleteProperty: function deleteProperty(target, key) {\n      throwUnlessTargetIsObject(target);\n      if (supportsDescriptors) {\n        var desc = Object.getOwnPropertyDescriptor(target, key);\n\n        if (desc && !desc.configurable) {\n          return false;\n        }\n      }\n\n      // Will return true.\n      return delete target[key];\n    },\n\n    has: function has(target, key) {\n      throwUnlessTargetIsObject(target);\n      return key in target;\n    }\n  };\n\n  if (Object.getOwnPropertyNames) {\n    Object.assign(ReflectShims, {\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\n      // Concatenating propertyNames and propertySymbols should do the trick.\n      // This should continue to work together with a Symbol shim\n      // which overrides Object.getOwnPropertyNames and implements\n      // Object.getOwnPropertySymbols.\n      ownKeys: function ownKeys(target) {\n        throwUnlessTargetIsObject(target);\n        var keys = Object.getOwnPropertyNames(target);\n\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\n        }\n\n        return keys;\n      }\n    });\n  }\n\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n    return !throwsError(func);\n  };\n\n  if (Object.preventExtensions) {\n    Object.assign(ReflectShims, {\n      isExtensible: function isExtensible(target) {\n        throwUnlessTargetIsObject(target);\n        return Object.isExtensible(target);\n      },\n      preventExtensions: function preventExtensions(target) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.preventExtensions(target);\n        });\n      }\n    });\n  }\n\n  if (supportsDescriptors) {\n    var internalGet = function get(target, key, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent === null) {\n          return void 0;\n        }\n\n        return internalGet(parent, key, receiver);\n      }\n\n      if ('value' in desc) {\n        return desc.value;\n      }\n\n      if (desc.get) {\n        return ES.Call(desc.get, receiver);\n      }\n\n      return void 0;\n    };\n\n    var internalSet = function set(target, key, value, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return internalSet(parent, key, value, receiver);\n        }\n\n        desc = {\n          value: void 0,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        };\n      }\n\n      if ('value' in desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        if (!ES.TypeIsObject(receiver)) {\n          return false;\n        }\n\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\n        if (existingDesc) {\n          return Reflect.defineProperty(receiver, key, {\n            value: value\n          });\n        } else {\n          return Reflect.defineProperty(receiver, key, {\n            value: value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n\n      if (desc.set) {\n        _call(desc.set, receiver, value);\n        return true;\n      }\n\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.defineProperty(target, propertyKey, attributes);\n        });\n      },\n\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n        throwUnlessTargetIsObject(target);\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\n      },\n\n      // Syntax in a functional form.\n      get: function get(target, key) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 2 ? arguments[2] : target;\n\n        return internalGet(target, key, receiver);\n      },\n\n      set: function set(target, key, value) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 3 ? arguments[3] : target;\n\n        return internalSet(target, key, value, receiver);\n      }\n    });\n  }\n\n  if (Object.getPrototypeOf) {\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n      throwUnlessTargetIsObject(target);\n      return objectDotGetPrototypeOf(target);\n    };\n  }\n\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n    var willCreateCircularPrototype = function (object, lastProto) {\n      var proto = lastProto;\n      while (proto) {\n        if (object === proto) {\n          return true;\n        }\n        proto = ReflectShims.getPrototypeOf(proto);\n      }\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      // Sets the prototype of the given object.\n      // Returns true on success, otherwise false.\n      setPrototypeOf: function setPrototypeOf(object, proto) {\n        throwUnlessTargetIsObject(object);\n        if (proto !== null && !ES.TypeIsObject(proto)) {\n          throw new TypeError('proto must be an object or null');\n        }\n\n        // If they already are the same, we're done.\n        if (proto === Reflect.getPrototypeOf(object)) {\n          return true;\n        }\n\n        // Cannot alter prototype if object not extensible.\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n          return false;\n        }\n\n        // Ensure that we do not create a circular prototype chain.\n        if (willCreateCircularPrototype(object, proto)) {\n          return false;\n        }\n\n        Object.setPrototypeOf(object, proto);\n\n        return true;\n      }\n    });\n  }\n  var defineOrOverrideReflectProperty = function (key, shim) {\n    if (!ES.IsCallable(globals.Reflect[key])) {\n      defineProperty(globals.Reflect, key, shim);\n    } else {\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n        globals.Reflect[key](1);\n        globals.Reflect[key](NaN);\n        globals.Reflect[key](true);\n        return true;\n      });\n      if (acceptsPrimitives) {\n        overrideNative(globals.Reflect, key, shim);\n      }\n    }\n  };\n  Object.keys(ReflectShims).forEach(function (key) {\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n  });\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n      return _call(originalReflectGetProto, globals.Reflect, target);\n    });\n  }\n  if (globals.Reflect.setPrototypeOf) {\n    if (valueOrFalseIfThrows(function () {\n      globals.Reflect.setPrototypeOf(1, {});\n      return true;\n    })) {\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n    }\n  }\n  if (globals.Reflect.defineProperty) {\n    if (!valueOrFalseIfThrows(function () {\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n      // \"extensible\" fails on Edge 0.12\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n      return basic && extensible;\n    })) {\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n    }\n  }\n  if (globals.Reflect.construct) {\n    if (!valueOrFalseIfThrows(function () {\n      var F = function F() {};\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n    })) {\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n    }\n  }\n\n  if (String(new Date(NaN)) !== 'Invalid Date') {\n    var dateToString = Date.prototype.toString;\n    var shimmedDateToString = function toString() {\n      var valueOf = +this;\n      if (valueOf !== valueOf) {\n        return 'Invalid Date';\n      }\n      return ES.Call(dateToString, this);\n    };\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n  }\n\n  // Annex B HTML methods\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object\n  var stringHTMLshims = {\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n  };\n  _forEach(Object.keys(stringHTMLshims), function (key) {\n    var method = String.prototype[key];\n    var shouldOverwrite = false;\n    if (ES.IsCallable(method)) {\n      var output = _call(method, '', ' \" ');\n      var quotesCount = _concat([], output.match(/\"/g)).length;\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n    } else {\n      shouldOverwrite = true;\n    }\n    if (shouldOverwrite) {\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\n    }\n  });\n\n  var JSONstringifiesSymbols = (function () {\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n    if (!hasSymbols) { return false; } // Symbols are not supported\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n    if (!stringify) { return false; } // JSON.stringify is not supported\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n    var obj = { a: Symbol() };\n    obj[Symbol()] = true;\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n    return false;\n  }());\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n    // Chrome 45 throws on stringifying object symbols\n    if (!hasSymbols) { return true; } // Symbols are not supported\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n  });\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n    var origStringify = JSON.stringify;\n    overrideNative(JSON, 'stringify', function stringify(value) {\n      if (typeof value === 'symbol') { return; }\n      var replacer;\n      if (arguments.length > 1) {\n        replacer = arguments[1];\n      }\n      var args = [value];\n      if (!isArray(replacer)) {\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n        var wrappedReplacer = function (key, val) {\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n          if (typeof parsedValue !== 'symbol') {\n            if (Type.symbol(parsedValue)) {\n              return assignTo({})(parsedValue);\n            } else {\n              return parsedValue;\n            }\n          }\n        };\n        args.push(wrappedReplacer);\n      } else {\n        // create wrapped replacer that handles an array replacer?\n        args.push(replacer);\n      }\n      if (arguments.length > 2) {\n        args.push(arguments[2]);\n      }\n      return origStringify.apply(this, args);\n    });\n  }\n\n  return globals;\n}));\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(1)))\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\n__webpack_require__(5);\nmodule.exports = self.fetch.bind(self);\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process, global) {/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.4+314e4831\n */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && \"function\" === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    });\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(1), __webpack_require__(0)))\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scss_identity_scss__ = __webpack_require__(8);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scss_identity_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__scss_identity_scss__);\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 9 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__header_scss__ = __webpack_require__(10);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__header_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__header_scss__);\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 11 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__footer_scss__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__footer_scss___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__footer_scss__);\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function($) {document.addEventListener(\"DOMContentLoaded\", function () {\n  $(document).foundation();\n});\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(14)))\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = $;\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// js/entry.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"../\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3e4216014ed36b2c3373","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/webpack/buildin/global.js\n// module id = 0\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/process/browser.js\n// module id = 1\n// module chunks = 0","import 'es6-shim';\nimport 'isomorphic-fetch';\nimport { Promise } from 'es6-promise';\nPromise.polyfill();\n\nimport './components/identity/index.js';\nimport './components/header/index.js';\nimport './components/footer/index.js';\n\nimport './js/app.js';\n\n\n// WEBPACK FOOTER //\n// ./entry.js"," /*!\n  * https://github.com/paulmillr/es6-shim\n  * @license es6-shim Copyright 2013-2016 by Paul Miller (http://paulmillr.com)\n  *   and contributors,  MIT License\n  * es6-shim: v0.35.1\n  * see https://github.com/paulmillr/es6-shim/blob/0.35.1/LICENSE\n  * Details and documentation:\n  * https://github.com/paulmillr/es6-shim/\n  */\n\n// UMD (Universal Module Definition)\n// see https://github.com/umdjs/umd/blob/master/returnExports.js\n(function (root, factory) {\n  /*global define, module, exports */\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(factory);\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    // Browser globals (root is window)\n    root.returnExports = factory();\n  }\n}(this, function () {\n  'use strict';\n\n  var _apply = Function.call.bind(Function.apply);\n  var _call = Function.call.bind(Function.call);\n  var isArray = Array.isArray;\n  var keys = Object.keys;\n\n  var not = function notThunker(func) {\n    return function notThunk() {\n      return !_apply(func, this, arguments);\n    };\n  };\n  var throwsError = function (func) {\n    try {\n      func();\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  var valueOrFalseIfThrows = function valueOrFalseIfThrows(func) {\n    try {\n      return func();\n    } catch (e) {\n      return false;\n    }\n  };\n\n  var isCallableWithoutNew = not(throwsError);\n  var arePropertyDescriptorsSupported = function () {\n    // if Object.defineProperty exists but throws, it's IE 8\n    return !throwsError(function () {\n      Object.defineProperty({}, 'x', { get: function () {} });\n    });\n  };\n  var supportsDescriptors = !!Object.defineProperty && arePropertyDescriptorsSupported();\n  var functionsHaveNames = (function foo() {}).name === 'foo'; // eslint-disable-line no-extra-parens\n\n  var _forEach = Function.call.bind(Array.prototype.forEach);\n  var _reduce = Function.call.bind(Array.prototype.reduce);\n  var _filter = Function.call.bind(Array.prototype.filter);\n  var _some = Function.call.bind(Array.prototype.some);\n\n  var defineProperty = function (object, name, value, force) {\n    if (!force && name in object) { return; }\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n\n  // Define configurable, writable and non-enumerable props\n  // if they don’t exist.\n  var defineProperties = function (object, map, forceOverride) {\n    _forEach(keys(map), function (name) {\n      var method = map[name];\n      defineProperty(object, name, method, !!forceOverride);\n    });\n  };\n\n  var _toString = Function.call.bind(Object.prototype.toString);\n  var isCallable = typeof /abc/ === 'function' ? function IsCallableSlow(x) {\n    // Some old browsers (IE, FF) say that typeof /abc/ === 'function'\n    return typeof x === 'function' && _toString(x) === '[object Function]';\n  } : function IsCallableFast(x) { return typeof x === 'function'; };\n\n  var Value = {\n    getter: function (object, name, getter) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: false,\n        get: getter\n      });\n    },\n    proxy: function (originalObject, key, targetObject) {\n      if (!supportsDescriptors) {\n        throw new TypeError('getters require true ES5 support');\n      }\n      var originalDescriptor = Object.getOwnPropertyDescriptor(originalObject, key);\n      Object.defineProperty(targetObject, key, {\n        configurable: originalDescriptor.configurable,\n        enumerable: originalDescriptor.enumerable,\n        get: function getKey() { return originalObject[key]; },\n        set: function setKey(value) { originalObject[key] = value; }\n      });\n    },\n    redefine: function (object, property, newValue) {\n      if (supportsDescriptors) {\n        var descriptor = Object.getOwnPropertyDescriptor(object, property);\n        descriptor.value = newValue;\n        Object.defineProperty(object, property, descriptor);\n      } else {\n        object[property] = newValue;\n      }\n    },\n    defineByDescriptor: function (object, property, descriptor) {\n      if (supportsDescriptors) {\n        Object.defineProperty(object, property, descriptor);\n      } else if ('value' in descriptor) {\n        object[property] = descriptor.value;\n      }\n    },\n    preserveToString: function (target, source) {\n      if (source && isCallable(source.toString)) {\n        defineProperty(target, 'toString', source.toString.bind(source), true);\n      }\n    }\n  };\n\n  // Simple shim for Object.create on ES3 browsers\n  // (unlike real shim, no attempt to support `prototype === null`)\n  var create = Object.create || function (prototype, properties) {\n    var Prototype = function Prototype() {};\n    Prototype.prototype = prototype;\n    var object = new Prototype();\n    if (typeof properties !== 'undefined') {\n      keys(properties).forEach(function (key) {\n        Value.defineByDescriptor(object, key, properties[key]);\n      });\n    }\n    return object;\n  };\n\n  var supportsSubclassing = function (C, f) {\n    if (!Object.setPrototypeOf) { return false; /* skip test on IE < 11 */ }\n    return valueOrFalseIfThrows(function () {\n      var Sub = function Subclass(arg) {\n        var o = new C(arg);\n        Object.setPrototypeOf(o, Subclass.prototype);\n        return o;\n      };\n      Object.setPrototypeOf(Sub, C);\n      Sub.prototype = create(C.prototype, {\n        constructor: { value: Sub }\n      });\n      return f(Sub);\n    });\n  };\n\n  var getGlobal = function () {\n    /* global self, window, global */\n    // the only reliable means to get the global object is\n    // `Function('return this')()`\n    // However, this causes CSP violations in Chrome apps.\n    if (typeof self !== 'undefined') { return self; }\n    if (typeof window !== 'undefined') { return window; }\n    if (typeof global !== 'undefined') { return global; }\n    throw new Error('unable to locate global object');\n  };\n\n  var globals = getGlobal();\n  var globalIsFinite = globals.isFinite;\n  var _indexOf = Function.call.bind(String.prototype.indexOf);\n  var _arrayIndexOfApply = Function.apply.bind(Array.prototype.indexOf);\n  var _concat = Function.call.bind(Array.prototype.concat);\n  // var _sort = Function.call.bind(Array.prototype.sort);\n  var _strSlice = Function.call.bind(String.prototype.slice);\n  var _push = Function.call.bind(Array.prototype.push);\n  var _pushApply = Function.apply.bind(Array.prototype.push);\n  var _shift = Function.call.bind(Array.prototype.shift);\n  var _max = Math.max;\n  var _min = Math.min;\n  var _floor = Math.floor;\n  var _abs = Math.abs;\n  var _exp = Math.exp;\n  var _log = Math.log;\n  var _sqrt = Math.sqrt;\n  var _hasOwnProperty = Function.call.bind(Object.prototype.hasOwnProperty);\n  var ArrayIterator; // make our implementation private\n  var noop = function () {};\n\n  var OrigMap = globals.Map;\n  var origMapDelete = OrigMap && OrigMap.prototype['delete'];\n  var origMapGet = OrigMap && OrigMap.prototype.get;\n  var origMapHas = OrigMap && OrigMap.prototype.has;\n  var origMapSet = OrigMap && OrigMap.prototype.set;\n\n  var Symbol = globals.Symbol || {};\n  var symbolSpecies = Symbol.species || '@@species';\n\n  var numberIsNaN = Number.isNaN || function isNaN(value) {\n    // NaN !== NaN, but they are identical.\n    // NaNs are the only non-reflexive value, i.e., if x !== x,\n    // then x is NaN.\n    // isNaN is broken: it converts its argument to number, so\n    // isNaN('foo') => true\n    return value !== value;\n  };\n  var numberIsFinite = Number.isFinite || function isFinite(value) {\n    return typeof value === 'number' && globalIsFinite(value);\n  };\n  var _sign = isCallable(Math.sign) ? Math.sign : function sign(value) {\n    var number = Number(value);\n    if (number === 0) { return number; }\n    if (numberIsNaN(number)) { return number; }\n    return number < 0 ? -1 : 1;\n  };\n\n  // taken directly from https://github.com/ljharb/is-arguments/blob/master/index.js\n  // can be replaced with require('is-arguments') if we ever use a build process instead\n  var isStandardArguments = function isArguments(value) {\n    return _toString(value) === '[object Arguments]';\n  };\n  var isLegacyArguments = function isArguments(value) {\n    return value !== null &&\n      typeof value === 'object' &&\n      typeof value.length === 'number' &&\n      value.length >= 0 &&\n      _toString(value) !== '[object Array]' &&\n      _toString(value.callee) === '[object Function]';\n  };\n  var isArguments = isStandardArguments(arguments) ? isStandardArguments : isLegacyArguments;\n\n  var Type = {\n    primitive: function (x) { return x === null || (typeof x !== 'function' && typeof x !== 'object'); },\n    string: function (x) { return _toString(x) === '[object String]'; },\n    regex: function (x) { return _toString(x) === '[object RegExp]'; },\n    symbol: function (x) {\n      return typeof globals.Symbol === 'function' && typeof x === 'symbol';\n    }\n  };\n\n  var overrideNative = function overrideNative(object, property, replacement) {\n    var original = object[property];\n    defineProperty(object, property, replacement, true);\n    Value.preserveToString(object[property], original);\n  };\n\n  // eslint-disable-next-line no-restricted-properties\n  var hasSymbols = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' && Type.symbol(Symbol());\n\n  // This is a private name in the es6 spec, equal to '[Symbol.iterator]'\n  // we're going to use an arbitrary _-prefixed name to make our shims\n  // work properly with each other, even though we don't have full Iterator\n  // support.  That is, `Array.from(map.keys())` will work, but we don't\n  // pretend to export a \"real\" Iterator interface.\n  var $iterator$ = Type.symbol(Symbol.iterator) ? Symbol.iterator : '_es6-shim iterator_';\n  // Firefox ships a partial implementation using the name @@iterator.\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=907077#c14\n  // So use that name if we detect it.\n  if (globals.Set && typeof new globals.Set()['@@iterator'] === 'function') {\n    $iterator$ = '@@iterator';\n  }\n\n  // Reflect\n  if (!globals.Reflect) {\n    defineProperty(globals, 'Reflect', {}, true);\n  }\n  var Reflect = globals.Reflect;\n\n  var $String = String;\n\n  /* global document */\n  var domAll = (typeof document === 'undefined' || !document) ? null : document.all;\n  /* jshint eqnull:true */\n  var isNullOrUndefined = domAll == null ? function isNullOrUndefined(x) {\n    /* jshint eqnull:true */\n    return x == null;\n  } : function isNullOrUndefinedAndNotDocumentAll(x) {\n    /* jshint eqnull:true */\n    return x == null && x !== domAll;\n  };\n\n  var ES = {\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-call\n    Call: function Call(F, V) {\n      var args = arguments.length > 2 ? arguments[2] : [];\n      if (!ES.IsCallable(F)) {\n        throw new TypeError(F + ' is not a function');\n      }\n      return _apply(F, V, args);\n    },\n\n    RequireObjectCoercible: function (x, optMessage) {\n      if (isNullOrUndefined(x)) {\n        throw new TypeError(optMessage || 'Cannot call method on ' + x);\n      }\n      return x;\n    },\n\n    // This might miss the \"(non-standard exotic and does not implement\n    // [[Call]])\" case from\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-typeof-operator-runtime-semantics-evaluation\n    // but we can't find any evidence these objects exist in practice.\n    // If we find some in the future, you could test `Object(x) === x`,\n    // which is reliable according to\n    // http://www.ecma-international.org/ecma-262/6.0/#sec-toobject\n    // but is not well optimized by runtimes and creates an object\n    // whenever it returns false, and thus is very slow.\n    TypeIsObject: function (x) {\n      if (x === void 0 || x === null || x === true || x === false) {\n        return false;\n      }\n      return typeof x === 'function' || typeof x === 'object' || x === domAll;\n    },\n\n    ToObject: function (o, optMessage) {\n      return Object(ES.RequireObjectCoercible(o, optMessage));\n    },\n\n    IsCallable: isCallable,\n\n    IsConstructor: function (x) {\n      // We can't tell callables from constructors in ES5\n      return ES.IsCallable(x);\n    },\n\n    ToInt32: function (x) {\n      return ES.ToNumber(x) >> 0;\n    },\n\n    ToUint32: function (x) {\n      return ES.ToNumber(x) >>> 0;\n    },\n\n    ToNumber: function (value) {\n      if (_toString(value) === '[object Symbol]') {\n        throw new TypeError('Cannot convert a Symbol value to a number');\n      }\n      return +value;\n    },\n\n    ToInteger: function (value) {\n      var number = ES.ToNumber(value);\n      if (numberIsNaN(number)) { return 0; }\n      if (number === 0 || !numberIsFinite(number)) { return number; }\n      return (number > 0 ? 1 : -1) * _floor(_abs(number));\n    },\n\n    ToLength: function (value) {\n      var len = ES.ToInteger(value);\n      if (len <= 0) { return 0; } // includes converting -0 to +0\n      if (len > Number.MAX_SAFE_INTEGER) { return Number.MAX_SAFE_INTEGER; }\n      return len;\n    },\n\n    SameValue: function (a, b) {\n      if (a === b) {\n        // 0 === -0, but they are not identical.\n        if (a === 0) { return 1 / a === 1 / b; }\n        return true;\n      }\n      return numberIsNaN(a) && numberIsNaN(b);\n    },\n\n    SameValueZero: function (a, b) {\n      // same as SameValue except for SameValueZero(+0, -0) == true\n      return (a === b) || (numberIsNaN(a) && numberIsNaN(b));\n    },\n\n    IsIterable: function (o) {\n      return ES.TypeIsObject(o) && (typeof o[$iterator$] !== 'undefined' || isArguments(o));\n    },\n\n    GetIterator: function (o) {\n      if (isArguments(o)) {\n        // special case support for `arguments`\n        return new ArrayIterator(o, 'value');\n      }\n      var itFn = ES.GetMethod(o, $iterator$);\n      if (!ES.IsCallable(itFn)) {\n        // Better diagnostics if itFn is null or undefined\n        throw new TypeError('value is not an iterable');\n      }\n      var it = ES.Call(itFn, o);\n      if (!ES.TypeIsObject(it)) {\n        throw new TypeError('bad iterator');\n      }\n      return it;\n    },\n\n    GetMethod: function (o, p) {\n      var func = ES.ToObject(o)[p];\n      if (isNullOrUndefined(func)) {\n        return void 0;\n      }\n      if (!ES.IsCallable(func)) {\n        throw new TypeError('Method not callable: ' + p);\n      }\n      return func;\n    },\n\n    IteratorComplete: function (iterResult) {\n      return !!iterResult.done;\n    },\n\n    IteratorClose: function (iterator, completionIsThrow) {\n      var returnMethod = ES.GetMethod(iterator, 'return');\n      if (returnMethod === void 0) {\n        return;\n      }\n      var innerResult, innerException;\n      try {\n        innerResult = ES.Call(returnMethod, iterator);\n      } catch (e) {\n        innerException = e;\n      }\n      if (completionIsThrow) {\n        return;\n      }\n      if (innerException) {\n        throw innerException;\n      }\n      if (!ES.TypeIsObject(innerResult)) {\n        throw new TypeError(\"Iterator's return method returned a non-object.\");\n      }\n    },\n\n    IteratorNext: function (it) {\n      var result = arguments.length > 1 ? it.next(arguments[1]) : it.next();\n      if (!ES.TypeIsObject(result)) {\n        throw new TypeError('bad iterator');\n      }\n      return result;\n    },\n\n    IteratorStep: function (it) {\n      var result = ES.IteratorNext(it);\n      var done = ES.IteratorComplete(result);\n      return done ? false : result;\n    },\n\n    Construct: function (C, args, newTarget, isES6internal) {\n      var target = typeof newTarget === 'undefined' ? C : newTarget;\n\n      if (!isES6internal && Reflect.construct) {\n        // Try to use Reflect.construct if available\n        return Reflect.construct(C, args, target);\n      }\n      // OK, we have to fake it.  This will only work if the\n      // C.[[ConstructorKind]] == \"base\" -- but that's the only\n      // kind we can make in ES5 code anyway.\n\n      // OrdinaryCreateFromConstructor(target, \"%ObjectPrototype%\")\n      var proto = target.prototype;\n      if (!ES.TypeIsObject(proto)) {\n        proto = Object.prototype;\n      }\n      var obj = create(proto);\n      // Call the constructor.\n      var result = ES.Call(C, obj, args);\n      return ES.TypeIsObject(result) ? result : obj;\n    },\n\n    SpeciesConstructor: function (O, defaultConstructor) {\n      var C = O.constructor;\n      if (C === void 0) {\n        return defaultConstructor;\n      }\n      if (!ES.TypeIsObject(C)) {\n        throw new TypeError('Bad constructor');\n      }\n      var S = C[symbolSpecies];\n      if (isNullOrUndefined(S)) {\n        return defaultConstructor;\n      }\n      if (!ES.IsConstructor(S)) {\n        throw new TypeError('Bad @@species');\n      }\n      return S;\n    },\n\n    CreateHTML: function (string, tag, attribute, value) {\n      var S = ES.ToString(string);\n      var p1 = '<' + tag;\n      if (attribute !== '') {\n        var V = ES.ToString(value);\n        var escapedV = V.replace(/\"/g, '&quot;');\n        p1 += ' ' + attribute + '=\"' + escapedV + '\"';\n      }\n      var p2 = p1 + '>';\n      var p3 = p2 + S;\n      return p3 + '</' + tag + '>';\n    },\n\n    IsRegExp: function IsRegExp(argument) {\n      if (!ES.TypeIsObject(argument)) {\n        return false;\n      }\n      var isRegExp = argument[Symbol.match];\n      if (typeof isRegExp !== 'undefined') {\n        return !!isRegExp;\n      }\n      return Type.regex(argument);\n    },\n\n    ToString: function ToString(string) {\n      return $String(string);\n    }\n  };\n\n  // Well-known Symbol shims\n  if (supportsDescriptors && hasSymbols) {\n    var defineWellKnownSymbol = function defineWellKnownSymbol(name) {\n      if (Type.symbol(Symbol[name])) {\n        return Symbol[name];\n      }\n      // eslint-disable-next-line no-restricted-properties\n      var sym = Symbol['for']('Symbol.' + name);\n      Object.defineProperty(Symbol, name, {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: sym\n      });\n      return sym;\n    };\n    if (!Type.symbol(Symbol.search)) {\n      var symbolSearch = defineWellKnownSymbol('search');\n      var originalSearch = String.prototype.search;\n      defineProperty(RegExp.prototype, symbolSearch, function search(string) {\n        return ES.Call(originalSearch, string, [this]);\n      });\n      var searchShim = function search(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var searcher = ES.GetMethod(regexp, symbolSearch);\n          if (typeof searcher !== 'undefined') {\n            return ES.Call(searcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalSearch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'search', searchShim);\n    }\n    if (!Type.symbol(Symbol.replace)) {\n      var symbolReplace = defineWellKnownSymbol('replace');\n      var originalReplace = String.prototype.replace;\n      defineProperty(RegExp.prototype, symbolReplace, function replace(string, replaceValue) {\n        return ES.Call(originalReplace, string, [this, replaceValue]);\n      });\n      var replaceShim = function replace(searchValue, replaceValue) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(searchValue)) {\n          var replacer = ES.GetMethod(searchValue, symbolReplace);\n          if (typeof replacer !== 'undefined') {\n            return ES.Call(replacer, searchValue, [O, replaceValue]);\n          }\n        }\n        return ES.Call(originalReplace, O, [ES.ToString(searchValue), replaceValue]);\n      };\n      overrideNative(String.prototype, 'replace', replaceShim);\n    }\n    if (!Type.symbol(Symbol.split)) {\n      var symbolSplit = defineWellKnownSymbol('split');\n      var originalSplit = String.prototype.split;\n      defineProperty(RegExp.prototype, symbolSplit, function split(string, limit) {\n        return ES.Call(originalSplit, string, [this, limit]);\n      });\n      var splitShim = function split(separator, limit) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(separator)) {\n          var splitter = ES.GetMethod(separator, symbolSplit);\n          if (typeof splitter !== 'undefined') {\n            return ES.Call(splitter, separator, [O, limit]);\n          }\n        }\n        return ES.Call(originalSplit, O, [ES.ToString(separator), limit]);\n      };\n      overrideNative(String.prototype, 'split', splitShim);\n    }\n    var symbolMatchExists = Type.symbol(Symbol.match);\n    var stringMatchIgnoresSymbolMatch = symbolMatchExists && (function () {\n      // Firefox 41, through Nightly 45 has Symbol.match, but String#match ignores it.\n      // Firefox 40 and below have Symbol.match but String#match works fine.\n      var o = {};\n      o[Symbol.match] = function () { return 42; };\n      return 'a'.match(o) !== 42;\n    }());\n    if (!symbolMatchExists || stringMatchIgnoresSymbolMatch) {\n      var symbolMatch = defineWellKnownSymbol('match');\n\n      var originalMatch = String.prototype.match;\n      defineProperty(RegExp.prototype, symbolMatch, function match(string) {\n        return ES.Call(originalMatch, string, [this]);\n      });\n\n      var matchShim = function match(regexp) {\n        var O = ES.RequireObjectCoercible(this);\n        if (!isNullOrUndefined(regexp)) {\n          var matcher = ES.GetMethod(regexp, symbolMatch);\n          if (typeof matcher !== 'undefined') {\n            return ES.Call(matcher, regexp, [O]);\n          }\n        }\n        return ES.Call(originalMatch, O, [ES.ToString(regexp)]);\n      };\n      overrideNative(String.prototype, 'match', matchShim);\n    }\n  }\n\n  var wrapConstructor = function wrapConstructor(original, replacement, keysToSkip) {\n    Value.preserveToString(replacement, original);\n    if (Object.setPrototypeOf) {\n      // sets up proper prototype chain where possible\n      Object.setPrototypeOf(original, replacement);\n    }\n    if (supportsDescriptors) {\n      _forEach(Object.getOwnPropertyNames(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        Value.proxy(original, key, replacement);\n      });\n    } else {\n      _forEach(Object.keys(original), function (key) {\n        if (key in noop || keysToSkip[key]) { return; }\n        replacement[key] = original[key];\n      });\n    }\n    replacement.prototype = original.prototype;\n    Value.redefine(original.prototype, 'constructor', replacement);\n  };\n\n  var defaultSpeciesGetter = function () { return this; };\n  var addDefaultSpecies = function (C) {\n    if (supportsDescriptors && !_hasOwnProperty(C, symbolSpecies)) {\n      Value.getter(C, symbolSpecies, defaultSpeciesGetter);\n    }\n  };\n\n  var addIterator = function (prototype, impl) {\n    var implementation = impl || function iterator() { return this; };\n    defineProperty(prototype, $iterator$, implementation);\n    if (!prototype[$iterator$] && Type.symbol($iterator$)) {\n      // implementations are buggy when $iterator$ is a Symbol\n      prototype[$iterator$] = implementation;\n    }\n  };\n\n  var createDataProperty = function createDataProperty(object, name, value) {\n    if (supportsDescriptors) {\n      Object.defineProperty(object, name, {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n        value: value\n      });\n    } else {\n      object[name] = value;\n    }\n  };\n  var createDataPropertyOrThrow = function createDataPropertyOrThrow(object, name, value) {\n    createDataProperty(object, name, value);\n    if (!ES.SameValue(object[name], value)) {\n      throw new TypeError('property is nonconfigurable');\n    }\n  };\n\n  var emulateES6construct = function (o, defaultNewTarget, defaultProto, slots) {\n    // This is an es5 approximation to es6 construct semantics.  in es6,\n    // 'new Foo' invokes Foo.[[Construct]] which (for almost all objects)\n    // just sets the internal variable NewTarget (in es6 syntax `new.target`)\n    // to Foo and then returns Foo().\n\n    // Many ES6 object then have constructors of the form:\n    // 1. If NewTarget is undefined, throw a TypeError exception\n    // 2. Let xxx by OrdinaryCreateFromConstructor(NewTarget, yyy, zzz)\n\n    // So we're going to emulate those first two steps.\n    if (!ES.TypeIsObject(o)) {\n      throw new TypeError('Constructor requires `new`: ' + defaultNewTarget.name);\n    }\n    var proto = defaultNewTarget.prototype;\n    if (!ES.TypeIsObject(proto)) {\n      proto = defaultProto;\n    }\n    var obj = create(proto);\n    for (var name in slots) {\n      if (_hasOwnProperty(slots, name)) {\n        var value = slots[name];\n        defineProperty(obj, name, value, true);\n      }\n    }\n    return obj;\n  };\n\n  // Firefox 31 reports this function's length as 0\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=1062484\n  if (String.fromCodePoint && String.fromCodePoint.length !== 1) {\n    var originalFromCodePoint = String.fromCodePoint;\n    overrideNative(String, 'fromCodePoint', function fromCodePoint(codePoints) {\n      return ES.Call(originalFromCodePoint, this, arguments);\n    });\n  }\n\n  var StringShims = {\n    fromCodePoint: function fromCodePoint(codePoints) {\n      var result = [];\n      var next;\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        next = Number(arguments[i]);\n        if (!ES.SameValue(next, ES.ToInteger(next)) || next < 0 || next > 0x10FFFF) {\n          throw new RangeError('Invalid code point ' + next);\n        }\n\n        if (next < 0x10000) {\n          _push(result, String.fromCharCode(next));\n        } else {\n          next -= 0x10000;\n          _push(result, String.fromCharCode((next >> 10) + 0xD800));\n          _push(result, String.fromCharCode((next % 0x400) + 0xDC00));\n        }\n      }\n      return result.join('');\n    },\n\n    raw: function raw(callSite) {\n      var cooked = ES.ToObject(callSite, 'bad callSite');\n      var rawString = ES.ToObject(cooked.raw, 'bad raw value');\n      var len = rawString.length;\n      var literalsegments = ES.ToLength(len);\n      if (literalsegments <= 0) {\n        return '';\n      }\n\n      var stringElements = [];\n      var nextIndex = 0;\n      var nextKey, next, nextSeg, nextSub;\n      while (nextIndex < literalsegments) {\n        nextKey = ES.ToString(nextIndex);\n        nextSeg = ES.ToString(rawString[nextKey]);\n        _push(stringElements, nextSeg);\n        if (nextIndex + 1 >= literalsegments) {\n          break;\n        }\n        next = nextIndex + 1 < arguments.length ? arguments[nextIndex + 1] : '';\n        nextSub = ES.ToString(next);\n        _push(stringElements, nextSub);\n        nextIndex += 1;\n      }\n      return stringElements.join('');\n    }\n  };\n  if (String.raw && String.raw({ raw: { 0: 'x', 1: 'y', length: 2 } }) !== 'xy') {\n    // IE 11 TP has a broken String.raw implementation\n    overrideNative(String, 'raw', StringShims.raw);\n  }\n  defineProperties(String, StringShims);\n\n  // Fast repeat, uses the `Exponentiation by squaring` algorithm.\n  // Perf: http://jsperf.com/string-repeat2/2\n  var stringRepeat = function repeat(s, times) {\n    if (times < 1) { return ''; }\n    if (times % 2) { return repeat(s, times - 1) + s; }\n    var half = repeat(s, times / 2);\n    return half + half;\n  };\n  var stringMaxLength = Infinity;\n\n  var StringPrototypeShims = {\n    repeat: function repeat(times) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var numTimes = ES.ToInteger(times);\n      if (numTimes < 0 || numTimes >= stringMaxLength) {\n        throw new RangeError('repeat count must be less than infinity and not overflow maximum string size');\n      }\n      return stringRepeat(thisStr, numTimes);\n    },\n\n    startsWith: function startsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"startsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      var start = _max(ES.ToInteger(position), 0);\n      return _strSlice(S, start, start + searchStr.length) === searchStr;\n    },\n\n    endsWith: function endsWith(searchString) {\n      var S = ES.ToString(ES.RequireObjectCoercible(this));\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('Cannot call method \"endsWith\" with a regex');\n      }\n      var searchStr = ES.ToString(searchString);\n      var len = S.length;\n      var endPosition;\n      if (arguments.length > 1) {\n        endPosition = arguments[1];\n      }\n      var pos = typeof endPosition === 'undefined' ? len : ES.ToInteger(endPosition);\n      var end = _min(_max(pos, 0), len);\n      return _strSlice(S, end - searchStr.length, end) === searchStr;\n    },\n\n    includes: function includes(searchString) {\n      if (ES.IsRegExp(searchString)) {\n        throw new TypeError('\"includes\" does not accept a RegExp');\n      }\n      var searchStr = ES.ToString(searchString);\n      var position;\n      if (arguments.length > 1) {\n        position = arguments[1];\n      }\n      // Somehow this trick makes method 100% compat with the spec.\n      return _indexOf(this, searchStr, position) !== -1;\n    },\n\n    codePointAt: function codePointAt(pos) {\n      var thisStr = ES.ToString(ES.RequireObjectCoercible(this));\n      var position = ES.ToInteger(pos);\n      var length = thisStr.length;\n      if (position >= 0 && position < length) {\n        var first = thisStr.charCodeAt(position);\n        var isEnd = position + 1 === length;\n        if (first < 0xD800 || first > 0xDBFF || isEnd) { return first; }\n        var second = thisStr.charCodeAt(position + 1);\n        if (second < 0xDC00 || second > 0xDFFF) { return first; }\n        return ((first - 0xD800) * 1024) + (second - 0xDC00) + 0x10000;\n      }\n    }\n  };\n  if (String.prototype.includes && 'a'.includes('a', Infinity) !== false) {\n    overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n  }\n\n  if (String.prototype.startsWith && String.prototype.endsWith) {\n    var startsWithRejectsRegex = throwsError(function () {\n      /* throws if spec-compliant */\n      '/a/'.startsWith(/a/);\n    });\n    var startsWithHandlesInfinity = valueOrFalseIfThrows(function () {\n      return 'abc'.startsWith('a', Infinity) === false;\n    });\n    if (!startsWithRejectsRegex || !startsWithHandlesInfinity) {\n      // Firefox (< 37?) and IE 11 TP have a noncompliant startsWith implementation\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n  }\n  if (hasSymbols) {\n    var startsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.startsWith(re);\n    });\n    if (!startsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'startsWith', StringPrototypeShims.startsWith);\n    }\n    var endsWithSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.endsWith(re);\n    });\n    if (!endsWithSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'endsWith', StringPrototypeShims.endsWith);\n    }\n    var includesSupportsSymbolMatch = valueOrFalseIfThrows(function () {\n      var re = /a/;\n      re[Symbol.match] = false;\n      return '/a/'.includes(re);\n    });\n    if (!includesSupportsSymbolMatch) {\n      overrideNative(String.prototype, 'includes', StringPrototypeShims.includes);\n    }\n  }\n\n  defineProperties(String.prototype, StringPrototypeShims);\n\n  // whitespace from: http://es5.github.io/#x15.5.4.20\n  // implementation from https://github.com/es-shims/es5-shim/blob/v3.4.0/es5-shim.js#L1304-L1324\n  var ws = [\n    '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003',\n    '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028',\n    '\\u2029\\uFEFF'\n  ].join('');\n  var trimRegexp = new RegExp('(^[' + ws + ']+)|([' + ws + ']+$)', 'g');\n  var trimShim = function trim() {\n    return ES.ToString(ES.RequireObjectCoercible(this)).replace(trimRegexp, '');\n  };\n  var nonWS = ['\\u0085', '\\u200b', '\\ufffe'].join('');\n  var nonWSregex = new RegExp('[' + nonWS + ']', 'g');\n  var isBadHexRegex = /^[-+]0x[0-9a-f]+$/i;\n  var hasStringTrimBug = nonWS.trim().length !== nonWS.length;\n  defineProperty(String.prototype, 'trim', trimShim, hasStringTrimBug);\n\n  // Given an argument x, it will return an IteratorResult object,\n  // with value set to x and done to false.\n  // Given no arguments, it will return an iterator completion object.\n  var iteratorResult = function (x) {\n    return { value: x, done: arguments.length === 0 };\n  };\n\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-string.prototype-@@iterator\n  var StringIterator = function (s) {\n    ES.RequireObjectCoercible(s);\n    this._s = ES.ToString(s);\n    this._i = 0;\n  };\n  StringIterator.prototype.next = function () {\n    var s = this._s;\n    var i = this._i;\n    if (typeof s === 'undefined' || i >= s.length) {\n      this._s = void 0;\n      return iteratorResult();\n    }\n    var first = s.charCodeAt(i);\n    var second, len;\n    if (first < 0xD800 || first > 0xDBFF || (i + 1) === s.length) {\n      len = 1;\n    } else {\n      second = s.charCodeAt(i + 1);\n      len = (second < 0xDC00 || second > 0xDFFF) ? 1 : 2;\n    }\n    this._i = i + len;\n    return iteratorResult(s.substr(i, len));\n  };\n  addIterator(StringIterator.prototype);\n  addIterator(String.prototype, function () {\n    return new StringIterator(this);\n  });\n\n  var ArrayShims = {\n    from: function from(items) {\n      var C = this;\n      var mapFn;\n      if (arguments.length > 1) {\n        mapFn = arguments[1];\n      }\n      var mapping, T;\n      if (typeof mapFn === 'undefined') {\n        mapping = false;\n      } else {\n        if (!ES.IsCallable(mapFn)) {\n          throw new TypeError('Array.from: when provided, the second argument must be a function');\n        }\n        if (arguments.length > 2) {\n          T = arguments[2];\n        }\n        mapping = true;\n      }\n\n      // Note that that Arrays will use ArrayIterator:\n      // https://bugs.ecmascript.org/show_bug.cgi?id=2416\n      var usingIterator = typeof (isArguments(items) || ES.GetMethod(items, $iterator$)) !== 'undefined';\n\n      var length, result, i;\n      if (usingIterator) {\n        result = ES.IsConstructor(C) ? Object(new C()) : [];\n        var iterator = ES.GetIterator(items);\n        var next, nextValue;\n\n        i = 0;\n        while (true) {\n          next = ES.IteratorStep(iterator);\n          if (next === false) {\n            break;\n          }\n          nextValue = next.value;\n          try {\n            if (mapping) {\n              nextValue = typeof T === 'undefined' ? mapFn(nextValue, i) : _call(mapFn, T, nextValue, i);\n            }\n            result[i] = nextValue;\n          } catch (e) {\n            ES.IteratorClose(iterator, true);\n            throw e;\n          }\n          i += 1;\n        }\n        length = i;\n      } else {\n        var arrayLike = ES.ToObject(items);\n        length = ES.ToLength(arrayLike.length);\n        result = ES.IsConstructor(C) ? Object(new C(length)) : new Array(length);\n        var value;\n        for (i = 0; i < length; ++i) {\n          value = arrayLike[i];\n          if (mapping) {\n            value = typeof T === 'undefined' ? mapFn(value, i) : _call(mapFn, T, value, i);\n          }\n          createDataPropertyOrThrow(result, i, value);\n        }\n      }\n\n      result.length = length;\n      return result;\n    },\n\n    of: function of() {\n      var len = arguments.length;\n      var C = this;\n      var A = isArray(C) || !ES.IsCallable(C) ? new Array(len) : ES.Construct(C, [len]);\n      for (var k = 0; k < len; ++k) {\n        createDataPropertyOrThrow(A, k, arguments[k]);\n      }\n      A.length = len;\n      return A;\n    }\n  };\n  defineProperties(Array, ArrayShims);\n  addDefaultSpecies(Array);\n\n  // Our ArrayIterator is private; see\n  // https://github.com/paulmillr/es6-shim/issues/252\n  ArrayIterator = function (array, kind) {\n    this.i = 0;\n    this.array = array;\n    this.kind = kind;\n  };\n\n  defineProperties(ArrayIterator.prototype, {\n    next: function () {\n      var i = this.i;\n      var array = this.array;\n      if (!(this instanceof ArrayIterator)) {\n        throw new TypeError('Not an ArrayIterator');\n      }\n      if (typeof array !== 'undefined') {\n        var len = ES.ToLength(array.length);\n        for (; i < len; i++) {\n          var kind = this.kind;\n          var retval;\n          if (kind === 'key') {\n            retval = i;\n          } else if (kind === 'value') {\n            retval = array[i];\n          } else if (kind === 'entry') {\n            retval = [i, array[i]];\n          }\n          this.i = i + 1;\n          return iteratorResult(retval);\n        }\n      }\n      this.array = void 0;\n      return iteratorResult();\n    }\n  });\n  addIterator(ArrayIterator.prototype);\n\n/*\n  var orderKeys = function orderKeys(a, b) {\n    var aNumeric = String(ES.ToInteger(a)) === a;\n    var bNumeric = String(ES.ToInteger(b)) === b;\n    if (aNumeric && bNumeric) {\n      return b - a;\n    } else if (aNumeric && !bNumeric) {\n      return -1;\n    } else if (!aNumeric && bNumeric) {\n      return 1;\n    } else {\n      return a.localeCompare(b);\n    }\n  };\n\n  var getAllKeys = function getAllKeys(object) {\n    var ownKeys = [];\n    var keys = [];\n\n    for (var key in object) {\n      _push(_hasOwnProperty(object, key) ? ownKeys : keys, key);\n    }\n    _sort(ownKeys, orderKeys);\n    _sort(keys, orderKeys);\n\n    return _concat(ownKeys, keys);\n  };\n  */\n\n  // note: this is positioned here because it depends on ArrayIterator\n  var arrayOfSupportsSubclassing = Array.of === ArrayShims.of || (function () {\n    // Detects a bug in Webkit nightly r181886\n    var Foo = function Foo(len) { this.length = len; };\n    Foo.prototype = [];\n    var fooArr = Array.of.apply(Foo, [1, 2]);\n    return fooArr instanceof Foo && fooArr.length === 2;\n  }());\n  if (!arrayOfSupportsSubclassing) {\n    overrideNative(Array, 'of', ArrayShims.of);\n  }\n\n  var ArrayPrototypeShims = {\n    copyWithin: function copyWithin(target, start) {\n      var o = ES.ToObject(this);\n      var len = ES.ToLength(o.length);\n      var relativeTarget = ES.ToInteger(target);\n      var relativeStart = ES.ToInteger(start);\n      var to = relativeTarget < 0 ? _max(len + relativeTarget, 0) : _min(relativeTarget, len);\n      var from = relativeStart < 0 ? _max(len + relativeStart, 0) : _min(relativeStart, len);\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var relativeEnd = typeof end === 'undefined' ? len : ES.ToInteger(end);\n      var finalItem = relativeEnd < 0 ? _max(len + relativeEnd, 0) : _min(relativeEnd, len);\n      var count = _min(finalItem - from, len - to);\n      var direction = 1;\n      if (from < to && to < (from + count)) {\n        direction = -1;\n        from += count - 1;\n        to += count - 1;\n      }\n      while (count > 0) {\n        if (from in o) {\n          o[to] = o[from];\n        } else {\n          delete o[to];\n        }\n        from += direction;\n        to += direction;\n        count -= 1;\n      }\n      return o;\n    },\n\n    fill: function fill(value) {\n      var start;\n      if (arguments.length > 1) {\n        start = arguments[1];\n      }\n      var end;\n      if (arguments.length > 2) {\n        end = arguments[2];\n      }\n      var O = ES.ToObject(this);\n      var len = ES.ToLength(O.length);\n      start = ES.ToInteger(typeof start === 'undefined' ? 0 : start);\n      end = ES.ToInteger(typeof end === 'undefined' ? len : end);\n\n      var relativeStart = start < 0 ? _max(len + start, 0) : _min(start, len);\n      var relativeEnd = end < 0 ? len + end : end;\n\n      for (var i = relativeStart; i < len && i < relativeEnd; ++i) {\n        O[i] = value;\n      }\n      return O;\n    },\n\n    find: function find(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#find: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0, value; i < length; i++) {\n        value = list[i];\n        if (thisArg) {\n          if (_call(predicate, thisArg, value, i, list)) {\n            return value;\n          }\n        } else if (predicate(value, i, list)) {\n          return value;\n        }\n      }\n    },\n\n    findIndex: function findIndex(predicate) {\n      var list = ES.ToObject(this);\n      var length = ES.ToLength(list.length);\n      if (!ES.IsCallable(predicate)) {\n        throw new TypeError('Array#findIndex: predicate must be a function');\n      }\n      var thisArg = arguments.length > 1 ? arguments[1] : null;\n      for (var i = 0; i < length; i++) {\n        if (thisArg) {\n          if (_call(predicate, thisArg, list[i], i, list)) {\n            return i;\n          }\n        } else if (predicate(list[i], i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    },\n\n    keys: function keys() {\n      return new ArrayIterator(this, 'key');\n    },\n\n    values: function values() {\n      return new ArrayIterator(this, 'value');\n    },\n\n    entries: function entries() {\n      return new ArrayIterator(this, 'entry');\n    }\n  };\n  // Safari 7.1 defines Array#keys and Array#entries natively,\n  // but the resulting ArrayIterator objects don't have a \"next\" method.\n  if (Array.prototype.keys && !ES.IsCallable([1].keys().next)) {\n    delete Array.prototype.keys;\n  }\n  if (Array.prototype.entries && !ES.IsCallable([1].entries().next)) {\n    delete Array.prototype.entries;\n  }\n\n  // Chrome 38 defines Array#keys and Array#entries, and Array#@@iterator, but not Array#values\n  if (Array.prototype.keys && Array.prototype.entries && !Array.prototype.values && Array.prototype[$iterator$]) {\n    defineProperties(Array.prototype, {\n      values: Array.prototype[$iterator$]\n    });\n    if (Type.symbol(Symbol.unscopables)) {\n      Array.prototype[Symbol.unscopables].values = true;\n    }\n  }\n  // Chrome 40 defines Array#values with the incorrect name, although Array#{keys,entries} have the correct name\n  if (functionsHaveNames && Array.prototype.values && Array.prototype.values.name !== 'values') {\n    var originalArrayPrototypeValues = Array.prototype.values;\n    overrideNative(Array.prototype, 'values', function values() { return ES.Call(originalArrayPrototypeValues, this, arguments); });\n    defineProperty(Array.prototype, $iterator$, Array.prototype.values, true);\n  }\n  defineProperties(Array.prototype, ArrayPrototypeShims);\n\n  if (1 / [true].indexOf(true, -0) < 0) {\n    // indexOf when given a position arg of -0 should return +0.\n    // https://github.com/tc39/ecma262/pull/316\n    defineProperty(Array.prototype, 'indexOf', function indexOf(searchElement) {\n      var value = _arrayIndexOfApply(this, arguments);\n      if (value === 0 && (1 / value) < 0) {\n        return 0;\n      }\n      return value;\n    }, true);\n  }\n\n  addIterator(Array.prototype, function () { return this.values(); });\n  // Chrome defines keys/values/entries on Array, but doesn't give us\n  // any way to identify its iterator.  So add our own shimmed field.\n  if (Object.getPrototypeOf) {\n    addIterator(Object.getPrototypeOf([].values()));\n  }\n\n  // note: this is positioned here because it relies on Array#entries\n  var arrayFromSwallowsNegativeLengths = (function () {\n    // Detects a Firefox bug in v32\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1063993\n    return valueOrFalseIfThrows(function () {\n      return Array.from({ length: -1 }).length === 0;\n    });\n  }());\n  var arrayFromHandlesIterables = (function () {\n    // Detects a bug in Webkit nightly r181886\n    var arr = Array.from([0].entries());\n    return arr.length === 1 && isArray(arr[0]) && arr[0][0] === 0 && arr[0][1] === 0;\n  }());\n  if (!arrayFromSwallowsNegativeLengths || !arrayFromHandlesIterables) {\n    overrideNative(Array, 'from', ArrayShims.from);\n  }\n  var arrayFromHandlesUndefinedMapFunction = (function () {\n    // Microsoft Edge v0.11 throws if the mapFn argument is *provided* but undefined,\n    // but the spec doesn't care if it's provided or not - undefined doesn't throw.\n    return valueOrFalseIfThrows(function () {\n      return Array.from([0], void 0);\n    });\n  }());\n  if (!arrayFromHandlesUndefinedMapFunction) {\n    var origArrayFrom = Array.from;\n    overrideNative(Array, 'from', function from(items) {\n      if (arguments.length > 1 && typeof arguments[1] !== 'undefined') {\n        return ES.Call(origArrayFrom, this, arguments);\n      } else {\n        return _call(origArrayFrom, this, items);\n      }\n    });\n  }\n\n  var int32sAsOne = -(Math.pow(2, 32) - 1);\n  var toLengthsCorrectly = function (method, reversed) {\n    var obj = { length: int32sAsOne };\n    obj[reversed ? (obj.length >>> 0) - 1 : 0] = true;\n    return valueOrFalseIfThrows(function () {\n      _call(method, obj, function () {\n        // note: in nonconforming browsers, this will be called\n        // -1 >>> 0 times, which is 4294967295, so the throw matters.\n        throw new RangeError('should not reach here');\n      }, []);\n      return true;\n    });\n  };\n  if (!toLengthsCorrectly(Array.prototype.forEach)) {\n    var originalForEach = Array.prototype.forEach;\n    overrideNative(Array.prototype, 'forEach', function forEach(callbackFn) {\n      return ES.Call(originalForEach, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.map)) {\n    var originalMap = Array.prototype.map;\n    overrideNative(Array.prototype, 'map', function map(callbackFn) {\n      return ES.Call(originalMap, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.filter)) {\n    var originalFilter = Array.prototype.filter;\n    overrideNative(Array.prototype, 'filter', function filter(callbackFn) {\n      return ES.Call(originalFilter, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.some)) {\n    var originalSome = Array.prototype.some;\n    overrideNative(Array.prototype, 'some', function some(callbackFn) {\n      return ES.Call(originalSome, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.every)) {\n    var originalEvery = Array.prototype.every;\n    overrideNative(Array.prototype, 'every', function every(callbackFn) {\n      return ES.Call(originalEvery, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduce)) {\n    var originalReduce = Array.prototype.reduce;\n    overrideNative(Array.prototype, 'reduce', function reduce(callbackFn) {\n      return ES.Call(originalReduce, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n  if (!toLengthsCorrectly(Array.prototype.reduceRight, true)) {\n    var originalReduceRight = Array.prototype.reduceRight;\n    overrideNative(Array.prototype, 'reduceRight', function reduceRight(callbackFn) {\n      return ES.Call(originalReduceRight, this.length >= 0 ? this : [], arguments);\n    }, true);\n  }\n\n  var lacksOctalSupport = Number('0o10') !== 8;\n  var lacksBinarySupport = Number('0b10') !== 2;\n  var trimsNonWhitespace = _some(nonWS, function (c) {\n    return Number(c + 0 + c) === 0;\n  });\n  if (lacksOctalSupport || lacksBinarySupport || trimsNonWhitespace) {\n    var OrigNumber = Number;\n    var binaryRegex = /^0b[01]+$/i;\n    var octalRegex = /^0o[0-7]+$/i;\n    // Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is an own property of regexes. wtf.\n    var isBinary = binaryRegex.test.bind(binaryRegex);\n    var isOctal = octalRegex.test.bind(octalRegex);\n    var toPrimitive = function (O) { // need to replace this with `es-to-primitive/es6`\n      var result;\n      if (typeof O.valueOf === 'function') {\n        result = O.valueOf();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      if (typeof O.toString === 'function') {\n        result = O.toString();\n        if (Type.primitive(result)) {\n          return result;\n        }\n      }\n      throw new TypeError('No default value');\n    };\n    var hasNonWS = nonWSregex.test.bind(nonWSregex);\n    var isBadHex = isBadHexRegex.test.bind(isBadHexRegex);\n    var NumberShim = (function () {\n      // this is wrapped in an IIFE because of IE 6-8's wacky scoping issues with named function expressions.\n      var NumberShim = function Number(value) {\n        var primValue;\n        if (arguments.length > 0) {\n          primValue = Type.primitive(value) ? value : toPrimitive(value, 'number');\n        } else {\n          primValue = 0;\n        }\n        if (typeof primValue === 'string') {\n          primValue = ES.Call(trimShim, primValue);\n          if (isBinary(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 2);\n          } else if (isOctal(primValue)) {\n            primValue = parseInt(_strSlice(primValue, 2), 8);\n          } else if (hasNonWS(primValue) || isBadHex(primValue)) {\n            primValue = NaN;\n          }\n        }\n        var receiver = this;\n        var valueOfSucceeds = valueOrFalseIfThrows(function () {\n          OrigNumber.prototype.valueOf.call(receiver);\n          return true;\n        });\n        if (receiver instanceof NumberShim && !valueOfSucceeds) {\n          return new OrigNumber(primValue);\n        }\n        /* jshint newcap: false */\n        return OrigNumber(primValue);\n        /* jshint newcap: true */\n      };\n      return NumberShim;\n    }());\n    wrapConstructor(OrigNumber, NumberShim, {});\n    // this is necessary for ES3 browsers, where these properties are non-enumerable.\n    defineProperties(NumberShim, {\n      NaN: OrigNumber.NaN,\n      MAX_VALUE: OrigNumber.MAX_VALUE,\n      MIN_VALUE: OrigNumber.MIN_VALUE,\n      NEGATIVE_INFINITY: OrigNumber.NEGATIVE_INFINITY,\n      POSITIVE_INFINITY: OrigNumber.POSITIVE_INFINITY\n    });\n    /* globals Number: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    Number = NumberShim;\n    Value.redefine(globals, 'Number', NumberShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals Number: false */\n  }\n\n  var maxSafeInteger = Math.pow(2, 53) - 1;\n  defineProperties(Number, {\n    MAX_SAFE_INTEGER: maxSafeInteger,\n    MIN_SAFE_INTEGER: -maxSafeInteger,\n    EPSILON: 2.220446049250313e-16,\n\n    parseInt: globals.parseInt,\n    parseFloat: globals.parseFloat,\n\n    isFinite: numberIsFinite,\n\n    isInteger: function isInteger(value) {\n      return numberIsFinite(value) && ES.ToInteger(value) === value;\n    },\n\n    isSafeInteger: function isSafeInteger(value) {\n      return Number.isInteger(value) && _abs(value) <= Number.MAX_SAFE_INTEGER;\n    },\n\n    isNaN: numberIsNaN\n  });\n  // Firefox 37 has a conforming Number.parseInt, but it's not === to the global parseInt (fixed in v40)\n  defineProperty(Number, 'parseInt', globals.parseInt, Number.parseInt !== globals.parseInt);\n\n  // Work around bugs in Array#find and Array#findIndex -- early\n  // implementations skipped holes in sparse arrays. (Note that the\n  // implementations of find/findIndex indirectly use shimmed\n  // methods of Number, so this test has to happen down here.)\n  /*jshint elision: true */\n  /* eslint-disable no-sparse-arrays */\n  if ([, 1].find(function () { return true; }) === 1) {\n    overrideNative(Array.prototype, 'find', ArrayPrototypeShims.find);\n  }\n  if ([, 1].findIndex(function () { return true; }) !== 0) {\n    overrideNative(Array.prototype, 'findIndex', ArrayPrototypeShims.findIndex);\n  }\n  /* eslint-enable no-sparse-arrays */\n  /*jshint elision: false */\n\n  var isEnumerableOn = Function.bind.call(Function.bind, Object.prototype.propertyIsEnumerable);\n  var ensureEnumerable = function ensureEnumerable(obj, prop) {\n    if (supportsDescriptors && isEnumerableOn(obj, prop)) {\n      Object.defineProperty(obj, prop, { enumerable: false });\n    }\n  };\n  var sliceArgs = function sliceArgs() {\n    // per https://github.com/petkaantonov/bluebird/wiki/Optimization-killers#32-leaking-arguments\n    // and https://gist.github.com/WebReflection/4327762cb87a8c634a29\n    var initial = Number(this);\n    var len = arguments.length;\n    var desiredArgCount = len - initial;\n    var args = new Array(desiredArgCount < 0 ? 0 : desiredArgCount);\n    for (var i = initial; i < len; ++i) {\n      args[i - initial] = arguments[i];\n    }\n    return args;\n  };\n  var assignTo = function assignTo(source) {\n    return function assignToSource(target, key) {\n      target[key] = source[key];\n      return target;\n    };\n  };\n  var assignReducer = function (target, source) {\n    var sourceKeys = keys(Object(source));\n    var symbols;\n    if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n      symbols = _filter(Object.getOwnPropertySymbols(Object(source)), isEnumerableOn(source));\n    }\n    return _reduce(_concat(sourceKeys, symbols || []), assignTo(source), target);\n  };\n\n  var ObjectShims = {\n    // 19.1.3.1\n    assign: function (target, source) {\n      var to = ES.ToObject(target, 'Cannot convert undefined or null to object');\n      return _reduce(ES.Call(sliceArgs, 1, arguments), assignReducer, to);\n    },\n\n    // Added in WebKit in https://bugs.webkit.org/show_bug.cgi?id=143865\n    is: function is(a, b) {\n      return ES.SameValue(a, b);\n    }\n  };\n  var assignHasPendingExceptions = Object.assign && Object.preventExtensions && (function () {\n    // Firefox 37 still has \"pending exception\" logic in its Object.assign implementation,\n    // which is 72% slower than our shim, and Firefox 40's native implementation.\n    var thrower = Object.preventExtensions({ 1: 2 });\n    try {\n      Object.assign(thrower, 'xy');\n    } catch (e) {\n      return thrower[1] === 'y';\n    }\n  }());\n  if (assignHasPendingExceptions) {\n    overrideNative(Object, 'assign', ObjectShims.assign);\n  }\n  defineProperties(Object, ObjectShims);\n\n  if (supportsDescriptors) {\n    var ES5ObjectShims = {\n      // 19.1.3.9\n      // shim from https://gist.github.com/WebReflection/5593554\n      setPrototypeOf: (function (Object, magic) {\n        var set;\n\n        var checkArgs = function (O, proto) {\n          if (!ES.TypeIsObject(O)) {\n            throw new TypeError('cannot set prototype on a non-object');\n          }\n          if (!(proto === null || ES.TypeIsObject(proto))) {\n            throw new TypeError('can only set prototype to an object or null' + proto);\n          }\n        };\n\n        var setPrototypeOf = function (O, proto) {\n          checkArgs(O, proto);\n          _call(set, O, proto);\n          return O;\n        };\n\n        try {\n          // this works already in Firefox and Safari\n          set = Object.getOwnPropertyDescriptor(Object.prototype, magic).set;\n          _call(set, {}, null);\n        } catch (e) {\n          if (Object.prototype !== {}[magic]) {\n            // IE < 11 cannot be shimmed\n            return;\n          }\n          // probably Chrome or some old Mobile stock browser\n          set = function (proto) {\n            this[magic] = proto;\n          };\n          // please note that this will **not** work\n          // in those browsers that do not inherit\n          // __proto__ by mistake from Object.prototype\n          // in these cases we should probably throw an error\n          // or at least be informed about the issue\n          setPrototypeOf.polyfill = setPrototypeOf(\n            setPrototypeOf({}, null),\n            Object.prototype\n          ) instanceof Object;\n          // setPrototypeOf.polyfill === true means it works as meant\n          // setPrototypeOf.polyfill === false means it's not 100% reliable\n          // setPrototypeOf.polyfill === undefined\n          // or\n          // setPrototypeOf.polyfill ==  null means it's not a polyfill\n          // which means it works as expected\n          // we can even delete Object.prototype.__proto__;\n        }\n        return setPrototypeOf;\n      }(Object, '__proto__'))\n    };\n\n    defineProperties(Object, ES5ObjectShims);\n  }\n\n  // Workaround bug in Opera 12 where setPrototypeOf(x, null) doesn't work,\n  // but Object.create(null) does.\n  if (Object.setPrototypeOf && Object.getPrototypeOf &&\n      Object.getPrototypeOf(Object.setPrototypeOf({}, null)) !== null &&\n      Object.getPrototypeOf(Object.create(null)) === null) {\n    (function () {\n      var FAKENULL = Object.create(null);\n      var gpo = Object.getPrototypeOf;\n      var spo = Object.setPrototypeOf;\n      Object.getPrototypeOf = function (o) {\n        var result = gpo(o);\n        return result === FAKENULL ? null : result;\n      };\n      Object.setPrototypeOf = function (o, p) {\n        var proto = p === null ? FAKENULL : p;\n        return spo(o, proto);\n      };\n      Object.setPrototypeOf.polyfill = false;\n    }());\n  }\n\n  var objectKeysAcceptsPrimitives = !throwsError(function () { Object.keys('foo'); });\n  if (!objectKeysAcceptsPrimitives) {\n    var originalObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      return originalObjectKeys(ES.ToObject(value));\n    });\n    keys = Object.keys;\n  }\n  var objectKeysRejectsRegex = throwsError(function () { Object.keys(/a/g); });\n  if (objectKeysRejectsRegex) {\n    var regexRejectingObjectKeys = Object.keys;\n    overrideNative(Object, 'keys', function keys(value) {\n      if (Type.regex(value)) {\n        var regexKeys = [];\n        for (var k in value) {\n          if (_hasOwnProperty(value, k)) {\n            _push(regexKeys, k);\n          }\n        }\n        return regexKeys;\n      }\n      return regexRejectingObjectKeys(value);\n    });\n    keys = Object.keys;\n  }\n\n  if (Object.getOwnPropertyNames) {\n    var objectGOPNAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyNames('foo'); });\n    if (!objectGOPNAcceptsPrimitives) {\n      var cachedWindowNames = typeof window === 'object' ? Object.getOwnPropertyNames(window) : [];\n      var originalObjectGetOwnPropertyNames = Object.getOwnPropertyNames;\n      overrideNative(Object, 'getOwnPropertyNames', function getOwnPropertyNames(value) {\n        var val = ES.ToObject(value);\n        if (_toString(val) === '[object Window]') {\n          try {\n            return originalObjectGetOwnPropertyNames(val);\n          } catch (e) {\n            // IE bug where layout engine calls userland gOPN for cross-domain `window` objects\n            return _concat([], cachedWindowNames);\n          }\n        }\n        return originalObjectGetOwnPropertyNames(val);\n      });\n    }\n  }\n  if (Object.getOwnPropertyDescriptor) {\n    var objectGOPDAcceptsPrimitives = !throwsError(function () { Object.getOwnPropertyDescriptor('foo', 'bar'); });\n    if (!objectGOPDAcceptsPrimitives) {\n      var originalObjectGetOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n      overrideNative(Object, 'getOwnPropertyDescriptor', function getOwnPropertyDescriptor(value, property) {\n        return originalObjectGetOwnPropertyDescriptor(ES.ToObject(value), property);\n      });\n    }\n  }\n  if (Object.seal) {\n    var objectSealAcceptsPrimitives = !throwsError(function () { Object.seal('foo'); });\n    if (!objectSealAcceptsPrimitives) {\n      var originalObjectSeal = Object.seal;\n      overrideNative(Object, 'seal', function seal(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectSeal(value);\n      });\n    }\n  }\n  if (Object.isSealed) {\n    var objectIsSealedAcceptsPrimitives = !throwsError(function () { Object.isSealed('foo'); });\n    if (!objectIsSealedAcceptsPrimitives) {\n      var originalObjectIsSealed = Object.isSealed;\n      overrideNative(Object, 'isSealed', function isSealed(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsSealed(value);\n      });\n    }\n  }\n  if (Object.freeze) {\n    var objectFreezeAcceptsPrimitives = !throwsError(function () { Object.freeze('foo'); });\n    if (!objectFreezeAcceptsPrimitives) {\n      var originalObjectFreeze = Object.freeze;\n      overrideNative(Object, 'freeze', function freeze(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectFreeze(value);\n      });\n    }\n  }\n  if (Object.isFrozen) {\n    var objectIsFrozenAcceptsPrimitives = !throwsError(function () { Object.isFrozen('foo'); });\n    if (!objectIsFrozenAcceptsPrimitives) {\n      var originalObjectIsFrozen = Object.isFrozen;\n      overrideNative(Object, 'isFrozen', function isFrozen(value) {\n        if (!ES.TypeIsObject(value)) { return true; }\n        return originalObjectIsFrozen(value);\n      });\n    }\n  }\n  if (Object.preventExtensions) {\n    var objectPreventExtensionsAcceptsPrimitives = !throwsError(function () { Object.preventExtensions('foo'); });\n    if (!objectPreventExtensionsAcceptsPrimitives) {\n      var originalObjectPreventExtensions = Object.preventExtensions;\n      overrideNative(Object, 'preventExtensions', function preventExtensions(value) {\n        if (!ES.TypeIsObject(value)) { return value; }\n        return originalObjectPreventExtensions(value);\n      });\n    }\n  }\n  if (Object.isExtensible) {\n    var objectIsExtensibleAcceptsPrimitives = !throwsError(function () { Object.isExtensible('foo'); });\n    if (!objectIsExtensibleAcceptsPrimitives) {\n      var originalObjectIsExtensible = Object.isExtensible;\n      overrideNative(Object, 'isExtensible', function isExtensible(value) {\n        if (!ES.TypeIsObject(value)) { return false; }\n        return originalObjectIsExtensible(value);\n      });\n    }\n  }\n  if (Object.getPrototypeOf) {\n    var objectGetProtoAcceptsPrimitives = !throwsError(function () { Object.getPrototypeOf('foo'); });\n    if (!objectGetProtoAcceptsPrimitives) {\n      var originalGetProto = Object.getPrototypeOf;\n      overrideNative(Object, 'getPrototypeOf', function getPrototypeOf(value) {\n        return originalGetProto(ES.ToObject(value));\n      });\n    }\n  }\n\n  var hasFlags = supportsDescriptors && (function () {\n    var desc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags');\n    return desc && ES.IsCallable(desc.get);\n  }());\n  if (supportsDescriptors && !hasFlags) {\n    var regExpFlagsGetter = function flags() {\n      if (!ES.TypeIsObject(this)) {\n        throw new TypeError('Method called on incompatible type: must be an object.');\n      }\n      var result = '';\n      if (this.global) {\n        result += 'g';\n      }\n      if (this.ignoreCase) {\n        result += 'i';\n      }\n      if (this.multiline) {\n        result += 'm';\n      }\n      if (this.unicode) {\n        result += 'u';\n      }\n      if (this.sticky) {\n        result += 'y';\n      }\n      return result;\n    };\n\n    Value.getter(RegExp.prototype, 'flags', regExpFlagsGetter);\n  }\n\n  var regExpSupportsFlagsWithRegex = supportsDescriptors && valueOrFalseIfThrows(function () {\n    return String(new RegExp(/a/g, 'i')) === '/a/i';\n  });\n  var regExpNeedsToSupportSymbolMatch = hasSymbols && supportsDescriptors && (function () {\n    // Edge 0.12 supports flags fully, but does not support Symbol.match\n    var regex = /./;\n    regex[Symbol.match] = false;\n    return RegExp(regex) === regex;\n  }());\n\n  var regexToStringIsGeneric = valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'abc' }) === '/abc/';\n  });\n  var regexToStringSupportsGenericFlags = regexToStringIsGeneric && valueOrFalseIfThrows(function () {\n    return RegExp.prototype.toString.call({ source: 'a', flags: 'b' }) === '/a/b';\n  });\n  if (!regexToStringIsGeneric || !regexToStringSupportsGenericFlags) {\n    var origRegExpToString = RegExp.prototype.toString;\n    defineProperty(RegExp.prototype, 'toString', function toString() {\n      var R = ES.RequireObjectCoercible(this);\n      if (Type.regex(R)) {\n        return _call(origRegExpToString, R);\n      }\n      var pattern = $String(R.source);\n      var flags = $String(R.flags);\n      return '/' + pattern + '/' + flags;\n    }, true);\n    Value.preserveToString(RegExp.prototype.toString, origRegExpToString);\n  }\n\n  if (supportsDescriptors && (!regExpSupportsFlagsWithRegex || regExpNeedsToSupportSymbolMatch)) {\n    var flagsGetter = Object.getOwnPropertyDescriptor(RegExp.prototype, 'flags').get;\n    var sourceDesc = Object.getOwnPropertyDescriptor(RegExp.prototype, 'source') || {};\n    var legacySourceGetter = function () {\n      // prior to it being a getter, it's own + nonconfigurable\n      return this.source;\n    };\n    var sourceGetter = ES.IsCallable(sourceDesc.get) ? sourceDesc.get : legacySourceGetter;\n\n    var OrigRegExp = RegExp;\n    var RegExpShim = (function () {\n      return function RegExp(pattern, flags) {\n        var patternIsRegExp = ES.IsRegExp(pattern);\n        var calledWithNew = this instanceof RegExp;\n        if (!calledWithNew && patternIsRegExp && typeof flags === 'undefined' && pattern.constructor === RegExp) {\n          return pattern;\n        }\n\n        var P = pattern;\n        var F = flags;\n        if (Type.regex(pattern)) {\n          P = ES.Call(sourceGetter, pattern);\n          F = typeof flags === 'undefined' ? ES.Call(flagsGetter, pattern) : flags;\n          return new RegExp(P, F);\n        } else if (patternIsRegExp) {\n          P = pattern.source;\n          F = typeof flags === 'undefined' ? pattern.flags : flags;\n        }\n        return new OrigRegExp(pattern, flags);\n      };\n    }());\n    wrapConstructor(OrigRegExp, RegExpShim, {\n      $input: true // Chrome < v39 & Opera < 26 have a nonstandard \"$input\" property\n    });\n    /* globals RegExp: true */\n    /* eslint-disable no-undef, no-global-assign */\n    /* jshint -W020 */\n    RegExp = RegExpShim;\n    Value.redefine(globals, 'RegExp', RegExpShim);\n    /* jshint +W020 */\n    /* eslint-enable no-undef, no-global-assign */\n    /* globals RegExp: false */\n  }\n\n  if (supportsDescriptors) {\n    var regexGlobals = {\n      input: '$_',\n      lastMatch: '$&',\n      lastParen: '$+',\n      leftContext: '$`',\n      rightContext: '$\\''\n    };\n    _forEach(keys(regexGlobals), function (prop) {\n      if (prop in RegExp && !(regexGlobals[prop] in RegExp)) {\n        Value.getter(RegExp, regexGlobals[prop], function get() {\n          return RegExp[prop];\n        });\n      }\n    });\n  }\n  addDefaultSpecies(RegExp);\n\n  var inverseEpsilon = 1 / Number.EPSILON;\n  var roundTiesToEven = function roundTiesToEven(n) {\n    // Even though this reduces down to `return n`, it takes advantage of built-in rounding.\n    return (n + inverseEpsilon) - inverseEpsilon;\n  };\n  var BINARY_32_EPSILON = Math.pow(2, -23);\n  var BINARY_32_MAX_VALUE = Math.pow(2, 127) * (2 - BINARY_32_EPSILON);\n  var BINARY_32_MIN_VALUE = Math.pow(2, -126);\n  var E = Math.E;\n  var LOG2E = Math.LOG2E;\n  var LOG10E = Math.LOG10E;\n  var numberCLZ = Number.prototype.clz;\n  delete Number.prototype.clz; // Safari 8 has Number#clz\n\n  var MathShims = {\n    acosh: function acosh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || value < 1) { return NaN; }\n      if (x === 1) { return 0; }\n      if (x === Infinity) { return x; }\n      return _log((x / E) + (_sqrt(x + 1) * _sqrt(x - 1) / E)) + 1;\n    },\n\n    asinh: function asinh(value) {\n      var x = Number(value);\n      if (x === 0 || !globalIsFinite(x)) {\n        return x;\n      }\n      return x < 0 ? -asinh(-x) : _log(x + _sqrt((x * x) + 1));\n    },\n\n    atanh: function atanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x < -1 || x > 1) {\n        return NaN;\n      }\n      if (x === -1) { return -Infinity; }\n      if (x === 1) { return Infinity; }\n      if (x === 0) { return x; }\n      return 0.5 * _log((1 + x) / (1 - x));\n    },\n\n    cbrt: function cbrt(value) {\n      var x = Number(value);\n      if (x === 0) { return x; }\n      var negate = x < 0;\n      var result;\n      if (negate) { x = -x; }\n      if (x === Infinity) {\n        result = Infinity;\n      } else {\n        result = _exp(_log(x) / 3);\n        // from http://en.wikipedia.org/wiki/Cube_root#Numerical_methods\n        result = ((x / (result * result)) + (2 * result)) / 3;\n      }\n      return negate ? -result : result;\n    },\n\n    clz32: function clz32(value) {\n      // See https://bugs.ecmascript.org/show_bug.cgi?id=2465\n      var x = Number(value);\n      var number = ES.ToUint32(x);\n      if (number === 0) {\n        return 32;\n      }\n      return numberCLZ ? ES.Call(numberCLZ, number) : 31 - _floor(_log(number + 0.5) * LOG2E);\n    },\n\n    cosh: function cosh(value) {\n      var x = Number(value);\n      if (x === 0) { return 1; } // +0 or -0\n      if (numberIsNaN(x)) { return NaN; }\n      if (!globalIsFinite(x)) { return Infinity; }\n      if (x < 0) { x = -x; }\n      if (x > 21) { return _exp(x) / 2; }\n      return (_exp(x) + _exp(-x)) / 2;\n    },\n\n    expm1: function expm1(value) {\n      var x = Number(value);\n      if (x === -Infinity) { return -1; }\n      if (!globalIsFinite(x) || x === 0) { return x; }\n      if (_abs(x) > 0.5) {\n        return _exp(x) - 1;\n      }\n      // A more precise approximation using Taylor series expansion\n      // from https://github.com/paulmillr/es6-shim/issues/314#issuecomment-70293986\n      var t = x;\n      var sum = 0;\n      var n = 1;\n      while (sum + t !== sum) {\n        sum += t;\n        n += 1;\n        t *= x / n;\n      }\n      return sum;\n    },\n\n    hypot: function hypot(x, y) {\n      var result = 0;\n      var largest = 0;\n      for (var i = 0; i < arguments.length; ++i) {\n        var value = _abs(Number(arguments[i]));\n        if (largest < value) {\n          result *= (largest / value) * (largest / value);\n          result += 1;\n          largest = value;\n        } else {\n          result += value > 0 ? (value / largest) * (value / largest) : value;\n        }\n      }\n      return largest === Infinity ? Infinity : largest * _sqrt(result);\n    },\n\n    log2: function log2(value) {\n      return _log(value) * LOG2E;\n    },\n\n    log10: function log10(value) {\n      return _log(value) * LOG10E;\n    },\n\n    log1p: function log1p(value) {\n      var x = Number(value);\n      if (x < -1 || numberIsNaN(x)) { return NaN; }\n      if (x === 0 || x === Infinity) { return x; }\n      if (x === -1) { return -Infinity; }\n\n      return (1 + x) - 1 === 0 ? x : x * (_log(1 + x) / ((1 + x) - 1));\n    },\n\n    sign: _sign,\n\n    sinh: function sinh(value) {\n      var x = Number(value);\n      if (!globalIsFinite(x) || x === 0) { return x; }\n\n      if (_abs(x) < 1) {\n        return (Math.expm1(x) - Math.expm1(-x)) / 2;\n      }\n      return (_exp(x - 1) - _exp(-x - 1)) * E / 2;\n    },\n\n    tanh: function tanh(value) {\n      var x = Number(value);\n      if (numberIsNaN(x) || x === 0) { return x; }\n      // can exit early at +-20 as JS loses precision for true value at this integer\n      if (x >= 20) { return 1; }\n      if (x <= -20) { return -1; }\n\n      return (Math.expm1(x) - Math.expm1(-x)) / (_exp(x) + _exp(-x));\n    },\n\n    trunc: function trunc(value) {\n      var x = Number(value);\n      return x < 0 ? -_floor(-x) : _floor(x);\n    },\n\n    imul: function imul(x, y) {\n      // taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/imul\n      var a = ES.ToUint32(x);\n      var b = ES.ToUint32(y);\n      var ah = (a >>> 16) & 0xffff;\n      var al = a & 0xffff;\n      var bh = (b >>> 16) & 0xffff;\n      var bl = b & 0xffff;\n      // the shift by 0 fixes the sign on the high part\n      // the final |0 converts the unsigned value into a signed value\n      return (al * bl) + ((((ah * bl) + (al * bh)) << 16) >>> 0) | 0;\n    },\n\n    fround: function fround(x) {\n      var v = Number(x);\n      if (v === 0 || v === Infinity || v === -Infinity || numberIsNaN(v)) {\n        return v;\n      }\n      var sign = _sign(v);\n      var abs = _abs(v);\n      if (abs < BINARY_32_MIN_VALUE) {\n        return sign * roundTiesToEven(\n          abs / BINARY_32_MIN_VALUE / BINARY_32_EPSILON\n        ) * BINARY_32_MIN_VALUE * BINARY_32_EPSILON;\n      }\n      // Veltkamp's splitting (?)\n      var a = (1 + (BINARY_32_EPSILON / Number.EPSILON)) * abs;\n      var result = a - (a - abs);\n      if (result > BINARY_32_MAX_VALUE || numberIsNaN(result)) {\n        return sign * Infinity;\n      }\n      return sign * result;\n    }\n  };\n  defineProperties(Math, MathShims);\n  // IE 11 TP has an imprecise log1p: reports Math.log1p(-1e-17) as 0\n  defineProperty(Math, 'log1p', MathShims.log1p, Math.log1p(-1e-17) !== -1e-17);\n  // IE 11 TP has an imprecise asinh: reports Math.asinh(-1e7) as not exactly equal to -Math.asinh(1e7)\n  defineProperty(Math, 'asinh', MathShims.asinh, Math.asinh(-1e7) !== -Math.asinh(1e7));\n  // Chrome 40 has an imprecise Math.tanh with very small numbers\n  defineProperty(Math, 'tanh', MathShims.tanh, Math.tanh(-2e-17) !== -2e-17);\n  // Chrome 40 loses Math.acosh precision with high numbers\n  defineProperty(Math, 'acosh', MathShims.acosh, Math.acosh(Number.MAX_VALUE) === Infinity);\n  // Firefox 38 on Windows\n  defineProperty(Math, 'cbrt', MathShims.cbrt, Math.abs(1 - (Math.cbrt(1e-300) / 1e-100)) / Number.EPSILON > 8);\n  // node 0.11 has an imprecise Math.sinh with very small numbers\n  defineProperty(Math, 'sinh', MathShims.sinh, Math.sinh(-2e-17) !== -2e-17);\n  // FF 35 on Linux reports 22025.465794806725 for Math.expm1(10)\n  var expm1OfTen = Math.expm1(10);\n  defineProperty(Math, 'expm1', MathShims.expm1, expm1OfTen > 22025.465794806719 || expm1OfTen < 22025.4657948067165168);\n\n  var origMathRound = Math.round;\n  // breaks in e.g. Safari 8, Internet Explorer 11, Opera 12\n  var roundHandlesBoundaryConditions = Math.round(0.5 - (Number.EPSILON / 4)) === 0 &&\n    Math.round(-0.5 + (Number.EPSILON / 3.99)) === 1;\n\n  // When engines use Math.floor(x + 0.5) internally, Math.round can be buggy for large integers.\n  // This behavior should be governed by \"round to nearest, ties to even mode\"\n  // see http://www.ecma-international.org/ecma-262/6.0/#sec-terms-and-definitions-number-type\n  // These are the boundary cases where it breaks.\n  var smallestPositiveNumberWhereRoundBreaks = inverseEpsilon + 1;\n  var largestPositiveNumberWhereRoundBreaks = (2 * inverseEpsilon) - 1;\n  var roundDoesNotIncreaseIntegers = [\n    smallestPositiveNumberWhereRoundBreaks,\n    largestPositiveNumberWhereRoundBreaks\n  ].every(function (num) {\n    return Math.round(num) === num;\n  });\n  defineProperty(Math, 'round', function round(x) {\n    var floor = _floor(x);\n    var ceil = floor === -1 ? -0 : floor + 1;\n    return x - floor < 0.5 ? floor : ceil;\n  }, !roundHandlesBoundaryConditions || !roundDoesNotIncreaseIntegers);\n  Value.preserveToString(Math.round, origMathRound);\n\n  var origImul = Math.imul;\n  if (Math.imul(0xffffffff, 5) !== -5) {\n    // Safari 6.1, at least, reports \"0\" for this value\n    Math.imul = MathShims.imul;\n    Value.preserveToString(Math.imul, origImul);\n  }\n  if (Math.imul.length !== 2) {\n    // Safari 8.0.4 has a length of 1\n    // fixed in https://bugs.webkit.org/show_bug.cgi?id=143658\n    overrideNative(Math, 'imul', function imul(x, y) {\n      return ES.Call(origImul, Math, arguments);\n    });\n  }\n\n  // Promises\n  // Simplest possible implementation; use a 3rd-party library if you\n  // want the best possible speed and/or long stack traces.\n  var PromiseShim = (function () {\n    var setTimeout = globals.setTimeout;\n    // some environments don't have setTimeout - no way to shim here.\n    if (typeof setTimeout !== 'function' && typeof setTimeout !== 'object') { return; }\n\n    ES.IsPromise = function (promise) {\n      if (!ES.TypeIsObject(promise)) {\n        return false;\n      }\n      if (typeof promise._promise === 'undefined') {\n        return false; // uninitialized, or missing our hidden field.\n      }\n      return true;\n    };\n\n    // \"PromiseCapability\" in the spec is what most promise implementations\n    // call a \"deferred\".\n    var PromiseCapability = function (C) {\n      if (!ES.IsConstructor(C)) {\n        throw new TypeError('Bad promise constructor');\n      }\n      var capability = this;\n      var resolver = function (resolve, reject) {\n        if (capability.resolve !== void 0 || capability.reject !== void 0) {\n          throw new TypeError('Bad Promise implementation!');\n        }\n        capability.resolve = resolve;\n        capability.reject = reject;\n      };\n      // Initialize fields to inform optimizers about the object shape.\n      capability.resolve = void 0;\n      capability.reject = void 0;\n      capability.promise = new C(resolver);\n      if (!(ES.IsCallable(capability.resolve) && ES.IsCallable(capability.reject))) {\n        throw new TypeError('Bad promise constructor');\n      }\n    };\n\n    // find an appropriate setImmediate-alike\n    var makeZeroTimeout;\n    /*global window */\n    if (typeof window !== 'undefined' && ES.IsCallable(window.postMessage)) {\n      makeZeroTimeout = function () {\n        // from http://dbaron.org/log/20100309-faster-timeouts\n        var timeouts = [];\n        var messageName = 'zero-timeout-message';\n        var setZeroTimeout = function (fn) {\n          _push(timeouts, fn);\n          window.postMessage(messageName, '*');\n        };\n        var handleMessage = function (event) {\n          if (event.source === window && event.data === messageName) {\n            event.stopPropagation();\n            if (timeouts.length === 0) { return; }\n            var fn = _shift(timeouts);\n            fn();\n          }\n        };\n        window.addEventListener('message', handleMessage, true);\n        return setZeroTimeout;\n      };\n    }\n    var makePromiseAsap = function () {\n      // An efficient task-scheduler based on a pre-existing Promise\n      // implementation, which we can use even if we override the\n      // global Promise below (in order to workaround bugs)\n      // https://github.com/Raynos/observ-hash/issues/2#issuecomment-35857671\n      var P = globals.Promise;\n      var pr = P && P.resolve && P.resolve();\n      return pr && function (task) {\n        return pr.then(task);\n      };\n    };\n    /*global process */\n    /* jscs:disable disallowMultiLineTernary */\n    var enqueue = ES.IsCallable(globals.setImmediate) ?\n      globals.setImmediate :\n      typeof process === 'object' && process.nextTick ? process.nextTick :\n      makePromiseAsap() ||\n      (ES.IsCallable(makeZeroTimeout) ? makeZeroTimeout() :\n      function (task) { setTimeout(task, 0); }); // fallback\n    /* jscs:enable disallowMultiLineTernary */\n\n    // Constants for Promise implementation\n    var PROMISE_IDENTITY = function (x) { return x; };\n    var PROMISE_THROWER = function (e) { throw e; };\n    var PROMISE_PENDING = 0;\n    var PROMISE_FULFILLED = 1;\n    var PROMISE_REJECTED = 2;\n    // We store fulfill/reject handlers and capabilities in a single array.\n    var PROMISE_FULFILL_OFFSET = 0;\n    var PROMISE_REJECT_OFFSET = 1;\n    var PROMISE_CAPABILITY_OFFSET = 2;\n    // This is used in an optimization for chaining promises via then.\n    var PROMISE_FAKE_CAPABILITY = {};\n\n    var enqueuePromiseReactionJob = function (handler, capability, argument) {\n      enqueue(function () {\n        promiseReactionJob(handler, capability, argument);\n      });\n    };\n\n    var promiseReactionJob = function (handler, promiseCapability, argument) {\n      var handlerResult, f;\n      if (promiseCapability === PROMISE_FAKE_CAPABILITY) {\n        // Fast case, when we don't actually need to chain through to a\n        // (real) promiseCapability.\n        return handler(argument);\n      }\n      try {\n        handlerResult = handler(argument);\n        f = promiseCapability.resolve;\n      } catch (e) {\n        handlerResult = e;\n        f = promiseCapability.reject;\n      }\n      f(handlerResult);\n    };\n\n    var fulfillPromise = function (promise, value) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.fulfillReactionHandler0,\n          _promise.reactionCapability0,\n          value\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_FULFILL_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              value\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = value;\n      _promise.state = PROMISE_FULFILLED;\n      _promise.reactionLength = 0;\n    };\n\n    var rejectPromise = function (promise, reason) {\n      var _promise = promise._promise;\n      var length = _promise.reactionLength;\n      if (length > 0) {\n        enqueuePromiseReactionJob(\n          _promise.rejectReactionHandler0,\n          _promise.reactionCapability0,\n          reason\n        );\n        _promise.fulfillReactionHandler0 = void 0;\n        _promise.rejectReactions0 = void 0;\n        _promise.reactionCapability0 = void 0;\n        if (length > 1) {\n          for (var i = 1, idx = 0; i < length; i++, idx += 3) {\n            enqueuePromiseReactionJob(\n              _promise[idx + PROMISE_REJECT_OFFSET],\n              _promise[idx + PROMISE_CAPABILITY_OFFSET],\n              reason\n            );\n            promise[idx + PROMISE_FULFILL_OFFSET] = void 0;\n            promise[idx + PROMISE_REJECT_OFFSET] = void 0;\n            promise[idx + PROMISE_CAPABILITY_OFFSET] = void 0;\n          }\n        }\n      }\n      _promise.result = reason;\n      _promise.state = PROMISE_REJECTED;\n      _promise.reactionLength = 0;\n    };\n\n    var createResolvingFunctions = function (promise) {\n      var alreadyResolved = false;\n      var resolve = function (resolution) {\n        var then;\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        if (resolution === promise) {\n          return rejectPromise(promise, new TypeError('Self resolution'));\n        }\n        if (!ES.TypeIsObject(resolution)) {\n          return fulfillPromise(promise, resolution);\n        }\n        try {\n          then = resolution.then;\n        } catch (e) {\n          return rejectPromise(promise, e);\n        }\n        if (!ES.IsCallable(then)) {\n          return fulfillPromise(promise, resolution);\n        }\n        enqueue(function () {\n          promiseResolveThenableJob(promise, resolution, then);\n        });\n      };\n      var reject = function (reason) {\n        if (alreadyResolved) { return; }\n        alreadyResolved = true;\n        return rejectPromise(promise, reason);\n      };\n      return { resolve: resolve, reject: reject };\n    };\n\n    var optimizedThen = function (then, thenable, resolve, reject) {\n      // Optimization: since we discard the result, we can pass our\n      // own then implementation a special hint to let it know it\n      // doesn't have to create it.  (The PROMISE_FAKE_CAPABILITY\n      // object is local to this implementation and unforgeable outside.)\n      if (then === Promise$prototype$then) {\n        _call(then, thenable, resolve, reject, PROMISE_FAKE_CAPABILITY);\n      } else {\n        _call(then, thenable, resolve, reject);\n      }\n    };\n    var promiseResolveThenableJob = function (promise, thenable, then) {\n      var resolvingFunctions = createResolvingFunctions(promise);\n      var resolve = resolvingFunctions.resolve;\n      var reject = resolvingFunctions.reject;\n      try {\n        optimizedThen(then, thenable, resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    };\n\n    var Promise$prototype, Promise$prototype$then;\n    var Promise = (function () {\n      var PromiseShim = function Promise(resolver) {\n        if (!(this instanceof PromiseShim)) {\n          throw new TypeError('Constructor Promise requires \"new\"');\n        }\n        if (this && this._promise) {\n          throw new TypeError('Bad construction');\n        }\n        // see https://bugs.ecmascript.org/show_bug.cgi?id=2482\n        if (!ES.IsCallable(resolver)) {\n          throw new TypeError('not a valid resolver');\n        }\n        var promise = emulateES6construct(this, PromiseShim, Promise$prototype, {\n          _promise: {\n            result: void 0,\n            state: PROMISE_PENDING,\n            // The first member of the \"reactions\" array is inlined here,\n            // since most promises only have one reaction.\n            // We've also exploded the 'reaction' object to inline the\n            // \"handler\" and \"capability\" fields, since both fulfill and\n            // reject reactions share the same capability.\n            reactionLength: 0,\n            fulfillReactionHandler0: void 0,\n            rejectReactionHandler0: void 0,\n            reactionCapability0: void 0\n          }\n        });\n        var resolvingFunctions = createResolvingFunctions(promise);\n        var reject = resolvingFunctions.reject;\n        try {\n          resolver(resolvingFunctions.resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n        return promise;\n      };\n      return PromiseShim;\n    }());\n    Promise$prototype = Promise.prototype;\n\n    var _promiseAllResolver = function (index, values, capability, remaining) {\n      var alreadyCalled = false;\n      return function (x) {\n        if (alreadyCalled) { return; }\n        alreadyCalled = true;\n        values[index] = x;\n        if ((--remaining.count) === 0) {\n          var resolve = capability.resolve;\n          resolve(values); // call w/ this===undefined\n        }\n      };\n    };\n\n    var performPromiseAll = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var values = [];\n      var remaining = { count: 1 };\n      var next, nextValue;\n      var index = 0;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        values[index] = void 0;\n        var nextPromise = C.resolve(nextValue);\n        var resolveElement = _promiseAllResolver(\n          index, values, resultCapability, remaining\n        );\n        remaining.count += 1;\n        optimizedThen(nextPromise.then, nextPromise, resolveElement, resultCapability.reject);\n        index += 1;\n      }\n      if ((--remaining.count) === 0) {\n        var resolve = resultCapability.resolve;\n        resolve(values); // call w/ this===undefined\n      }\n      return resultCapability.promise;\n    };\n\n    var performPromiseRace = function (iteratorRecord, C, resultCapability) {\n      var it = iteratorRecord.iterator;\n      var next, nextValue, nextPromise;\n      while (true) {\n        try {\n          next = ES.IteratorStep(it);\n          if (next === false) {\n            // NOTE: If iterable has no items, resulting promise will never\n            // resolve; see:\n            // https://github.com/domenic/promises-unwrapping/issues/75\n            // https://bugs.ecmascript.org/show_bug.cgi?id=2515\n            iteratorRecord.done = true;\n            break;\n          }\n          nextValue = next.value;\n        } catch (e) {\n          iteratorRecord.done = true;\n          throw e;\n        }\n        nextPromise = C.resolve(nextValue);\n        optimizedThen(nextPromise.then, nextPromise, resultCapability.resolve, resultCapability.reject);\n      }\n      return resultCapability.promise;\n    };\n\n    defineProperties(Promise, {\n      all: function all(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseAll(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      race: function race(iterable) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Promise is not object');\n        }\n        var capability = new PromiseCapability(C);\n        var iterator, iteratorRecord;\n        try {\n          iterator = ES.GetIterator(iterable);\n          iteratorRecord = { iterator: iterator, done: false };\n          return performPromiseRace(iteratorRecord, C, capability);\n        } catch (e) {\n          var exception = e;\n          if (iteratorRecord && !iteratorRecord.done) {\n            try {\n              ES.IteratorClose(iterator, true);\n            } catch (ee) {\n              exception = ee;\n            }\n          }\n          var reject = capability.reject;\n          reject(exception);\n          return capability.promise;\n        }\n      },\n\n      reject: function reject(reason) {\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        var capability = new PromiseCapability(C);\n        var rejectFunc = capability.reject;\n        rejectFunc(reason); // call with this===undefined\n        return capability.promise;\n      },\n\n      resolve: function resolve(v) {\n        // See https://esdiscuss.org/topic/fixing-promise-resolve for spec\n        var C = this;\n        if (!ES.TypeIsObject(C)) {\n          throw new TypeError('Bad promise constructor');\n        }\n        if (ES.IsPromise(v)) {\n          var constructor = v.constructor;\n          if (constructor === C) {\n            return v;\n          }\n        }\n        var capability = new PromiseCapability(C);\n        var resolveFunc = capability.resolve;\n        resolveFunc(v); // call with this===undefined\n        return capability.promise;\n      }\n    });\n\n    defineProperties(Promise$prototype, {\n      'catch': function (onRejected) {\n        return this.then(null, onRejected);\n      },\n\n      then: function then(onFulfilled, onRejected) {\n        var promise = this;\n        if (!ES.IsPromise(promise)) { throw new TypeError('not a promise'); }\n        var C = ES.SpeciesConstructor(promise, Promise);\n        var resultCapability;\n        var returnValueIsIgnored = arguments.length > 2 && arguments[2] === PROMISE_FAKE_CAPABILITY;\n        if (returnValueIsIgnored && C === Promise) {\n          resultCapability = PROMISE_FAKE_CAPABILITY;\n        } else {\n          resultCapability = new PromiseCapability(C);\n        }\n        // PerformPromiseThen(promise, onFulfilled, onRejected, resultCapability)\n        // Note that we've split the 'reaction' object into its two\n        // components, \"capabilities\" and \"handler\"\n        // \"capabilities\" is always equal to `resultCapability`\n        var fulfillReactionHandler = ES.IsCallable(onFulfilled) ? onFulfilled : PROMISE_IDENTITY;\n        var rejectReactionHandler = ES.IsCallable(onRejected) ? onRejected : PROMISE_THROWER;\n        var _promise = promise._promise;\n        var value;\n        if (_promise.state === PROMISE_PENDING) {\n          if (_promise.reactionLength === 0) {\n            _promise.fulfillReactionHandler0 = fulfillReactionHandler;\n            _promise.rejectReactionHandler0 = rejectReactionHandler;\n            _promise.reactionCapability0 = resultCapability;\n          } else {\n            var idx = 3 * (_promise.reactionLength - 1);\n            _promise[idx + PROMISE_FULFILL_OFFSET] = fulfillReactionHandler;\n            _promise[idx + PROMISE_REJECT_OFFSET] = rejectReactionHandler;\n            _promise[idx + PROMISE_CAPABILITY_OFFSET] = resultCapability;\n          }\n          _promise.reactionLength += 1;\n        } else if (_promise.state === PROMISE_FULFILLED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            fulfillReactionHandler, resultCapability, value\n          );\n        } else if (_promise.state === PROMISE_REJECTED) {\n          value = _promise.result;\n          enqueuePromiseReactionJob(\n            rejectReactionHandler, resultCapability, value\n          );\n        } else {\n          throw new TypeError('unexpected Promise state');\n        }\n        return resultCapability.promise;\n      }\n    });\n    // This helps the optimizer by ensuring that methods which take\n    // capabilities aren't polymorphic.\n    PROMISE_FAKE_CAPABILITY = new PromiseCapability(Promise);\n    Promise$prototype$then = Promise$prototype.then;\n\n    return Promise;\n  }());\n\n  // Chrome's native Promise has extra methods that it shouldn't have. Let's remove them.\n  if (globals.Promise) {\n    delete globals.Promise.accept;\n    delete globals.Promise.defer;\n    delete globals.Promise.prototype.chain;\n  }\n\n  if (typeof PromiseShim === 'function') {\n    // export the Promise constructor.\n    defineProperties(globals, { Promise: PromiseShim });\n    // In Chrome 33 (and thereabouts) Promise is defined, but the\n    // implementation is buggy in a number of ways.  Let's check subclassing\n    // support to see if we have a buggy implementation.\n    var promiseSupportsSubclassing = supportsSubclassing(globals.Promise, function (S) {\n      return S.resolve(42).then(function () {}) instanceof S;\n    });\n    var promiseIgnoresNonFunctionThenCallbacks = !throwsError(function () {\n      globals.Promise.reject(42).then(null, 5).then(null, noop);\n    });\n    var promiseRequiresObjectContext = throwsError(function () { globals.Promise.call(3, noop); });\n    // Promise.resolve() was errata'ed late in the ES6 process.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=1170742\n    //      https://code.google.com/p/v8/issues/detail?id=4161\n    // It serves as a proxy for a number of other bugs in early Promise\n    // implementations.\n    var promiseResolveBroken = (function (Promise) {\n      var p = Promise.resolve(5);\n      p.constructor = {};\n      var p2 = Promise.resolve(p);\n      try {\n        p2.then(null, noop).then(null, noop); // avoid \"uncaught rejection\" warnings in console\n      } catch (e) {\n        return true; // v8 native Promises break here https://code.google.com/p/chromium/issues/detail?id=575314\n      }\n      return p === p2; // This *should* be false!\n    }(globals.Promise));\n\n    // Chrome 46 (probably older too) does not retrieve a thenable's .then synchronously\n    var getsThenSynchronously = supportsDescriptors && (function () {\n      var count = 0;\n      var thenable = Object.defineProperty({}, 'then', { get: function () { count += 1; } });\n      Promise.resolve(thenable);\n      return count === 1;\n    }());\n\n    var BadResolverPromise = function BadResolverPromise(executor) {\n      var p = new Promise(executor);\n      executor(3, function () {});\n      this.then = p.then;\n      this.constructor = BadResolverPromise;\n    };\n    BadResolverPromise.prototype = Promise.prototype;\n    BadResolverPromise.all = Promise.all;\n    // Chrome Canary 49 (probably older too) has some implementation bugs\n    var hasBadResolverPromise = valueOrFalseIfThrows(function () {\n      return !!BadResolverPromise.all([1, 2]);\n    });\n\n    if (!promiseSupportsSubclassing || !promiseIgnoresNonFunctionThenCallbacks ||\n        !promiseRequiresObjectContext || promiseResolveBroken ||\n        !getsThenSynchronously || hasBadResolverPromise) {\n      /* globals Promise: true */\n      /* eslint-disable no-undef, no-global-assign */\n      /* jshint -W020 */\n      Promise = PromiseShim;\n      /* jshint +W020 */\n      /* eslint-enable no-undef, no-global-assign */\n      /* globals Promise: false */\n      overrideNative(globals, 'Promise', PromiseShim);\n    }\n    if (Promise.all.length !== 1) {\n      var origAll = Promise.all;\n      overrideNative(Promise, 'all', function all(iterable) {\n        return ES.Call(origAll, this, arguments);\n      });\n    }\n    if (Promise.race.length !== 1) {\n      var origRace = Promise.race;\n      overrideNative(Promise, 'race', function race(iterable) {\n        return ES.Call(origRace, this, arguments);\n      });\n    }\n    if (Promise.resolve.length !== 1) {\n      var origResolve = Promise.resolve;\n      overrideNative(Promise, 'resolve', function resolve(x) {\n        return ES.Call(origResolve, this, arguments);\n      });\n    }\n    if (Promise.reject.length !== 1) {\n      var origReject = Promise.reject;\n      overrideNative(Promise, 'reject', function reject(r) {\n        return ES.Call(origReject, this, arguments);\n      });\n    }\n    ensureEnumerable(Promise, 'all');\n    ensureEnumerable(Promise, 'race');\n    ensureEnumerable(Promise, 'resolve');\n    ensureEnumerable(Promise, 'reject');\n    addDefaultSpecies(Promise);\n  }\n\n  // Map and Set require a true ES5 environment\n  // Their fast path also requires that the environment preserve\n  // property insertion order, which is not guaranteed by the spec.\n  var testOrder = function (a) {\n    var b = keys(_reduce(a, function (o, k) {\n      o[k] = true;\n      return o;\n    }, {}));\n    return a.join(':') === b.join(':');\n  };\n  var preservesInsertionOrder = testOrder(['z', 'a', 'bb']);\n  // some engines (eg, Chrome) only preserve insertion order for string keys\n  var preservesNumericInsertionOrder = testOrder(['z', 1, 'a', '3', 2]);\n\n  if (supportsDescriptors) {\n\n    var fastkey = function fastkey(key, skipInsertionOrderCheck) {\n      if (!skipInsertionOrderCheck && !preservesInsertionOrder) {\n        return null;\n      }\n      if (isNullOrUndefined(key)) {\n        return '^' + ES.ToString(key);\n      } else if (typeof key === 'string') {\n        return '$' + key;\n      } else if (typeof key === 'number') {\n        // note that -0 will get coerced to \"0\" when used as a property key\n        if (!preservesNumericInsertionOrder) {\n          return 'n' + key;\n        }\n        return key;\n      } else if (typeof key === 'boolean') {\n        return 'b' + key;\n      }\n      return null;\n    };\n\n    var emptyObject = function emptyObject() {\n      // accomodate some older not-quite-ES5 browsers\n      return Object.create ? Object.create(null) : {};\n    };\n\n    var addIterableToMap = function addIterableToMap(MapConstructor, map, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (entry) {\n          if (!ES.TypeIsObject(entry)) {\n            throw new TypeError('Iterator value ' + entry + ' is not an entry object');\n          }\n          map.set(entry[0], entry[1]);\n        });\n      } else if (iterable instanceof MapConstructor) {\n        _call(MapConstructor.prototype.forEach, iterable, function (value, key) {\n          map.set(key, value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = map.set;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad map'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextItem = next.value;\n            try {\n              if (!ES.TypeIsObject(nextItem)) {\n                throw new TypeError('Iterator value ' + nextItem + ' is not an entry object');\n              }\n              _call(adder, map, nextItem[0], nextItem[1]);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n    var addIterableToSet = function addIterableToSet(SetConstructor, set, iterable) {\n      if (isArray(iterable) || Type.string(iterable)) {\n        _forEach(iterable, function (value) {\n          set.add(value);\n        });\n      } else if (iterable instanceof SetConstructor) {\n        _call(SetConstructor.prototype.forEach, iterable, function (value) {\n          set.add(value);\n        });\n      } else {\n        var iter, adder;\n        if (!isNullOrUndefined(iterable)) {\n          adder = set.add;\n          if (!ES.IsCallable(adder)) { throw new TypeError('bad set'); }\n          iter = ES.GetIterator(iterable);\n        }\n        if (typeof iter !== 'undefined') {\n          while (true) {\n            var next = ES.IteratorStep(iter);\n            if (next === false) { break; }\n            var nextValue = next.value;\n            try {\n              _call(adder, set, nextValue);\n            } catch (e) {\n              ES.IteratorClose(iter, true);\n              throw e;\n            }\n          }\n        }\n      }\n    };\n\n    var collectionShims = {\n      Map: (function () {\n\n        var empty = {};\n\n        var MapEntry = function MapEntry(key, value) {\n          this.key = key;\n          this.value = value;\n          this.next = null;\n          this.prev = null;\n        };\n\n        MapEntry.prototype.isRemoved = function isRemoved() {\n          return this.key === empty;\n        };\n\n        var isMap = function isMap(map) {\n          return !!map._es6map;\n        };\n\n        var requireMapSlot = function requireMapSlot(map, method) {\n          if (!ES.TypeIsObject(map) || !isMap(map)) {\n            throw new TypeError('Method Map.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(map));\n          }\n        };\n\n        var MapIterator = function MapIterator(map, kind) {\n          requireMapSlot(map, '[[MapIterator]]');\n          this.head = map._head;\n          this.i = this.head;\n          this.kind = kind;\n        };\n\n        MapIterator.prototype = {\n          next: function next() {\n            var i = this.i;\n            var kind = this.kind;\n            var head = this.head;\n            if (typeof this.i === 'undefined') {\n              return iteratorResult();\n            }\n            while (i.isRemoved() && i !== head) {\n              // back up off of removed entries\n              i = i.prev;\n            }\n            // advance to next unreturned element.\n            var result;\n            while (i.next !== head) {\n              i = i.next;\n              if (!i.isRemoved()) {\n                if (kind === 'key') {\n                  result = i.key;\n                } else if (kind === 'value') {\n                  result = i.value;\n                } else {\n                  result = [i.key, i.value];\n                }\n                this.i = i;\n                return iteratorResult(result);\n              }\n            }\n            // once the iterator is done, it is done forever.\n            this.i = void 0;\n            return iteratorResult();\n          }\n        };\n        addIterator(MapIterator.prototype);\n\n        var Map$prototype;\n        var MapShim = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          if (this && this._es6map) {\n            throw new TypeError('Bad construction');\n          }\n          var map = emulateES6construct(this, Map, Map$prototype, {\n            _es6map: true,\n            _head: null,\n            _map: OrigMap ? new OrigMap() : null,\n            _size: 0,\n            _storage: emptyObject()\n          });\n\n          var head = new MapEntry(null, null);\n          // circular doubly-linked list.\n          /* eslint no-multi-assign: 1 */\n          head.next = head.prev = head;\n          map._head = head;\n\n          // Optionally initialize map from iterable\n          if (arguments.length > 0) {\n            addIterableToMap(Map, map, arguments[0]);\n          }\n          return map;\n        };\n        Map$prototype = MapShim.prototype;\n\n        Value.getter(Map$prototype, 'size', function () {\n          if (typeof this._size === 'undefined') {\n            throw new TypeError('size method called on incompatible Map');\n          }\n          return this._size;\n        });\n\n        defineProperties(Map$prototype, {\n          get: function get(key) {\n            requireMapSlot(this, 'get');\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              entry = this._storage[fkey];\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            if (this._map) {\n              // fast object key path\n              entry = origMapGet.call(this._map, key);\n              if (entry) {\n                return entry.value;\n              } else {\n                return;\n              }\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return i.value;\n              }\n            }\n          },\n\n          has: function has(key) {\n            requireMapSlot(this, 'has');\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              return typeof this._storage[fkey] !== 'undefined';\n            }\n            if (this._map) {\n              // fast object key path\n              return origMapHas.call(this._map, key);\n            }\n            var head = this._head;\n            var i = head;\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                return true;\n              }\n            }\n            return false;\n          },\n\n          set: function set(key, value) {\n            requireMapSlot(this, 'set');\n            var head = this._head;\n            var i = head;\n            var entry;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] !== 'undefined') {\n                this._storage[fkey].value = value;\n                return this;\n              } else {\n                entry = this._storage[fkey] = new MapEntry(key, value); /* eslint no-multi-assign: 1 */\n                i = head.prev;\n                // fall through\n              }\n            } else if (this._map) {\n              // fast object key path\n              if (origMapHas.call(this._map, key)) {\n                origMapGet.call(this._map, key).value = value;\n              } else {\n                entry = new MapEntry(key, value);\n                origMapSet.call(this._map, key, entry);\n                i = head.prev;\n                // fall through\n              }\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.value = value;\n                return this;\n              }\n            }\n            entry = entry || new MapEntry(key, value);\n            if (ES.SameValue(-0, key)) {\n              entry.key = +0; // coerce -0 to +0 in entry\n            }\n            entry.next = this._head;\n            entry.prev = this._head.prev;\n            entry.prev.next = entry;\n            entry.next.prev = entry;\n            this._size += 1;\n            return this;\n          },\n\n          'delete': function (key) {\n            requireMapSlot(this, 'delete');\n            var head = this._head;\n            var i = head;\n            var fkey = fastkey(key, true);\n            if (fkey !== null) {\n              // fast O(1) path\n              if (typeof this._storage[fkey] === 'undefined') {\n                return false;\n              }\n              i = this._storage[fkey].prev;\n              delete this._storage[fkey];\n              // fall through\n            } else if (this._map) {\n              // fast object key path\n              if (!origMapHas.call(this._map, key)) {\n                return false;\n              }\n              i = origMapGet.call(this._map, key).prev;\n              origMapDelete.call(this._map, key);\n              // fall through\n            }\n            while ((i = i.next) !== head) {\n              if (ES.SameValueZero(i.key, key)) {\n                i.key = empty;\n                i.value = empty;\n                i.prev.next = i.next;\n                i.next.prev = i.prev;\n                this._size -= 1;\n                return true;\n              }\n            }\n            return false;\n          },\n\n          clear: function clear() {\n             /* eslint no-multi-assign: 1 */\n            requireMapSlot(this, 'clear');\n            this._map = OrigMap ? new OrigMap() : null;\n            this._size = 0;\n            this._storage = emptyObject();\n            var head = this._head;\n            var i = head;\n            var p = i.next;\n            while ((i = p) !== head) {\n              i.key = empty;\n              i.value = empty;\n              p = i.next;\n              i.next = i.prev = head;\n            }\n            head.next = head.prev = head;\n          },\n\n          keys: function keys() {\n            requireMapSlot(this, 'keys');\n            return new MapIterator(this, 'key');\n          },\n\n          values: function values() {\n            requireMapSlot(this, 'values');\n            return new MapIterator(this, 'value');\n          },\n\n          entries: function entries() {\n            requireMapSlot(this, 'entries');\n            return new MapIterator(this, 'key+value');\n          },\n\n          forEach: function forEach(callback) {\n            requireMapSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var it = this.entries();\n            for (var entry = it.next(); !entry.done; entry = it.next()) {\n              if (context) {\n                _call(callback, context, entry.value[1], entry.value[0], this);\n              } else {\n                callback(entry.value[1], entry.value[0], this);\n              }\n            }\n          }\n        });\n        addIterator(Map$prototype, Map$prototype.entries);\n\n        return MapShim;\n      }()),\n\n      Set: (function () {\n        var isSet = function isSet(set) {\n          return set._es6set && typeof set._storage !== 'undefined';\n        };\n        var requireSetSlot = function requireSetSlot(set, method) {\n          if (!ES.TypeIsObject(set) || !isSet(set)) {\n            // https://github.com/paulmillr/es6-shim/issues/176\n            throw new TypeError('Set.prototype.' + method + ' called on incompatible receiver ' + ES.ToString(set));\n          }\n        };\n\n        // Creating a Map is expensive.  To speed up the common case of\n        // Sets containing only string or numeric keys, we use an object\n        // as backing storage and lazily create a full Map only when\n        // required.\n        var Set$prototype;\n        var SetShim = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          if (this && this._es6set) {\n            throw new TypeError('Bad construction');\n          }\n          var set = emulateES6construct(this, Set, Set$prototype, {\n            _es6set: true,\n            '[[SetData]]': null,\n            _storage: emptyObject()\n          });\n          if (!set._es6set) {\n            throw new TypeError('bad set');\n          }\n\n          // Optionally initialize Set from iterable\n          if (arguments.length > 0) {\n            addIterableToSet(Set, set, arguments[0]);\n          }\n          return set;\n        };\n        Set$prototype = SetShim.prototype;\n\n        var decodeKey = function (key) {\n          var k = key;\n          if (k === '^null') {\n            return null;\n          } else if (k === '^undefined') {\n            return void 0;\n          } else {\n            var first = k.charAt(0);\n            if (first === '$') {\n              return _strSlice(k, 1);\n            } else if (first === 'n') {\n              return +_strSlice(k, 1);\n            } else if (first === 'b') {\n              return k === 'btrue';\n            }\n          }\n          return +k;\n        };\n        // Switch from the object backing storage to a full Map.\n        var ensureMap = function ensureMap(set) {\n          if (!set['[[SetData]]']) {\n            var m = new collectionShims.Map();\n            set['[[SetData]]'] = m;\n            _forEach(keys(set._storage), function (key) {\n              var k = decodeKey(key);\n              m.set(k, k);\n            });\n            set['[[SetData]]'] = m;\n          }\n          set._storage = null; // free old backing storage\n        };\n\n        Value.getter(SetShim.prototype, 'size', function () {\n          requireSetSlot(this, 'size');\n          if (this._storage) {\n            return keys(this._storage).length;\n          }\n          ensureMap(this);\n          return this['[[SetData]]'].size;\n        });\n\n        defineProperties(SetShim.prototype, {\n          has: function has(key) {\n            requireSetSlot(this, 'has');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              return !!this._storage[fkey];\n            }\n            ensureMap(this);\n            return this['[[SetData]]'].has(key);\n          },\n\n          add: function add(key) {\n            requireSetSlot(this, 'add');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              this._storage[fkey] = true;\n              return this;\n            }\n            ensureMap(this);\n            this['[[SetData]]'].set(key, key);\n            return this;\n          },\n\n          'delete': function (key) {\n            requireSetSlot(this, 'delete');\n            var fkey;\n            if (this._storage && (fkey = fastkey(key)) !== null) {\n              var hasFKey = _hasOwnProperty(this._storage, fkey);\n              return (delete this._storage[fkey]) && hasFKey;\n            }\n            ensureMap(this);\n            return this['[[SetData]]']['delete'](key);\n          },\n\n          clear: function clear() {\n            requireSetSlot(this, 'clear');\n            if (this._storage) {\n              this._storage = emptyObject();\n            }\n            if (this['[[SetData]]']) {\n              this['[[SetData]]'].clear();\n            }\n          },\n\n          values: function values() {\n            requireSetSlot(this, 'values');\n            ensureMap(this);\n            return this['[[SetData]]'].values();\n          },\n\n          entries: function entries() {\n            requireSetSlot(this, 'entries');\n            ensureMap(this);\n            return this['[[SetData]]'].entries();\n          },\n\n          forEach: function forEach(callback) {\n            requireSetSlot(this, 'forEach');\n            var context = arguments.length > 1 ? arguments[1] : null;\n            var entireSet = this;\n            ensureMap(entireSet);\n            this['[[SetData]]'].forEach(function (value, key) {\n              if (context) {\n                _call(callback, context, key, key, entireSet);\n              } else {\n                callback(key, key, entireSet);\n              }\n            });\n          }\n        });\n        defineProperty(SetShim.prototype, 'keys', SetShim.prototype.values, true);\n        addIterator(SetShim.prototype, SetShim.prototype.values);\n\n        return SetShim;\n      }())\n    };\n\n    if (globals.Map || globals.Set) {\n      // Safari 8, for example, doesn't accept an iterable.\n      var mapAcceptsArguments = valueOrFalseIfThrows(function () { return new Map([[1, 2]]).get(1) === 2; });\n      if (!mapAcceptsArguments) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, globals.Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = create(OrigMap.prototype);\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var testMap = new Map();\n      var mapUsesSameValueZero = (function () {\n        // Chrome 38-42, node 0.11/0.12, iojs 1/2 also have a bug when the Map has a size > 4\n        var m = new Map([[1, 0], [2, 0], [3, 0], [4, 0]]);\n        m.set(-0, m);\n        return m.get(0) === m && m.get(-0) === m && m.has(0) && m.has(-0);\n      }());\n      var mapSupportsChaining = testMap.set(1, 2) === testMap;\n      if (!mapUsesSameValueZero || !mapSupportsChaining) {\n        overrideNative(Map.prototype, 'set', function set(k, v) {\n          _call(origMapSet, this, k === 0 ? 0 : k, v);\n          return this;\n        });\n      }\n      if (!mapUsesSameValueZero) {\n        defineProperties(Map.prototype, {\n          get: function get(k) {\n            return _call(origMapGet, this, k === 0 ? 0 : k);\n          },\n          has: function has(k) {\n            return _call(origMapHas, this, k === 0 ? 0 : k);\n          }\n        }, true);\n        Value.preserveToString(Map.prototype.get, origMapGet);\n        Value.preserveToString(Map.prototype.has, origMapHas);\n      }\n      var testSet = new Set();\n      var setUsesSameValueZero = (function (s) {\n        s['delete'](0);\n        s.add(-0);\n        return !s.has(0);\n      }(testSet));\n      var setSupportsChaining = testSet.add(1) === testSet;\n      if (!setUsesSameValueZero || !setSupportsChaining) {\n        var origSetAdd = Set.prototype.add;\n        Set.prototype.add = function add(v) {\n          _call(origSetAdd, this, v === 0 ? 0 : v);\n          return this;\n        };\n        Value.preserveToString(Set.prototype.add, origSetAdd);\n      }\n      if (!setUsesSameValueZero) {\n        var origSetHas = Set.prototype.has;\n        Set.prototype.has = function has(v) {\n          return _call(origSetHas, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype.has, origSetHas);\n        var origSetDel = Set.prototype['delete'];\n        Set.prototype['delete'] = function SetDelete(v) {\n          return _call(origSetDel, this, v === 0 ? 0 : v);\n        };\n        Value.preserveToString(Set.prototype['delete'], origSetDel);\n      }\n      var mapSupportsSubclassing = supportsSubclassing(globals.Map, function (M) {\n        var m = new M([]);\n        // Firefox 32 is ok with the instantiating the subclass but will\n        // throw when the map is used.\n        m.set(42, 42);\n        return m instanceof M;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var mapFailsToSupportSubclassing = Object.setPrototypeOf && !mapSupportsSubclassing;\n      var mapRequiresNew = (function () {\n        try {\n          return !(globals.Map() instanceof globals.Map);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Map.length !== 0 || mapFailsToSupportSubclassing || !mapRequiresNew) {\n        globals.Map = function Map() {\n          if (!(this instanceof Map)) {\n            throw new TypeError('Constructor Map requires \"new\"');\n          }\n          var m = new OrigMap();\n          if (arguments.length > 0) {\n            addIterableToMap(Map, m, arguments[0]);\n          }\n          delete m.constructor;\n          Object.setPrototypeOf(m, Map.prototype);\n          return m;\n        };\n        globals.Map.prototype = OrigMap.prototype;\n        defineProperty(globals.Map.prototype, 'constructor', globals.Map, true);\n        Value.preserveToString(globals.Map, OrigMap);\n      }\n      var setSupportsSubclassing = supportsSubclassing(globals.Set, function (S) {\n        var s = new S([]);\n        s.add(42, 42);\n        return s instanceof S;\n      });\n      // without Object.setPrototypeOf, subclassing is not possible\n      var setFailsToSupportSubclassing = Object.setPrototypeOf && !setSupportsSubclassing;\n      var setRequiresNew = (function () {\n        try {\n          return !(globals.Set() instanceof globals.Set);\n        } catch (e) {\n          return e instanceof TypeError;\n        }\n      }());\n      if (globals.Set.length !== 0 || setFailsToSupportSubclassing || !setRequiresNew) {\n        var OrigSet = globals.Set;\n        globals.Set = function Set() {\n          if (!(this instanceof Set)) {\n            throw new TypeError('Constructor Set requires \"new\"');\n          }\n          var s = new OrigSet();\n          if (arguments.length > 0) {\n            addIterableToSet(Set, s, arguments[0]);\n          }\n          delete s.constructor;\n          Object.setPrototypeOf(s, Set.prototype);\n          return s;\n        };\n        globals.Set.prototype = OrigSet.prototype;\n        defineProperty(globals.Set.prototype, 'constructor', globals.Set, true);\n        Value.preserveToString(globals.Set, OrigSet);\n      }\n      var newMap = new globals.Map();\n      var mapIterationThrowsStopIterator = !valueOrFalseIfThrows(function () {\n        return newMap.keys().next().done;\n      });\n      /*\n        - In Firefox < 23, Map#size is a function.\n        - In all current Firefox, Set#entries/keys/values & Map#clear do not exist\n        - https://bugzilla.mozilla.org/show_bug.cgi?id=869996\n        - In Firefox 24, Map and Set do not implement forEach\n        - In Firefox 25 at least, Map and Set are callable without \"new\"\n      */\n      if (\n        typeof globals.Map.prototype.clear !== 'function' ||\n        new globals.Set().size !== 0 ||\n        newMap.size !== 0 ||\n        typeof globals.Map.prototype.keys !== 'function' ||\n        typeof globals.Set.prototype.keys !== 'function' ||\n        typeof globals.Map.prototype.forEach !== 'function' ||\n        typeof globals.Set.prototype.forEach !== 'function' ||\n        isCallableWithoutNew(globals.Map) ||\n        isCallableWithoutNew(globals.Set) ||\n        typeof newMap.keys().next !== 'function' || // Safari 8\n        mapIterationThrowsStopIterator || // Firefox 25\n        !mapSupportsSubclassing\n      ) {\n        defineProperties(globals, {\n          Map: collectionShims.Map,\n          Set: collectionShims.Set\n        }, true);\n      }\n\n      if (globals.Set.prototype.keys !== globals.Set.prototype.values) {\n        // Fixed in WebKit with https://bugs.webkit.org/show_bug.cgi?id=144190\n        defineProperty(globals.Set.prototype, 'keys', globals.Set.prototype.values, true);\n      }\n\n      // Shim incomplete iterator implementations.\n      addIterator(Object.getPrototypeOf((new globals.Map()).keys()));\n      addIterator(Object.getPrototypeOf((new globals.Set()).keys()));\n\n      if (functionsHaveNames && globals.Set.prototype.has.name !== 'has') {\n        // Microsoft Edge v0.11.10074.0 is missing a name on Set#has\n        var anonymousSetHas = globals.Set.prototype.has;\n        overrideNative(globals.Set.prototype, 'has', function has(key) {\n          return _call(anonymousSetHas, this, key);\n        });\n      }\n    }\n    defineProperties(globals, collectionShims);\n    addDefaultSpecies(globals.Map);\n    addDefaultSpecies(globals.Set);\n  }\n\n  var throwUnlessTargetIsObject = function throwUnlessTargetIsObject(target) {\n    if (!ES.TypeIsObject(target)) {\n      throw new TypeError('target must be an object');\n    }\n  };\n\n  // Some Reflect methods are basically the same as\n  // those on the Object global, except that a TypeError is thrown if\n  // target isn't an object. As well as returning a boolean indicating\n  // the success of the operation.\n  var ReflectShims = {\n    // Apply method in a functional form.\n    apply: function apply() {\n      return ES.Call(ES.Call, null, arguments);\n    },\n\n    // New operator in a functional form.\n    construct: function construct(constructor, args) {\n      if (!ES.IsConstructor(constructor)) {\n        throw new TypeError('First argument must be a constructor.');\n      }\n      var newTarget = arguments.length > 2 ? arguments[2] : constructor;\n      if (!ES.IsConstructor(newTarget)) {\n        throw new TypeError('new.target must be a constructor.');\n      }\n      return ES.Construct(constructor, args, newTarget, 'internal');\n    },\n\n    // When deleting a non-existent or configurable property,\n    // true is returned.\n    // When attempting to delete a non-configurable property,\n    // it will return false.\n    deleteProperty: function deleteProperty(target, key) {\n      throwUnlessTargetIsObject(target);\n      if (supportsDescriptors) {\n        var desc = Object.getOwnPropertyDescriptor(target, key);\n\n        if (desc && !desc.configurable) {\n          return false;\n        }\n      }\n\n      // Will return true.\n      return delete target[key];\n    },\n\n    has: function has(target, key) {\n      throwUnlessTargetIsObject(target);\n      return key in target;\n    }\n  };\n\n  if (Object.getOwnPropertyNames) {\n    Object.assign(ReflectShims, {\n      // Basically the result of calling the internal [[OwnPropertyKeys]].\n      // Concatenating propertyNames and propertySymbols should do the trick.\n      // This should continue to work together with a Symbol shim\n      // which overrides Object.getOwnPropertyNames and implements\n      // Object.getOwnPropertySymbols.\n      ownKeys: function ownKeys(target) {\n        throwUnlessTargetIsObject(target);\n        var keys = Object.getOwnPropertyNames(target);\n\n        if (ES.IsCallable(Object.getOwnPropertySymbols)) {\n          _pushApply(keys, Object.getOwnPropertySymbols(target));\n        }\n\n        return keys;\n      }\n    });\n  }\n\n  var callAndCatchException = function ConvertExceptionToBoolean(func) {\n    return !throwsError(func);\n  };\n\n  if (Object.preventExtensions) {\n    Object.assign(ReflectShims, {\n      isExtensible: function isExtensible(target) {\n        throwUnlessTargetIsObject(target);\n        return Object.isExtensible(target);\n      },\n      preventExtensions: function preventExtensions(target) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.preventExtensions(target);\n        });\n      }\n    });\n  }\n\n  if (supportsDescriptors) {\n    var internalGet = function get(target, key, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent === null) {\n          return void 0;\n        }\n\n        return internalGet(parent, key, receiver);\n      }\n\n      if ('value' in desc) {\n        return desc.value;\n      }\n\n      if (desc.get) {\n        return ES.Call(desc.get, receiver);\n      }\n\n      return void 0;\n    };\n\n    var internalSet = function set(target, key, value, receiver) {\n      var desc = Object.getOwnPropertyDescriptor(target, key);\n\n      if (!desc) {\n        var parent = Object.getPrototypeOf(target);\n\n        if (parent !== null) {\n          return internalSet(parent, key, value, receiver);\n        }\n\n        desc = {\n          value: void 0,\n          writable: true,\n          enumerable: true,\n          configurable: true\n        };\n      }\n\n      if ('value' in desc) {\n        if (!desc.writable) {\n          return false;\n        }\n\n        if (!ES.TypeIsObject(receiver)) {\n          return false;\n        }\n\n        var existingDesc = Object.getOwnPropertyDescriptor(receiver, key);\n\n        if (existingDesc) {\n          return Reflect.defineProperty(receiver, key, {\n            value: value\n          });\n        } else {\n          return Reflect.defineProperty(receiver, key, {\n            value: value,\n            writable: true,\n            enumerable: true,\n            configurable: true\n          });\n        }\n      }\n\n      if (desc.set) {\n        _call(desc.set, receiver, value);\n        return true;\n      }\n\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      defineProperty: function defineProperty(target, propertyKey, attributes) {\n        throwUnlessTargetIsObject(target);\n        return callAndCatchException(function () {\n          Object.defineProperty(target, propertyKey, attributes);\n        });\n      },\n\n      getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {\n        throwUnlessTargetIsObject(target);\n        return Object.getOwnPropertyDescriptor(target, propertyKey);\n      },\n\n      // Syntax in a functional form.\n      get: function get(target, key) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 2 ? arguments[2] : target;\n\n        return internalGet(target, key, receiver);\n      },\n\n      set: function set(target, key, value) {\n        throwUnlessTargetIsObject(target);\n        var receiver = arguments.length > 3 ? arguments[3] : target;\n\n        return internalSet(target, key, value, receiver);\n      }\n    });\n  }\n\n  if (Object.getPrototypeOf) {\n    var objectDotGetPrototypeOf = Object.getPrototypeOf;\n    ReflectShims.getPrototypeOf = function getPrototypeOf(target) {\n      throwUnlessTargetIsObject(target);\n      return objectDotGetPrototypeOf(target);\n    };\n  }\n\n  if (Object.setPrototypeOf && ReflectShims.getPrototypeOf) {\n    var willCreateCircularPrototype = function (object, lastProto) {\n      var proto = lastProto;\n      while (proto) {\n        if (object === proto) {\n          return true;\n        }\n        proto = ReflectShims.getPrototypeOf(proto);\n      }\n      return false;\n    };\n\n    Object.assign(ReflectShims, {\n      // Sets the prototype of the given object.\n      // Returns true on success, otherwise false.\n      setPrototypeOf: function setPrototypeOf(object, proto) {\n        throwUnlessTargetIsObject(object);\n        if (proto !== null && !ES.TypeIsObject(proto)) {\n          throw new TypeError('proto must be an object or null');\n        }\n\n        // If they already are the same, we're done.\n        if (proto === Reflect.getPrototypeOf(object)) {\n          return true;\n        }\n\n        // Cannot alter prototype if object not extensible.\n        if (Reflect.isExtensible && !Reflect.isExtensible(object)) {\n          return false;\n        }\n\n        // Ensure that we do not create a circular prototype chain.\n        if (willCreateCircularPrototype(object, proto)) {\n          return false;\n        }\n\n        Object.setPrototypeOf(object, proto);\n\n        return true;\n      }\n    });\n  }\n  var defineOrOverrideReflectProperty = function (key, shim) {\n    if (!ES.IsCallable(globals.Reflect[key])) {\n      defineProperty(globals.Reflect, key, shim);\n    } else {\n      var acceptsPrimitives = valueOrFalseIfThrows(function () {\n        globals.Reflect[key](1);\n        globals.Reflect[key](NaN);\n        globals.Reflect[key](true);\n        return true;\n      });\n      if (acceptsPrimitives) {\n        overrideNative(globals.Reflect, key, shim);\n      }\n    }\n  };\n  Object.keys(ReflectShims).forEach(function (key) {\n    defineOrOverrideReflectProperty(key, ReflectShims[key]);\n  });\n  var originalReflectGetProto = globals.Reflect.getPrototypeOf;\n  if (functionsHaveNames && originalReflectGetProto && originalReflectGetProto.name !== 'getPrototypeOf') {\n    overrideNative(globals.Reflect, 'getPrototypeOf', function getPrototypeOf(target) {\n      return _call(originalReflectGetProto, globals.Reflect, target);\n    });\n  }\n  if (globals.Reflect.setPrototypeOf) {\n    if (valueOrFalseIfThrows(function () {\n      globals.Reflect.setPrototypeOf(1, {});\n      return true;\n    })) {\n      overrideNative(globals.Reflect, 'setPrototypeOf', ReflectShims.setPrototypeOf);\n    }\n  }\n  if (globals.Reflect.defineProperty) {\n    if (!valueOrFalseIfThrows(function () {\n      var basic = !globals.Reflect.defineProperty(1, 'test', { value: 1 });\n      // \"extensible\" fails on Edge 0.12\n      var extensible = typeof Object.preventExtensions !== 'function' || !globals.Reflect.defineProperty(Object.preventExtensions({}), 'test', {});\n      return basic && extensible;\n    })) {\n      overrideNative(globals.Reflect, 'defineProperty', ReflectShims.defineProperty);\n    }\n  }\n  if (globals.Reflect.construct) {\n    if (!valueOrFalseIfThrows(function () {\n      var F = function F() {};\n      return globals.Reflect.construct(function () {}, [], F) instanceof F;\n    })) {\n      overrideNative(globals.Reflect, 'construct', ReflectShims.construct);\n    }\n  }\n\n  if (String(new Date(NaN)) !== 'Invalid Date') {\n    var dateToString = Date.prototype.toString;\n    var shimmedDateToString = function toString() {\n      var valueOf = +this;\n      if (valueOf !== valueOf) {\n        return 'Invalid Date';\n      }\n      return ES.Call(dateToString, this);\n    };\n    overrideNative(Date.prototype, 'toString', shimmedDateToString);\n  }\n\n  // Annex B HTML methods\n  // http://www.ecma-international.org/ecma-262/6.0/#sec-additional-properties-of-the-string.prototype-object\n  var stringHTMLshims = {\n    anchor: function anchor(name) { return ES.CreateHTML(this, 'a', 'name', name); },\n    big: function big() { return ES.CreateHTML(this, 'big', '', ''); },\n    blink: function blink() { return ES.CreateHTML(this, 'blink', '', ''); },\n    bold: function bold() { return ES.CreateHTML(this, 'b', '', ''); },\n    fixed: function fixed() { return ES.CreateHTML(this, 'tt', '', ''); },\n    fontcolor: function fontcolor(color) { return ES.CreateHTML(this, 'font', 'color', color); },\n    fontsize: function fontsize(size) { return ES.CreateHTML(this, 'font', 'size', size); },\n    italics: function italics() { return ES.CreateHTML(this, 'i', '', ''); },\n    link: function link(url) { return ES.CreateHTML(this, 'a', 'href', url); },\n    small: function small() { return ES.CreateHTML(this, 'small', '', ''); },\n    strike: function strike() { return ES.CreateHTML(this, 'strike', '', ''); },\n    sub: function sub() { return ES.CreateHTML(this, 'sub', '', ''); },\n    sup: function sub() { return ES.CreateHTML(this, 'sup', '', ''); }\n  };\n  _forEach(Object.keys(stringHTMLshims), function (key) {\n    var method = String.prototype[key];\n    var shouldOverwrite = false;\n    if (ES.IsCallable(method)) {\n      var output = _call(method, '', ' \" ');\n      var quotesCount = _concat([], output.match(/\"/g)).length;\n      shouldOverwrite = output !== output.toLowerCase() || quotesCount > 2;\n    } else {\n      shouldOverwrite = true;\n    }\n    if (shouldOverwrite) {\n      overrideNative(String.prototype, key, stringHTMLshims[key]);\n    }\n  });\n\n  var JSONstringifiesSymbols = (function () {\n    // Microsoft Edge v0.12 stringifies Symbols incorrectly\n    if (!hasSymbols) { return false; } // Symbols are not supported\n    var stringify = typeof JSON === 'object' && typeof JSON.stringify === 'function' ? JSON.stringify : null;\n    if (!stringify) { return false; } // JSON.stringify is not supported\n    if (typeof stringify(Symbol()) !== 'undefined') { return true; } // Symbols should become `undefined`\n    if (stringify([Symbol()]) !== '[null]') { return true; } // Symbols in arrays should become `null`\n    var obj = { a: Symbol() };\n    obj[Symbol()] = true;\n    if (stringify(obj) !== '{}') { return true; } // Symbol-valued keys *and* Symbol-valued properties should be omitted\n    return false;\n  }());\n  var JSONstringifyAcceptsObjectSymbol = valueOrFalseIfThrows(function () {\n    // Chrome 45 throws on stringifying object symbols\n    if (!hasSymbols) { return true; } // Symbols are not supported\n    return JSON.stringify(Object(Symbol())) === '{}' && JSON.stringify([Object(Symbol())]) === '[{}]';\n  });\n  if (JSONstringifiesSymbols || !JSONstringifyAcceptsObjectSymbol) {\n    var origStringify = JSON.stringify;\n    overrideNative(JSON, 'stringify', function stringify(value) {\n      if (typeof value === 'symbol') { return; }\n      var replacer;\n      if (arguments.length > 1) {\n        replacer = arguments[1];\n      }\n      var args = [value];\n      if (!isArray(replacer)) {\n        var replaceFn = ES.IsCallable(replacer) ? replacer : null;\n        var wrappedReplacer = function (key, val) {\n          var parsedValue = replaceFn ? _call(replaceFn, this, key, val) : val;\n          if (typeof parsedValue !== 'symbol') {\n            if (Type.symbol(parsedValue)) {\n              return assignTo({})(parsedValue);\n            } else {\n              return parsedValue;\n            }\n          }\n        };\n        args.push(wrappedReplacer);\n      } else {\n        // create wrapped replacer that handles an array replacer?\n        args.push(replacer);\n      }\n      if (arguments.length > 2) {\n        args.push(arguments[2]);\n      }\n      return origStringify.apply(this, args);\n    });\n  }\n\n  return globals;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/es6-shim/es6-shim.js\n// module id = 3\n// module chunks = 0","// the whatwg-fetch polyfill installs the fetch() function\n// on the global object (window or self)\n//\n// Return that as the export for use in Webpack, Browserify etc.\nrequire('whatwg-fetch');\nmodule.exports = self.fetch.bind(self);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/isomorphic-fetch/fetch-npm-browserify.js\n// module id = 4\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = options.status === undefined ? 200 : options.status\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/whatwg-fetch/fetch.js\n// module id = 5\n// module chunks = 0","/*!\n * @overview es6-promise - a tiny implementation of Promises/A+.\n * @copyright Copyright (c) 2014 Yehuda Katz, Tom Dale, Stefan Penner and contributors (Conversion to ES6 API by Jake Archibald)\n * @license   Licensed under MIT license\n *            See https://raw.githubusercontent.com/stefanpenner/es6-promise/master/LICENSE\n * @version   v4.2.4+314e4831\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.ES6Promise = factory());\n}(this, (function () { 'use strict';\n\nfunction objectOrFunction(x) {\n  var type = typeof x;\n  return x !== null && (type === 'object' || type === 'function');\n}\n\nfunction isFunction(x) {\n  return typeof x === 'function';\n}\n\n\n\nvar _isArray = void 0;\nif (Array.isArray) {\n  _isArray = Array.isArray;\n} else {\n  _isArray = function (x) {\n    return Object.prototype.toString.call(x) === '[object Array]';\n  };\n}\n\nvar isArray = _isArray;\n\nvar len = 0;\nvar vertxNext = void 0;\nvar customSchedulerFn = void 0;\n\nvar asap = function asap(callback, arg) {\n  queue[len] = callback;\n  queue[len + 1] = arg;\n  len += 2;\n  if (len === 2) {\n    // If len is 2, that means that we need to schedule an async flush.\n    // If additional callbacks are queued before the queue is flushed, they\n    // will be processed by this flush that we are scheduling.\n    if (customSchedulerFn) {\n      customSchedulerFn(flush);\n    } else {\n      scheduleFlush();\n    }\n  }\n};\n\nfunction setScheduler(scheduleFn) {\n  customSchedulerFn = scheduleFn;\n}\n\nfunction setAsap(asapFn) {\n  asap = asapFn;\n}\n\nvar browserWindow = typeof window !== 'undefined' ? window : undefined;\nvar browserGlobal = browserWindow || {};\nvar BrowserMutationObserver = browserGlobal.MutationObserver || browserGlobal.WebKitMutationObserver;\nvar isNode = typeof self === 'undefined' && typeof process !== 'undefined' && {}.toString.call(process) === '[object process]';\n\n// test for web worker but not in IE10\nvar isWorker = typeof Uint8ClampedArray !== 'undefined' && typeof importScripts !== 'undefined' && typeof MessageChannel !== 'undefined';\n\n// node\nfunction useNextTick() {\n  // node version 0.10.x displays a deprecation warning when nextTick is used recursively\n  // see https://github.com/cujojs/when/issues/410 for details\n  return function () {\n    return process.nextTick(flush);\n  };\n}\n\n// vertx\nfunction useVertxTimer() {\n  if (typeof vertxNext !== 'undefined') {\n    return function () {\n      vertxNext(flush);\n    };\n  }\n\n  return useSetTimeout();\n}\n\nfunction useMutationObserver() {\n  var iterations = 0;\n  var observer = new BrowserMutationObserver(flush);\n  var node = document.createTextNode('');\n  observer.observe(node, { characterData: true });\n\n  return function () {\n    node.data = iterations = ++iterations % 2;\n  };\n}\n\n// web worker\nfunction useMessageChannel() {\n  var channel = new MessageChannel();\n  channel.port1.onmessage = flush;\n  return function () {\n    return channel.port2.postMessage(0);\n  };\n}\n\nfunction useSetTimeout() {\n  // Store setTimeout reference so es6-promise will be unaffected by\n  // other code modifying setTimeout (like sinon.useFakeTimers())\n  var globalSetTimeout = setTimeout;\n  return function () {\n    return globalSetTimeout(flush, 1);\n  };\n}\n\nvar queue = new Array(1000);\nfunction flush() {\n  for (var i = 0; i < len; i += 2) {\n    var callback = queue[i];\n    var arg = queue[i + 1];\n\n    callback(arg);\n\n    queue[i] = undefined;\n    queue[i + 1] = undefined;\n  }\n\n  len = 0;\n}\n\nfunction attemptVertx() {\n  try {\n    var vertx = Function('return this')().require('vertx');\n    vertxNext = vertx.runOnLoop || vertx.runOnContext;\n    return useVertxTimer();\n  } catch (e) {\n    return useSetTimeout();\n  }\n}\n\nvar scheduleFlush = void 0;\n// Decide what async method to use to triggering processing of queued callbacks:\nif (isNode) {\n  scheduleFlush = useNextTick();\n} else if (BrowserMutationObserver) {\n  scheduleFlush = useMutationObserver();\n} else if (isWorker) {\n  scheduleFlush = useMessageChannel();\n} else if (browserWindow === undefined && typeof require === 'function') {\n  scheduleFlush = attemptVertx();\n} else {\n  scheduleFlush = useSetTimeout();\n}\n\nfunction then(onFulfillment, onRejection) {\n  var parent = this;\n\n  var child = new this.constructor(noop);\n\n  if (child[PROMISE_ID] === undefined) {\n    makePromise(child);\n  }\n\n  var _state = parent._state;\n\n\n  if (_state) {\n    var callback = arguments[_state - 1];\n    asap(function () {\n      return invokeCallback(_state, child, callback, parent._result);\n    });\n  } else {\n    subscribe(parent, child, onFulfillment, onRejection);\n  }\n\n  return child;\n}\n\n/**\n  `Promise.resolve` returns a promise that will become resolved with the\n  passed `value`. It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    resolve(1);\n  });\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.resolve(1);\n\n  promise.then(function(value){\n    // value === 1\n  });\n  ```\n\n  @method resolve\n  @static\n  @param {Any} value value that the returned promise will be resolved with\n  Useful for tooling.\n  @return {Promise} a promise that will become fulfilled with the given\n  `value`\n*/\nfunction resolve$1(object) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (object && typeof object === 'object' && object.constructor === Constructor) {\n    return object;\n  }\n\n  var promise = new Constructor(noop);\n  resolve(promise, object);\n  return promise;\n}\n\nvar PROMISE_ID = Math.random().toString(36).substring(2);\n\nfunction noop() {}\n\nvar PENDING = void 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\n\nvar TRY_CATCH_ERROR = { error: null };\n\nfunction selfFulfillment() {\n  return new TypeError(\"You cannot resolve a promise with itself\");\n}\n\nfunction cannotReturnOwn() {\n  return new TypeError('A promises callback cannot return that same promise.');\n}\n\nfunction getThen(promise) {\n  try {\n    return promise.then;\n  } catch (error) {\n    TRY_CATCH_ERROR.error = error;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction tryThen(then$$1, value, fulfillmentHandler, rejectionHandler) {\n  try {\n    then$$1.call(value, fulfillmentHandler, rejectionHandler);\n  } catch (e) {\n    return e;\n  }\n}\n\nfunction handleForeignThenable(promise, thenable, then$$1) {\n  asap(function (promise) {\n    var sealed = false;\n    var error = tryThen(then$$1, thenable, function (value) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n      if (thenable !== value) {\n        resolve(promise, value);\n      } else {\n        fulfill(promise, value);\n      }\n    }, function (reason) {\n      if (sealed) {\n        return;\n      }\n      sealed = true;\n\n      reject(promise, reason);\n    }, 'Settle: ' + (promise._label || ' unknown promise'));\n\n    if (!sealed && error) {\n      sealed = true;\n      reject(promise, error);\n    }\n  }, promise);\n}\n\nfunction handleOwnThenable(promise, thenable) {\n  if (thenable._state === FULFILLED) {\n    fulfill(promise, thenable._result);\n  } else if (thenable._state === REJECTED) {\n    reject(promise, thenable._result);\n  } else {\n    subscribe(thenable, undefined, function (value) {\n      return resolve(promise, value);\n    }, function (reason) {\n      return reject(promise, reason);\n    });\n  }\n}\n\nfunction handleMaybeThenable(promise, maybeThenable, then$$1) {\n  if (maybeThenable.constructor === promise.constructor && then$$1 === then && maybeThenable.constructor.resolve === resolve$1) {\n    handleOwnThenable(promise, maybeThenable);\n  } else {\n    if (then$$1 === TRY_CATCH_ERROR) {\n      reject(promise, TRY_CATCH_ERROR.error);\n      TRY_CATCH_ERROR.error = null;\n    } else if (then$$1 === undefined) {\n      fulfill(promise, maybeThenable);\n    } else if (isFunction(then$$1)) {\n      handleForeignThenable(promise, maybeThenable, then$$1);\n    } else {\n      fulfill(promise, maybeThenable);\n    }\n  }\n}\n\nfunction resolve(promise, value) {\n  if (promise === value) {\n    reject(promise, selfFulfillment());\n  } else if (objectOrFunction(value)) {\n    handleMaybeThenable(promise, value, getThen(value));\n  } else {\n    fulfill(promise, value);\n  }\n}\n\nfunction publishRejection(promise) {\n  if (promise._onerror) {\n    promise._onerror(promise._result);\n  }\n\n  publish(promise);\n}\n\nfunction fulfill(promise, value) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n\n  promise._result = value;\n  promise._state = FULFILLED;\n\n  if (promise._subscribers.length !== 0) {\n    asap(publish, promise);\n  }\n}\n\nfunction reject(promise, reason) {\n  if (promise._state !== PENDING) {\n    return;\n  }\n  promise._state = REJECTED;\n  promise._result = reason;\n\n  asap(publishRejection, promise);\n}\n\nfunction subscribe(parent, child, onFulfillment, onRejection) {\n  var _subscribers = parent._subscribers;\n  var length = _subscribers.length;\n\n\n  parent._onerror = null;\n\n  _subscribers[length] = child;\n  _subscribers[length + FULFILLED] = onFulfillment;\n  _subscribers[length + REJECTED] = onRejection;\n\n  if (length === 0 && parent._state) {\n    asap(publish, parent);\n  }\n}\n\nfunction publish(promise) {\n  var subscribers = promise._subscribers;\n  var settled = promise._state;\n\n  if (subscribers.length === 0) {\n    return;\n  }\n\n  var child = void 0,\n      callback = void 0,\n      detail = promise._result;\n\n  for (var i = 0; i < subscribers.length; i += 3) {\n    child = subscribers[i];\n    callback = subscribers[i + settled];\n\n    if (child) {\n      invokeCallback(settled, child, callback, detail);\n    } else {\n      callback(detail);\n    }\n  }\n\n  promise._subscribers.length = 0;\n}\n\nfunction tryCatch(callback, detail) {\n  try {\n    return callback(detail);\n  } catch (e) {\n    TRY_CATCH_ERROR.error = e;\n    return TRY_CATCH_ERROR;\n  }\n}\n\nfunction invokeCallback(settled, promise, callback, detail) {\n  var hasCallback = isFunction(callback),\n      value = void 0,\n      error = void 0,\n      succeeded = void 0,\n      failed = void 0;\n\n  if (hasCallback) {\n    value = tryCatch(callback, detail);\n\n    if (value === TRY_CATCH_ERROR) {\n      failed = true;\n      error = value.error;\n      value.error = null;\n    } else {\n      succeeded = true;\n    }\n\n    if (promise === value) {\n      reject(promise, cannotReturnOwn());\n      return;\n    }\n  } else {\n    value = detail;\n    succeeded = true;\n  }\n\n  if (promise._state !== PENDING) {\n    // noop\n  } else if (hasCallback && succeeded) {\n    resolve(promise, value);\n  } else if (failed) {\n    reject(promise, error);\n  } else if (settled === FULFILLED) {\n    fulfill(promise, value);\n  } else if (settled === REJECTED) {\n    reject(promise, value);\n  }\n}\n\nfunction initializePromise(promise, resolver) {\n  try {\n    resolver(function resolvePromise(value) {\n      resolve(promise, value);\n    }, function rejectPromise(reason) {\n      reject(promise, reason);\n    });\n  } catch (e) {\n    reject(promise, e);\n  }\n}\n\nvar id = 0;\nfunction nextId() {\n  return id++;\n}\n\nfunction makePromise(promise) {\n  promise[PROMISE_ID] = id++;\n  promise._state = undefined;\n  promise._result = undefined;\n  promise._subscribers = [];\n}\n\nfunction validationError() {\n  return new Error('Array Methods must be provided an Array');\n}\n\nvar Enumerator = function () {\n  function Enumerator(Constructor, input) {\n    this._instanceConstructor = Constructor;\n    this.promise = new Constructor(noop);\n\n    if (!this.promise[PROMISE_ID]) {\n      makePromise(this.promise);\n    }\n\n    if (isArray(input)) {\n      this.length = input.length;\n      this._remaining = input.length;\n\n      this._result = new Array(this.length);\n\n      if (this.length === 0) {\n        fulfill(this.promise, this._result);\n      } else {\n        this.length = this.length || 0;\n        this._enumerate(input);\n        if (this._remaining === 0) {\n          fulfill(this.promise, this._result);\n        }\n      }\n    } else {\n      reject(this.promise, validationError());\n    }\n  }\n\n  Enumerator.prototype._enumerate = function _enumerate(input) {\n    for (var i = 0; this._state === PENDING && i < input.length; i++) {\n      this._eachEntry(input[i], i);\n    }\n  };\n\n  Enumerator.prototype._eachEntry = function _eachEntry(entry, i) {\n    var c = this._instanceConstructor;\n    var resolve$$1 = c.resolve;\n\n\n    if (resolve$$1 === resolve$1) {\n      var _then = getThen(entry);\n\n      if (_then === then && entry._state !== PENDING) {\n        this._settledAt(entry._state, i, entry._result);\n      } else if (typeof _then !== 'function') {\n        this._remaining--;\n        this._result[i] = entry;\n      } else if (c === Promise$1) {\n        var promise = new c(noop);\n        handleMaybeThenable(promise, entry, _then);\n        this._willSettleAt(promise, i);\n      } else {\n        this._willSettleAt(new c(function (resolve$$1) {\n          return resolve$$1(entry);\n        }), i);\n      }\n    } else {\n      this._willSettleAt(resolve$$1(entry), i);\n    }\n  };\n\n  Enumerator.prototype._settledAt = function _settledAt(state, i, value) {\n    var promise = this.promise;\n\n\n    if (promise._state === PENDING) {\n      this._remaining--;\n\n      if (state === REJECTED) {\n        reject(promise, value);\n      } else {\n        this._result[i] = value;\n      }\n    }\n\n    if (this._remaining === 0) {\n      fulfill(promise, this._result);\n    }\n  };\n\n  Enumerator.prototype._willSettleAt = function _willSettleAt(promise, i) {\n    var enumerator = this;\n\n    subscribe(promise, undefined, function (value) {\n      return enumerator._settledAt(FULFILLED, i, value);\n    }, function (reason) {\n      return enumerator._settledAt(REJECTED, i, reason);\n    });\n  };\n\n  return Enumerator;\n}();\n\n/**\n  `Promise.all` accepts an array of promises, and returns a new promise which\n  is fulfilled with an array of fulfillment values for the passed promises, or\n  rejected with the reason of the first passed promise to be rejected. It casts all\n  elements of the passed iterable to promises as it runs this algorithm.\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = resolve(2);\n  let promise3 = resolve(3);\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // The array here would be [ 1, 2, 3 ];\n  });\n  ```\n\n  If any of the `promises` given to `all` are rejected, the first promise\n  that is rejected will be given as an argument to the returned promises's\n  rejection handler. For example:\n\n  Example:\n\n  ```javascript\n  let promise1 = resolve(1);\n  let promise2 = reject(new Error(\"2\"));\n  let promise3 = reject(new Error(\"3\"));\n  let promises = [ promise1, promise2, promise3 ];\n\n  Promise.all(promises).then(function(array){\n    // Code here never runs because there are rejected promises!\n  }, function(error) {\n    // error.message === \"2\"\n  });\n  ```\n\n  @method all\n  @static\n  @param {Array} entries array of promises\n  @param {String} label optional string for labeling the promise.\n  Useful for tooling.\n  @return {Promise} promise that is fulfilled when all `promises` have been\n  fulfilled, or rejected if any of them become rejected.\n  @static\n*/\nfunction all(entries) {\n  return new Enumerator(this, entries).promise;\n}\n\n/**\n  `Promise.race` returns a new promise which is settled in the same way as the\n  first passed promise to settle.\n\n  Example:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 2');\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // result === 'promise 2' because it was resolved before promise1\n    // was resolved.\n  });\n  ```\n\n  `Promise.race` is deterministic in that only the state of the first\n  settled promise matters. For example, even if other promises given to the\n  `promises` array argument are resolved, but the first settled promise has\n  become rejected before the other promises became fulfilled, the returned\n  promise will become rejected:\n\n  ```javascript\n  let promise1 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      resolve('promise 1');\n    }, 200);\n  });\n\n  let promise2 = new Promise(function(resolve, reject){\n    setTimeout(function(){\n      reject(new Error('promise 2'));\n    }, 100);\n  });\n\n  Promise.race([promise1, promise2]).then(function(result){\n    // Code here never runs\n  }, function(reason){\n    // reason.message === 'promise 2' because promise 2 became rejected before\n    // promise 1 became fulfilled\n  });\n  ```\n\n  An example real-world use case is implementing timeouts:\n\n  ```javascript\n  Promise.race([ajax('foo.json'), timeout(5000)])\n  ```\n\n  @method race\n  @static\n  @param {Array} promises array of promises to observe\n  Useful for tooling.\n  @return {Promise} a promise which settles in the same way as the first passed\n  promise to settle.\n*/\nfunction race(entries) {\n  /*jshint validthis:true */\n  var Constructor = this;\n\n  if (!isArray(entries)) {\n    return new Constructor(function (_, reject) {\n      return reject(new TypeError('You must pass an array to race.'));\n    });\n  } else {\n    return new Constructor(function (resolve, reject) {\n      var length = entries.length;\n      for (var i = 0; i < length; i++) {\n        Constructor.resolve(entries[i]).then(resolve, reject);\n      }\n    });\n  }\n}\n\n/**\n  `Promise.reject` returns a promise rejected with the passed `reason`.\n  It is shorthand for the following:\n\n  ```javascript\n  let promise = new Promise(function(resolve, reject){\n    reject(new Error('WHOOPS'));\n  });\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  Instead of writing the above, your code now simply becomes the following:\n\n  ```javascript\n  let promise = Promise.reject(new Error('WHOOPS'));\n\n  promise.then(function(value){\n    // Code here doesn't run because the promise is rejected!\n  }, function(reason){\n    // reason.message === 'WHOOPS'\n  });\n  ```\n\n  @method reject\n  @static\n  @param {Any} reason value that the returned promise will be rejected with.\n  Useful for tooling.\n  @return {Promise} a promise rejected with the given `reason`.\n*/\nfunction reject$1(reason) {\n  /*jshint validthis:true */\n  var Constructor = this;\n  var promise = new Constructor(noop);\n  reject(promise, reason);\n  return promise;\n}\n\nfunction needsResolver() {\n  throw new TypeError('You must pass a resolver function as the first argument to the promise constructor');\n}\n\nfunction needsNew() {\n  throw new TypeError(\"Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.\");\n}\n\n/**\n  Promise objects represent the eventual result of an asynchronous operation. The\n  primary way of interacting with a promise is through its `then` method, which\n  registers callbacks to receive either a promise's eventual value or the reason\n  why the promise cannot be fulfilled.\n\n  Terminology\n  -----------\n\n  - `promise` is an object or function with a `then` method whose behavior conforms to this specification.\n  - `thenable` is an object or function that defines a `then` method.\n  - `value` is any legal JavaScript value (including undefined, a thenable, or a promise).\n  - `exception` is a value that is thrown using the throw statement.\n  - `reason` is a value that indicates why a promise was rejected.\n  - `settled` the final resting state of a promise, fulfilled or rejected.\n\n  A promise can be in one of three states: pending, fulfilled, or rejected.\n\n  Promises that are fulfilled have a fulfillment value and are in the fulfilled\n  state.  Promises that are rejected have a rejection reason and are in the\n  rejected state.  A fulfillment value is never a thenable.\n\n  Promises can also be said to *resolve* a value.  If this value is also a\n  promise, then the original promise's settled state will match the value's\n  settled state.  So a promise that *resolves* a promise that rejects will\n  itself reject, and a promise that *resolves* a promise that fulfills will\n  itself fulfill.\n\n\n  Basic Usage:\n  ------------\n\n  ```js\n  let promise = new Promise(function(resolve, reject) {\n    // on success\n    resolve(value);\n\n    // on failure\n    reject(reason);\n  });\n\n  promise.then(function(value) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Advanced Usage:\n  ---------------\n\n  Promises shine when abstracting away asynchronous interactions such as\n  `XMLHttpRequest`s.\n\n  ```js\n  function getJSON(url) {\n    return new Promise(function(resolve, reject){\n      let xhr = new XMLHttpRequest();\n\n      xhr.open('GET', url);\n      xhr.onreadystatechange = handler;\n      xhr.responseType = 'json';\n      xhr.setRequestHeader('Accept', 'application/json');\n      xhr.send();\n\n      function handler() {\n        if (this.readyState === this.DONE) {\n          if (this.status === 200) {\n            resolve(this.response);\n          } else {\n            reject(new Error('getJSON: `' + url + '` failed with status: [' + this.status + ']'));\n          }\n        }\n      };\n    });\n  }\n\n  getJSON('/posts.json').then(function(json) {\n    // on fulfillment\n  }, function(reason) {\n    // on rejection\n  });\n  ```\n\n  Unlike callbacks, promises are great composable primitives.\n\n  ```js\n  Promise.all([\n    getJSON('/posts'),\n    getJSON('/comments')\n  ]).then(function(values){\n    values[0] // => postsJSON\n    values[1] // => commentsJSON\n\n    return values;\n  });\n  ```\n\n  @class Promise\n  @param {Function} resolver\n  Useful for tooling.\n  @constructor\n*/\n\nvar Promise$1 = function () {\n  function Promise(resolver) {\n    this[PROMISE_ID] = nextId();\n    this._result = this._state = undefined;\n    this._subscribers = [];\n\n    if (noop !== resolver) {\n      typeof resolver !== 'function' && needsResolver();\n      this instanceof Promise ? initializePromise(this, resolver) : needsNew();\n    }\n  }\n\n  /**\n  The primary way of interacting with a promise is through its `then` method,\n  which registers callbacks to receive either a promise's eventual value or the\n  reason why the promise cannot be fulfilled.\n   ```js\n  findUser().then(function(user){\n    // user is available\n  }, function(reason){\n    // user is unavailable, and you are given the reason why\n  });\n  ```\n   Chaining\n  --------\n   The return value of `then` is itself a promise.  This second, 'downstream'\n  promise is resolved with the return value of the first promise's fulfillment\n  or rejection handler, or rejected if the handler throws an exception.\n   ```js\n  findUser().then(function (user) {\n    return user.name;\n  }, function (reason) {\n    return 'default name';\n  }).then(function (userName) {\n    // If `findUser` fulfilled, `userName` will be the user's name, otherwise it\n    // will be `'default name'`\n  });\n   findUser().then(function (user) {\n    throw new Error('Found user, but still unhappy');\n  }, function (reason) {\n    throw new Error('`findUser` rejected and we're unhappy');\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // if `findUser` fulfilled, `reason` will be 'Found user, but still unhappy'.\n    // If `findUser` rejected, `reason` will be '`findUser` rejected and we're unhappy'.\n  });\n  ```\n  If the downstream promise does not specify a rejection handler, rejection reasons will be propagated further downstream.\n   ```js\n  findUser().then(function (user) {\n    throw new PedagogicalException('Upstream error');\n  }).then(function (value) {\n    // never reached\n  }).then(function (value) {\n    // never reached\n  }, function (reason) {\n    // The `PedgagocialException` is propagated all the way down to here\n  });\n  ```\n   Assimilation\n  ------------\n   Sometimes the value you want to propagate to a downstream promise can only be\n  retrieved asynchronously. This can be achieved by returning a promise in the\n  fulfillment or rejection handler. The downstream promise will then be pending\n  until the returned promise is settled. This is called *assimilation*.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // The user's comments are now available\n  });\n  ```\n   If the assimliated promise rejects, then the downstream promise will also reject.\n   ```js\n  findUser().then(function (user) {\n    return findCommentsByAuthor(user);\n  }).then(function (comments) {\n    // If `findCommentsByAuthor` fulfills, we'll have the value here\n  }, function (reason) {\n    // If `findCommentsByAuthor` rejects, we'll have the reason here\n  });\n  ```\n   Simple Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let result;\n   try {\n    result = findResult();\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n  findResult(function(result, err){\n    if (err) {\n      // failure\n    } else {\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findResult().then(function(result){\n    // success\n  }, function(reason){\n    // failure\n  });\n  ```\n   Advanced Example\n  --------------\n   Synchronous Example\n   ```javascript\n  let author, books;\n   try {\n    author = findAuthor();\n    books  = findBooksByAuthor(author);\n    // success\n  } catch(reason) {\n    // failure\n  }\n  ```\n   Errback Example\n   ```js\n   function foundBooks(books) {\n   }\n   function failure(reason) {\n   }\n   findAuthor(function(author, err){\n    if (err) {\n      failure(err);\n      // failure\n    } else {\n      try {\n        findBoooksByAuthor(author, function(books, err) {\n          if (err) {\n            failure(err);\n          } else {\n            try {\n              foundBooks(books);\n            } catch(reason) {\n              failure(reason);\n            }\n          }\n        });\n      } catch(error) {\n        failure(err);\n      }\n      // success\n    }\n  });\n  ```\n   Promise Example;\n   ```javascript\n  findAuthor().\n    then(findBooksByAuthor).\n    then(function(books){\n      // found books\n  }).catch(function(reason){\n    // something went wrong\n  });\n  ```\n   @method then\n  @param {Function} onFulfilled\n  @param {Function} onRejected\n  Useful for tooling.\n  @return {Promise}\n  */\n\n  /**\n  `catch` is simply sugar for `then(undefined, onRejection)` which makes it the same\n  as the catch block of a try/catch statement.\n  ```js\n  function findAuthor(){\n  throw new Error('couldn't find that author');\n  }\n  // synchronous\n  try {\n  findAuthor();\n  } catch(reason) {\n  // something went wrong\n  }\n  // async with promises\n  findAuthor().catch(function(reason){\n  // something went wrong\n  });\n  ```\n  @method catch\n  @param {Function} onRejection\n  Useful for tooling.\n  @return {Promise}\n  */\n\n\n  Promise.prototype.catch = function _catch(onRejection) {\n    return this.then(null, onRejection);\n  };\n\n  /**\n    `finally` will be invoked regardless of the promise's fate just as native\n    try/catch/finally behaves\n  \n    Synchronous example:\n  \n    ```js\n    findAuthor() {\n      if (Math.random() > 0.5) {\n        throw new Error();\n      }\n      return new Author();\n    }\n  \n    try {\n      return findAuthor(); // succeed or fail\n    } catch(error) {\n      return findOtherAuther();\n    } finally {\n      // always runs\n      // doesn't affect the return value\n    }\n    ```\n  \n    Asynchronous example:\n  \n    ```js\n    findAuthor().catch(function(reason){\n      return findOtherAuther();\n    }).finally(function(){\n      // author was either found, or not\n    });\n    ```\n  \n    @method finally\n    @param {Function} callback\n    @return {Promise}\n  */\n\n\n  Promise.prototype.finally = function _finally(callback) {\n    var promise = this;\n    var constructor = promise.constructor;\n\n    return promise.then(function (value) {\n      return constructor.resolve(callback()).then(function () {\n        return value;\n      });\n    }, function (reason) {\n      return constructor.resolve(callback()).then(function () {\n        throw reason;\n      });\n    });\n  };\n\n  return Promise;\n}();\n\nPromise$1.prototype.then = then;\nPromise$1.all = all;\nPromise$1.race = race;\nPromise$1.resolve = resolve$1;\nPromise$1.reject = reject$1;\nPromise$1._setScheduler = setScheduler;\nPromise$1._setAsap = setAsap;\nPromise$1._asap = asap;\n\n/*global self*/\nfunction polyfill() {\n  var local = void 0;\n\n  if (typeof global !== 'undefined') {\n    local = global;\n  } else if (typeof self !== 'undefined') {\n    local = self;\n  } else {\n    try {\n      local = Function('return this')();\n    } catch (e) {\n      throw new Error('polyfill failed because global object is unavailable in this environment');\n    }\n  }\n\n  var P = local.Promise;\n\n  if (P) {\n    var promiseToString = null;\n    try {\n      promiseToString = Object.prototype.toString.call(P.resolve());\n    } catch (e) {\n      // silently ignored\n    }\n\n    if (promiseToString === '[object Promise]' && !P.cast) {\n      return;\n    }\n  }\n\n  local.Promise = Promise$1;\n}\n\n// Strange compat..\nPromise$1.polyfill = polyfill;\nPromise$1.Promise = Promise$1;\n\nreturn Promise$1;\n\n})));\n\n\n\n//# sourceMappingURL=es6-promise.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../node_modules/es6-promise/dist/es6-promise.js\n// module id = 6\n// module chunks = 0","document.addEventListener(\"DOMContentLoaded\", () => {\n  $(document).foundation();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./js/app.js","module.exports = $;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"$\"\n// module id = 14\n// module chunks = 0"],"sourceRoot":""}